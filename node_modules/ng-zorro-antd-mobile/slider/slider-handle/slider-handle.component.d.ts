import { OnInit, ElementRef, EventEmitter, OnDestroy } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
export declare class SliderHandle implements OnInit, OnDestroy {
    private _elf;
    private _sanitizer;
    left: number;
    private _min;
    private _max;
    private _step;
    private _value;
    private _disabled;
    private _marks;
    private _handleStyle;
    private _sliderLength;
    private _sliderStart;
    private _minBound;
    private _maxBound;
    private _startX;
    private _isDraging;
    private _handleStatus;
    private _handleOffsetX;
    private _oldValue;
    min: number;
    max: number;
    minBound: number;
    maxBound: number;
    step: number;
    value: number;
    disabled: boolean;
    sliderLength: number;
    sliderStart: number;
    handleStyle: object;
    onChange: EventEmitter<any>;
    onAfterChange: EventEmitter<any>;
    panstart(event: any): void;
    panmove(event: any): void;
    panend(event: any): void;
    constructor(_elf: ElementRef, _sanitizer: DomSanitizer);
    mouseDown: (event: any) => void;
    mouseMove: (event: any) => void;
    mouseUp: (event: any) => void;
    calcValueByPos(pos: any): number;
    calcValue(offset: any): number;
    getClosestPoint(val: any): number;
    getPrecision(step: any): number;
    calcOffset(value: any): number;
    pauseEvent(e: any): void;
    isMouseTarget(event: any): boolean;
    toConsumableArray(arr: any): any[];
    ngOnInit(): void;
    ngOnDestroy(): void;
}
