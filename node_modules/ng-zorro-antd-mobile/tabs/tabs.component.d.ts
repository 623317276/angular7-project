import { DoCheck, AfterContentInit, QueryList, ElementRef, TemplateRef, EventEmitter } from '@angular/core';
import { TabPane } from './tab-pane.component';
export declare type TabDirection = 'horizontal' | 'vertical';
export declare type TabBarPositionType = 'top' | 'bottom' | 'left' | 'right';
export interface OnChangeEvent {
    index: number;
}
export declare class Tabs implements DoCheck, AfterContentInit {
    prefixCls: string;
    selectedKey: number;
    keyToSelect: number;
    paneMoveStyle: string;
    private _startTime;
    private _startPosition;
    private _velocityThreshold;
    private _tabDirection;
    private _tabBarPosition;
    tabPanes: QueryList<TabPane>;
    tabContent: ElementRef;
    tabsBarSwipe: ElementRef;
    defaultTabBar: ElementRef;
    tabsBarContainer: ElementRef;
    page: number;
    swipeable: boolean;
    useOnPan: boolean;
    animated: boolean;
    tabBarUnderlineStyle: object;
    distanceToChangeTab: number;
    tabBarActiveTextColor: string;
    tabBarInactiveTextColor: string;
    renderTabBar: TemplateRef<void>;
    tabBarBackgroundColor: string;
    tabBarTextStyle: object;
    /** should be removed when https://github.com/angular/angular/issues/20810 resolved **/
    tabPanesComponent: QueryList<TabPane>;
    activeTab: number;
    tabBarPosition: TabBarPositionType;
    tabDirection: TabDirection;
    onChange: EventEmitter<OnChangeEvent>;
    onTabClick: EventEmitter<OnChangeEvent>;
    amTabs: boolean;
    amTabsTop: boolean;
    amTabsLeft: boolean;
    amTabsRight: boolean;
    amTabsBottom: boolean;
    amTabsVertical: boolean;
    amTabsHorizontal: boolean;
    constructor();
    clickTab(index: number): void;
    getCurrentTabPanes(): QueryList<TabPane>;
    onTouchStart(event: any): void;
    onTouchMove(event: any): void;
    onTouchEnd(event: any): void;
    ngAfterContentInit(): void;
    ngDoCheck(): void;
    private selectTabPane;
    private getVelocity;
}
