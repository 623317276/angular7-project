/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ElementRef, ViewEncapsulation, HostBinding } from '@angular/core';
export class Slider {
    /**
     * @param {?} _elf
     */
    constructor(_elf) {
        this._elf = _elf;
        this.prefixCls = 'am-slider';
        this.offset = 0;
        this.length = 0;
        this._min = 0;
        this._max = 100;
        this._step = 1;
        this._value = 10;
        this._disabled = false;
        this._marks = {};
        this._dots = false;
        this._included = true;
        this._trackStyle = {};
        this.onChange = new EventEmitter();
        this.onAfterChange = new EventEmitter();
        this.amSliderWrapper = true;
    }
    /**
     * @return {?}
     */
    get min() {
        return this._min;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set min(value) {
        this._min = value;
    }
    /**
     * @return {?}
     */
    get max() {
        return this._max;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set max(value) {
        this._max = value;
    }
    /**
     * @return {?}
     */
    get step() {
        return this._step;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set step(value) {
        this._step = value;
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        this._value = value;
        this.valueRange();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set defaultValue(value) {
        this._defaultValue = value;
        this._value = this._defaultValue;
    }
    /**
     * @return {?}
     */
    get disabled() {
        return this._disabled;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set disabled(value) {
        this._disabled = value;
        this.setCls();
    }
    /**
     * @return {?}
     */
    get marks() {
        return this._marks;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set marks(value) {
        this._marks = value;
    }
    /**
     * @return {?}
     */
    get dots() {
        return this._dots;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set dots(value) {
        this._dots = value;
    }
    /**
     * @return {?}
     */
    get included() {
        return this._included;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set included(value) {
        this._included = value;
    }
    /**
     * @return {?}
     */
    get handleStyle() {
        return this._handleStyle;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set handleStyle(value) {
        this._handleStyle = value;
    }
    /**
     * @return {?}
     */
    get trackStyle() {
        return this._trackStyle;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set trackStyle(value) {
        this._trackStyle = value;
    }
    /**
     * @return {?}
     */
    get railStyle() {
        return this._railStyle;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set railStyle(value) {
        this._railStyle = value;
    }
    /**
     * @return {?}
     */
    setCls() {
        this.sliderCls = {
            [`${this.prefixCls}-disabled`]: this._disabled
        };
    }
    /**
     * @param {?} e
     * @return {?}
     */
    handleChange(e) {
        setTimeout(() => {
            this.offset = 0;
            this.length = ((e - this._min) * 100) / (this._max - this._min);
            this._value = e;
        }, 10);
        this.onChange.emit(e);
    }
    /**
     * @param {?} e
     * @return {?}
     */
    handleAfterChange(e) {
        setTimeout(() => {
            this.offset = 0;
            this.length = ((e - this._min) * 100) / (this._max - this._min);
            this._value = e;
        }, 10);
        this.onAfterChange.emit(e);
    }
    /**
     * @return {?}
     */
    valueRange() {
        if (this._value < this._min) {
            this._value = this._min;
        }
        if (this._value > this._max) {
            this._value = this._max;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.setCls();
        this.valueRange();
        /** @type {?} */
        const sliderCoords = this._elf.nativeElement.getElementsByClassName('am-slider')[0].getBoundingClientRect();
        this.sliderLength = sliderCoords.width;
        this.sliderStart = sliderCoords.left;
    }
}
Slider.decorators = [
    { type: Component, args: [{
                selector: 'Slider , nzm-slider',
                template: "<div class=\"am-slider\" [ngClass]=\"sliderCls\">\n  <div class=\"am-slider-rail\" [ngStyle]=\"railStyle\"></div>\n  <SliderTrack [className]=\"'am-slider-track'\"\n               [style]=\"trackStyle\"\n               [offset]=\"offset\"\n               [length]=\"length\"\n               [included]=\"included\"\n  ></SliderTrack>\n  <SliderSteps [max]=\"max\"\n               [min]=\"min\"\n               [dots]=\"dots\"\n               [step]=\"step\"\n               [marks]=\"marks\"\n               [lowerBound]=\"min\"\n               [upperBound]=\"value\"\n               [included]=\"included\"\n  ></SliderSteps>\n  <SliderHandle [max]=\"max\"\n                [min]=\"min\"\n                [value]=\"value\"\n                [step]=\"step\"\n                [disabled]=\"disabled\"\n                [handleStyle]=\"handleStyle\"\n                [sliderStart]=\"sliderStart\"\n                [sliderLength]=\"sliderLength\"\n                (onChange)=\"handleChange($event)\"\n                (onAfterChange)=\"handleAfterChange($event)\"\n  ></SliderHandle>\n  <SliderMarks [max]=\"max\"\n               [min]=\"min\"\n               [marks]=\"marks\"\n               [lowerBound]=\"min\"\n               [upperBound]=\"value\"\n               [included]=\"included\"\n  ></SliderMarks>\n</div>",
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
Slider.ctorParameters = () => [
    { type: ElementRef }
];
Slider.propDecorators = {
    min: [{ type: Input }],
    max: [{ type: Input }],
    step: [{ type: Input }],
    value: [{ type: Input }],
    defaultValue: [{ type: Input }],
    disabled: [{ type: Input }],
    marks: [{ type: Input }],
    dots: [{ type: Input }],
    included: [{ type: Input }],
    handleStyle: [{ type: Input }],
    trackStyle: [{ type: Input }],
    railStyle: [{ type: Input }],
    onChange: [{ type: Output }],
    onAfterChange: [{ type: Output }],
    amSliderWrapper: [{ type: HostBinding, args: ['class.am-slider-wrapper',] }]
};
if (false) {
    /** @type {?} */
    Slider.prototype.prefixCls;
    /** @type {?} */
    Slider.prototype.sliderLength;
    /** @type {?} */
    Slider.prototype.sliderStart;
    /** @type {?} */
    Slider.prototype.sliderCls;
    /** @type {?} */
    Slider.prototype.offset;
    /** @type {?} */
    Slider.prototype.length;
    /** @type {?} */
    Slider.prototype._min;
    /** @type {?} */
    Slider.prototype._max;
    /** @type {?} */
    Slider.prototype._step;
    /** @type {?} */
    Slider.prototype._value;
    /** @type {?} */
    Slider.prototype._defaultValue;
    /** @type {?} */
    Slider.prototype._disabled;
    /** @type {?} */
    Slider.prototype._marks;
    /** @type {?} */
    Slider.prototype._dots;
    /** @type {?} */
    Slider.prototype._included;
    /** @type {?} */
    Slider.prototype._handleStyle;
    /** @type {?} */
    Slider.prototype._trackStyle;
    /** @type {?} */
    Slider.prototype._railStyle;
    /** @type {?} */
    Slider.prototype.onChange;
    /** @type {?} */
    Slider.prototype.onAfterChange;
    /** @type {?} */
    Slider.prototype.amSliderWrapper;
    /** @type {?} */
    Slider.prototype._elf;
}

//# sourceMappingURL=data:application/json;base64,