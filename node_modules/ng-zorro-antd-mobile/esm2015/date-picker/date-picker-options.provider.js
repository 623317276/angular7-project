/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { EventEmitter } from '@angular/core';
/**
 * @record
 */
export function DatePickerOptionsInterface() { }
/** @type {?} */
DatePickerOptionsInterface.prototype.mode;
/** @type {?} */
DatePickerOptionsInterface.prototype.value;
/** @type {?} */
DatePickerOptionsInterface.prototype.minDate;
/** @type {?} */
DatePickerOptionsInterface.prototype.maxDate;
/** @type {?} */
DatePickerOptionsInterface.prototype.use12Hours;
/** @type {?} */
DatePickerOptionsInterface.prototype.minuteStep;
/** @type {?} */
DatePickerOptionsInterface.prototype.locale;
/** @type {?} */
DatePickerOptionsInterface.prototype.disabled;
/** @type {?} */
DatePickerOptionsInterface.prototype.mask;
/** @type {?} */
DatePickerOptionsInterface.prototype.title;
/** @type {?} */
DatePickerOptionsInterface.prototype.okText;
/** @type {?} */
DatePickerOptionsInterface.prototype.dismissText;
/** @type {?} */
DatePickerOptionsInterface.prototype.appendToBody;
export class DatePickerOptions {
    constructor() {
        this.mode = 'date';
        this.value = new Date();
        this.minDate = new Date(2000, 6, 1, 0, 0, 0);
        this.maxDate = new Date(2030, 1, 1, 23, 59, 59);
        this.use12Hours = false;
        this.minuteStep = 1;
        this.data = [];
        this.mask = true;
        this.title = '';
        this.okText = '确定';
        this.dismissText = '取消';
        this.disabled = false;
        this.appendToBody = false;
        this.onOk = new EventEmitter();
        this.onDismiss = new EventEmitter();
        this.onValueChange = new EventEmitter();
        this.onChange = new EventEmitter();
    }
}
if (false) {
    /** @type {?} */
    DatePickerOptions.prototype.mode;
    /** @type {?} */
    DatePickerOptions.prototype.value;
    /** @type {?} */
    DatePickerOptions.prototype.minDate;
    /** @type {?} */
    DatePickerOptions.prototype.maxDate;
    /** @type {?} */
    DatePickerOptions.prototype.use12Hours;
    /** @type {?} */
    DatePickerOptions.prototype.minuteStep;
    /** @type {?} */
    DatePickerOptions.prototype.data;
    /** @type {?} */
    DatePickerOptions.prototype.mask;
    /** @type {?} */
    DatePickerOptions.prototype.title;
    /** @type {?} */
    DatePickerOptions.prototype.okText;
    /** @type {?} */
    DatePickerOptions.prototype.dismissText;
    /** @type {?} */
    DatePickerOptions.prototype.disabled;
    /** @type {?} */
    DatePickerOptions.prototype.locale;
    /** @type {?} */
    DatePickerOptions.prototype.appendToBody;
    /** @type {?} */
    DatePickerOptions.prototype.onOk;
    /** @type {?} */
    DatePickerOptions.prototype.onDismiss;
    /** @type {?} */
    DatePickerOptions.prototype.onValueChange;
    /** @type {?} */
    DatePickerOptions.prototype.onChange;
    /** @type {?} */
    DatePickerOptions.prototype.hidePicker;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXItb3B0aW9ucy5wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiZGF0ZS1waWNrZXIvZGF0ZS1waWNrZXItb3B0aW9ucy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCN0MsTUFBTTs7b0JBQ0csTUFBTTtxQkFDTCxJQUFJLElBQUksRUFBRTt1QkFDUixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQzt1QkFDN0IsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7MEJBQzdCLEtBQUs7MEJBQ0wsQ0FBQztvQkFDUCxFQUFFO29CQUNPLElBQUk7cUJBQ1osRUFBRTtzQkFDRCxJQUFJOzJCQUNDLElBQUk7d0JBQ1AsS0FBSzs0QkFFRCxLQUFLO29CQUNNLElBQUksWUFBWSxFQUFFO3lCQUNiLElBQUksWUFBWSxFQUFFOzZCQUNkLElBQUksWUFBWSxFQUFFO3dCQUN2QixJQUFJLFlBQVksRUFBRTs7Q0FFakQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHpoX0NOIH0gZnJvbSAnLi4vbG9jYWxlLXByb3ZpZGVyL2xhbmd1YWdlcyc7XG5leHBvcnQgaW50ZXJmYWNlIERhdGVQaWNrZXJPcHRpb25zSW50ZXJmYWNlIHtcbiAgbW9kZTogc3RyaW5nO1xuICB2YWx1ZTogRGF0ZTtcbiAgbWluRGF0ZTogRGF0ZTtcbiAgbWF4RGF0ZTogRGF0ZTtcbiAgdXNlMTJIb3VyczogYm9vbGVhbjtcbiAgbWludXRlU3RlcDogTnVtYmVyO1xuICBsb2NhbGU6IGFueTtcbiAgZGlzYWJsZWQ6IGJvb2xlYW47XG4gIG1hc2s6IGJvb2xlYW47XG4gIHRpdGxlOiBzdHJpbmc7XG4gIG9rVGV4dDogc3RyaW5nO1xuICBkaXNtaXNzVGV4dDogc3RyaW5nO1xuICBhcHBlbmRUb0JvZHk6IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjbGFzcyBEYXRlUGlja2VyT3B0aW9ucyBpbXBsZW1lbnRzIERhdGVQaWNrZXJPcHRpb25zSW50ZXJmYWNlIHtcbiAgbW9kZSA9ICdkYXRlJztcbiAgdmFsdWUgPSBuZXcgRGF0ZSgpO1xuICBtaW5EYXRlID0gbmV3IERhdGUoMjAwMCwgNiwgMSwgMCwgMCwgMCk7XG4gIG1heERhdGUgPSBuZXcgRGF0ZSgyMDMwLCAxLCAxLCAyMywgNTksIDU5KTtcbiAgdXNlMTJIb3VycyA9IGZhbHNlO1xuICBtaW51dGVTdGVwID0gMTtcbiAgZGF0YSA9IFtdO1xuICBtYXNrOiBib29sZWFuID0gdHJ1ZTtcbiAgdGl0bGUgPSAnJztcbiAgb2tUZXh0ID0gJ+ehruWumic7XG4gIGRpc21pc3NUZXh0ID0gJ+WPlua2iCc7XG4gIGRpc2FibGVkID0gZmFsc2U7XG4gIGxvY2FsZTtcbiAgYXBwZW5kVG9Cb2R5ID0gZmFsc2U7XG4gIG9uT2s6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBvbkRpc21pc3M6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBvblZhbHVlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgb25DaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBoaWRlUGlja2VyOiAoKSA9PiB2b2lkO1xufVxuIl19