/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
export class TextareaItem {
    constructor() {
        this.prefixCls = 'am-textarea';
        this.isTitleString = true;
        this.maxLength = Infinity;
        this._prefixListCls = 'am-list';
        this._defaultValue = '';
        this._placeholder = '';
        this._editable = true;
        this._disabled = false;
        this._clear = false;
        this._rows = 1;
        this._error = false;
        this._labelNumber = 5;
        this._name = '';
        this._focus = false;
        this._autoFocus = false;
        this._isClear = false;
        this._isClickingClear = false;
        this.onChange = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onErrorClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} v
     * @return {?}
     */
    set value(v) {
        if (typeof v === undefined || v === null) {
            this._value = '';
        }
        this._value = v;
        this.textRef.nativeElement.value = this._value;
    }
    /**
     * @return {?}
     */
    get defaultValue() {
        return this._defaultValue;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set defaultValue(value) {
        this._defaultValue = value;
        this._value = this._defaultValue;
        this.textRef.nativeElement.value = this._value;
    }
    /**
     * @return {?}
     */
    get placeholder() {
        return this._placeholder;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set placeholder(value) {
        this._placeholder = value;
    }
    /**
     * @return {?}
     */
    get editable() {
        return this._editable;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set editable(value) {
        this._editable = value;
    }
    /**
     * @return {?}
     */
    get disabled() {
        return this._disabled;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set disabled(value) {
        this._disabled = value;
        this.setCls();
    }
    /**
     * @return {?}
     */
    get clear() {
        return this._clear;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set clear(value) {
        this._clear = value;
    }
    /**
     * @return {?}
     */
    get rows() {
        return this._rows;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set rows(value) {
        this._rows = value;
        this.setCls();
    }
    /**
     * @return {?}
     */
    get error() {
        return this._error;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set error(value) {
        this._error = value;
        this.setCls();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set labelNumber(value) {
        this._labelNumber = value;
        this.setCls();
    }
    /**
     * @return {?}
     */
    get count() {
        return this._count;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set count(value) {
        this._count = value;
        this.setCls();
        this.setCharacterLength();
    }
    /**
     * @return {?}
     */
    get prefixListCls() {
        return this._prefixListCls;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set prefixListCls(value) {
        this._prefixListCls = value;
        this.setCls();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set name(value) {
        this._name = value;
        this.textRef.nativeElement.name = this._name;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set autoHeight(value) {
        this._autoHeight = value;
    }
    /**
     * @return {?}
     */
    get title() {
        return this._title;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set title(value) {
        this._title = value;
        this.isTitleString = true;
        if (typeof value !== 'string') {
            this.isTitleString = false;
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set focus(value) {
        if (value && value.focus) {
            this.textRef.nativeElement.focus();
            this.inputFocus('');
        }
    }
    /**
     * @return {?}
     */
    get autoFocus() {
        return this._autoFocus;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set autoFocus(value) {
        this._autoFocus = value;
    }
    /**
     * @return {?}
     */
    setCls() {
        this.hasCount = this._count > 0 && this._rows > 1;
        this.wrapCls = {
            [`${this._prefixListCls}-item`]: true,
            [`${this.prefixCls}-item`]: true,
            [`${this.prefixCls}-disabled`]: this._disabled,
            [`${this.prefixCls}-error`]: this._error,
            [`${this.prefixCls}-focus`]: this._focus,
            [`${this.prefixCls}-item-single-line`]: this._rows === 1 && !this._autoHeight,
            [`${this.prefixCls}-has-count`]: this.hasCount
        };
        this.labelCls = {
            [`${this.prefixCls}-label`]: true,
            [`${this.prefixCls}-label-2`]: this._labelNumber === 2,
            [`${this.prefixCls}-label-3`]: this._labelNumber === 3,
            [`${this.prefixCls}-label-4`]: this._labelNumber === 4,
            [`${this.prefixCls}-label-5`]: this._labelNumber === 5,
            [`${this.prefixCls}-label-6`]: this._labelNumber === 6,
            [`${this.prefixCls}-label-7`]: this._labelNumber === 7
        };
        this.controlCls = { [`${this.prefixCls}-control`]: true };
        this.clearCls = {
            [`${this.prefixCls}-clear-active`]: this._isClickingClear
        };
    }
    /**
     * @return {?}
     */
    setCharacterLength() {
        this.characterLength = this.countSymbols(this._value);
        if (this._count > 0) {
            this.maxLength = this._count - this.characterLength + (this._value ? this._value.length : 0);
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    inputChange(e) {
        this._value = e;
        this.textRef.nativeElement.value = this._value;
        this.setCharacterLength();
        this.onChange.emit(this._value);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    inputFocus(value) {
        this._focus = true;
        this.setCls();
        if (value !== undefined) {
            this.onFocus.emit(value);
        }
    }
    /**
     * @param {?} value
     * @param {?} event
     * @return {?}
     */
    inputBlur(value, event) {
        setTimeout(() => {
            this._focus = false;
            this.setCls();
            this.onBlur.emit(value);
            this._isClear = false;
        }, 100);
    }
    /**
     * @return {?}
     */
    clearInput() {
        this._isClickingClear = true;
        this.setCls();
        setTimeout(() => {
            this._value = '';
            this.inputChange('');
            this.inputFocus(this._value);
            this._isClickingClear = false;
            this.setCls();
        }, 100);
    }
    /**
     * @param {?} e
     * @return {?}
     */
    errorClick(e) {
        if (this.onErrorClick) {
            this.onErrorClick.emit(e);
        }
    }
    /**
     * @return {?}
     */
    reAlignHeight() {
        /** @type {?} */
        const textareaDom = this.textRef.nativeElement;
        textareaDom.style.height = '';
        textareaDom.style.height = `${textareaDom.scrollHeight}px`;
    }
    /**
     * @param {?=} text
     * @return {?}
     */
    countSymbols(text = '') {
        /** @type {?} */
        const regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]|\n/g;
        return text.replace(regexAstralSymbols, '_').length;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.setCls();
        this.setCharacterLength();
        this.textRef.nativeElement.value = this._value;
    }
    /**
     * @return {?}
     */
    ngAfterContentChecked() {
        if (this._autoHeight && this._focus) {
            this.reAlignHeight();
        }
    }
}
TextareaItem.decorators = [
    { type: Component, args: [{
                selector: 'TextareaItem , nzm-textarea-item',
                template: "<div [ngClass]=\"wrapCls\">\n  <div *ngIf=\"title &&  isTitleString\" [ngClass]=\"labelCls\">{{title}}</div>\n  <div *ngIf=\"title &&  !isTitleString\" [ngClass]=\"labelCls\">\n    <ng-template [ngTemplateOutlet]=\"title\"></ng-template>\n  </div>\n  <div [ngClass]=\"controlCls\">\n    <textarea #text\n              [rows]=\"rows\"\n              [maxlength]=\"maxLength\"\n              [(ngModel)]=\"value\"\n              [defaultValue]=\"defaultValue\"\n              [placeholder]=\"placeholder\"\n              [disabled]=\"disabled\"\n              [readOnly]=\"!editable\"\n              [autofocus]=\"autoFocus\"\n              (ngModelChange)=\"inputChange($event)\"\n              (blur)=\"inputBlur(value , $event)\"\n              (focus)=\"inputFocus(value)\"\n    ></textarea>\n  </div>\n  <div *ngIf=\"clear && editable && !disabled && (value && value.length >0 )\"\n       class=\"{{prefixCls}}-clear\"\n       [ngClass]=\"clearCls\"\n       (click)=\"clearInput()\"\n  ></div>\n  <div *ngIf=\"error\" class=\"{{prefixCls}}-error-extra\" (click)=\"errorClick($event)\"></div>\n  <span *ngIf=\"hasCount\" class=\"{{prefixCls}}-count\">\n    <span>{{characterLength}}</span>/{{count}}\n  </span>\n</div>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => TextareaItem),
                        multi: true
                    }
                ]
            }] }
];
/** @nocollapse */
TextareaItem.ctorParameters = () => [];
TextareaItem.propDecorators = {
    textRef: [{ type: ViewChild, args: ['text',] }],
    value: [{ type: Input }],
    defaultValue: [{ type: Input }],
    placeholder: [{ type: Input }],
    editable: [{ type: Input }],
    disabled: [{ type: Input }],
    clear: [{ type: Input }],
    rows: [{ type: Input }],
    error: [{ type: Input }],
    labelNumber: [{ type: Input }],
    count: [{ type: Input }],
    prefixListCls: [{ type: Input }],
    name: [{ type: Input }],
    autoHeight: [{ type: Input }],
    title: [{ type: Input }],
    focus: [{ type: Input }],
    autoFocus: [{ type: Input }],
    onChange: [{ type: Output }],
    onBlur: [{ type: Output }],
    onFocus: [{ type: Output }],
    onErrorClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    TextareaItem.prototype.prefixCls;
    /** @type {?} */
    TextareaItem.prototype.wrapCls;
    /** @type {?} */
    TextareaItem.prototype.labelCls;
    /** @type {?} */
    TextareaItem.prototype.controlCls;
    /** @type {?} */
    TextareaItem.prototype.clearCls;
    /** @type {?} */
    TextareaItem.prototype.hasCount;
    /** @type {?} */
    TextareaItem.prototype.characterLength;
    /** @type {?} */
    TextareaItem.prototype.isTitleString;
    /** @type {?} */
    TextareaItem.prototype.maxLength;
    /** @type {?} */
    TextareaItem.prototype._prefixListCls;
    /** @type {?} */
    TextareaItem.prototype._value;
    /** @type {?} */
    TextareaItem.prototype._defaultValue;
    /** @type {?} */
    TextareaItem.prototype._placeholder;
    /** @type {?} */
    TextareaItem.prototype._editable;
    /** @type {?} */
    TextareaItem.prototype._disabled;
    /** @type {?} */
    TextareaItem.prototype._clear;
    /** @type {?} */
    TextareaItem.prototype._rows;
    /** @type {?} */
    TextareaItem.prototype._count;
    /** @type {?} */
    TextareaItem.prototype._autoHeight;
    /** @type {?} */
    TextareaItem.prototype._error;
    /** @type {?} */
    TextareaItem.prototype._labelNumber;
    /** @type {?} */
    TextareaItem.prototype._name;
    /** @type {?} */
    TextareaItem.prototype._title;
    /** @type {?} */
    TextareaItem.prototype._focus;
    /** @type {?} */
    TextareaItem.prototype._autoFocus;
    /** @type {?} */
    TextareaItem.prototype._isClear;
    /** @type {?} */
    TextareaItem.prototype._isClickingClear;
    /** @type {?} */
    TextareaItem.prototype.textRef;
    /** @type {?} */
    TextareaItem.prototype.onChange;
    /** @type {?} */
    TextareaItem.prototype.onBlur;
    /** @type {?} */
    TextareaItem.prototype.onFocus;
    /** @type {?} */
    TextareaItem.prototype.onErrorClick;
}

//# sourceMappingURL=data:application/json;base64,