/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
export class BaseOptions {
    constructor() {
        this.visible = false;
        this.focus = true;
        this.closable = false;
        this.maskClosable = true;
        this.transparent = false;
        this.popup = false;
        this.transitionName = 'am-zoom';
        this.maskTransitionName = 'am-fade';
    }
}
if (false) {
    /** @type {?} */
    BaseOptions.prototype.visible;
    /** @type {?} */
    BaseOptions.prototype.focus;
    /** @type {?} */
    BaseOptions.prototype.closable;
    /** @type {?} */
    BaseOptions.prototype.maskClosable;
    /** @type {?} */
    BaseOptions.prototype.onClose;
    /** @type {?} */
    BaseOptions.prototype.transparent;
    /** @type {?} */
    BaseOptions.prototype.popup;
    /** @type {?} */
    BaseOptions.prototype.animationType;
    /** @type {?} */
    BaseOptions.prototype.title;
    /** @type {?} */
    BaseOptions.prototype.footer;
    /** @type {?} */
    BaseOptions.prototype.platform;
    /** @type {?} */
    BaseOptions.prototype.className;
    /** @type {?} */
    BaseOptions.prototype.wrapClassName;
    /** @type {?} */
    BaseOptions.prototype.message;
    /** @type {?} */
    BaseOptions.prototype.actions;
    /** @type {?} */
    BaseOptions.prototype.callbackOrActions;
    /** @type {?} */
    BaseOptions.prototype.type;
    /** @type {?} */
    BaseOptions.prototype.defaultValue;
    /** @type {?} */
    BaseOptions.prototype.placeholders;
    /** @type {?} */
    BaseOptions.prototype.operation;
    /** @type {?} */
    BaseOptions.prototype.transitionName;
    /** @type {?} */
    BaseOptions.prototype.maskTransitionName;
    /** @type {?} */
    BaseOptions.prototype.close;
}
export class ModalOptions extends BaseOptions {
}
ModalOptions.decorators = [
    { type: Injectable }
];
export class AlertOptions extends BaseOptions {
}
AlertOptions.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * 	提示信息
     * @type {?}
     */
    AlertOptions.prototype.message;
    /**
     * 按钮组, [{text, onPress, style}]
     * @type {?}
     */
    AlertOptions.prototype.actions;
}
export class PromptOptions extends BaseOptions {
}
PromptOptions.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * 	提示信息
     * @type {?}
     */
    PromptOptions.prototype.message;
    /**
     * 按钮组 [{text, onPress}]
     * 或回调函数 Array or Function
     * @type {?}
     */
    PromptOptions.prototype.callbackOrActions;
    /**
     * prompt 的样式
     * String (default, secure-text, login-password)
     * @type {?}
     */
    PromptOptions.prototype.type;
    /**
     * 默认值(input 为 password 类型不支持)
     * @type {?}
     */
    PromptOptions.prototype.defaultValue;
    /**
     * ['', '']
     * @type {?}
     */
    PromptOptions.prototype.placeholders;
}
export class OperationOptions extends BaseOptions {
}
OperationOptions.decorators = [
    { type: Injectable }
];
if (false) {
    /**
     * 按钮组, [{text, onPress, style}]
     * @type {?}
     */
    OperationOptions.prototype.actions;
}
export class Action {
}
Action.decorators = [
    { type: Injectable }
];
if (false) {
    /** @type {?} */
    Action.prototype.text;
    /** @type {?} */
    Action.prototype.onPress;
    /** @type {?} */
    Action.prototype.style;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtb3B0aW9ucy5wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsibW9kYWwvbW9kYWwtb3B0aW9ucy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBZSxNQUFNLGVBQWUsQ0FBQztBQUV4RCxNQUFNOzt1QkFDZ0IsS0FBSztxQkFDUCxJQUFJO3dCQUNELEtBQUs7NEJBQ0QsSUFBSTsyQkFFTCxLQUFLO3FCQUNYLEtBQUs7OEJBY0csU0FBUztrQ0FDTCxTQUFTOztDQUV4Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdELE1BQU0sbUJBQW9CLFNBQVEsV0FBVzs7O1lBRDVDLFVBQVU7O0FBSVgsTUFBTSxtQkFBb0IsU0FBUSxXQUFXOzs7WUFENUMsVUFBVTs7Ozs7Ozs7Ozs7Ozs7QUFjWCxNQUFNLG9CQUFxQixTQUFRLFdBQVc7OztZQUQ3QyxVQUFVOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0JYLE1BQU0sdUJBQXdCLFNBQVEsV0FBVzs7O1lBRGhELFVBQVU7Ozs7Ozs7OztBQVNYLE1BQU07OztZQURMLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgY2xhc3MgQmFzZU9wdGlvbnMge1xuICB2aXNpYmxlPzogYm9vbGVhbiA9IGZhbHNlO1xuICBmb2N1cz86IGJvb2xlYW4gPSB0cnVlO1xuICBjbG9zYWJsZT86IGJvb2xlYW4gPSBmYWxzZTtcbiAgbWFza0Nsb3NhYmxlPzogYm9vbGVhbiA9IHRydWU7XG4gIG9uQ2xvc2U/OiBhbnk7XG4gIHRyYW5zcGFyZW50PzogYm9vbGVhbiA9IGZhbHNlO1xuICBwb3B1cD86IGJvb2xlYW4gPSBmYWxzZTtcbiAgYW5pbWF0aW9uVHlwZT86IHN0cmluZztcbiAgdGl0bGU/OiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+O1xuICBmb290ZXI/OiBBcnJheTxhbnk+O1xuICBwbGF0Zm9ybT86IHN0cmluZztcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICB3cmFwQ2xhc3NOYW1lPzogc3RyaW5nO1xuICBtZXNzYWdlPzogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PjtcbiAgYWN0aW9ucz86IEFycmF5PGFueT47XG4gIGNhbGxiYWNrT3JBY3Rpb25zPzogQXJyYXk8YW55PjtcbiAgdHlwZT86IHN0cmluZztcbiAgZGVmYXVsdFZhbHVlPzogc3RyaW5nO1xuICBwbGFjZWhvbGRlcnM/OiBBcnJheTxhbnk+O1xuICBvcGVyYXRpb24/OiBib29sZWFuO1xuICB0cmFuc2l0aW9uTmFtZT86IHN0cmluZyA9ICdhbS16b29tJztcbiAgbWFza1RyYW5zaXRpb25OYW1lPzogc3RyaW5nID0gJ2FtLWZhZGUnO1xuICBjbG9zZTogKCkgPT4gdm9pZDtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE1vZGFsT3B0aW9ucyBleHRlbmRzIEJhc2VPcHRpb25zIHt9XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBbGVydE9wdGlvbnMgZXh0ZW5kcyBCYXNlT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBcdOaPkOekuuS/oeaBr1xuICAgKi9cbiAgbWVzc2FnZT86IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgLyoqXG4gICAqIOaMiemSrue7hCwgW3t0ZXh0LCBvblByZXNzLCBzdHlsZX1dXG4gICAqL1xuICBhY3Rpb25zPzogQXJyYXk8YW55Pjtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFByb21wdE9wdGlvbnMgZXh0ZW5kcyBCYXNlT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBcdOaPkOekuuS/oeaBr1xuICAgKi9cbiAgbWVzc2FnZT86IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgLyoqXG4gICAqIOaMiemSrue7hCBbe3RleHQsIG9uUHJlc3N9XVxuICAgKiDmiJblm57osIPlh73mlbAgQXJyYXkgb3IgRnVuY3Rpb25cbiAgICovXG4gIGNhbGxiYWNrT3JBY3Rpb25zPzogQXJyYXk8YW55PjtcblxuICAvKipcbiAgICogcHJvbXB0IOeahOagt+W8j1xuICAgKiBTdHJpbmcgKGRlZmF1bHQsIHNlY3VyZS10ZXh0LCBsb2dpbi1wYXNzd29yZClcbiAgICovXG4gIHR5cGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIOm7mOiupOWAvChpbnB1dCDkuLogcGFzc3dvcmQg57G75Z6L5LiN5pSv5oyBKVxuICAgKi9cbiAgZGVmYXVsdFZhbHVlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBbJycsICcnXVxuICAgKi9cbiAgcGxhY2Vob2xkZXJzPzogQXJyYXk8YW55Pjtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE9wZXJhdGlvbk9wdGlvbnMgZXh0ZW5kcyBCYXNlT3B0aW9ucyB7XG4gIC8qKlxuICAgKiDmjInpkq7nu4QsIFt7dGV4dCwgb25QcmVzcywgc3R5bGV9XVxuICAgKi9cbiAgYWN0aW9ucz86IEFycmF5PGFueT47XG59XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBY3Rpb24ge1xuICB0ZXh0Pzogc3RyaW5nO1xuICBvblByZXNzPzogRnVuY3Rpb247XG4gIHN0eWxlPzoge307XG59XG4iXX0=