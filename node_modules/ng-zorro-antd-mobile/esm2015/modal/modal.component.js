/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, TemplateRef, EventEmitter, ViewEncapsulation, ViewChild } from '@angular/core';
import { NgSwitch, NgSwitchCase } from '@angular/common';
import { ModalOptions } from './modal-options.provider';
export class ModalComponent {
    /**
     * @param {?} _option
     */
    constructor(_option) {
        this._option = _option;
        this.defaultProps = {
            visible: false,
            prefixCls: 'am-modal',
            transparent: false,
            popup: false,
            animationType: 'slide-down',
            animated: true,
            style: {},
            footer: [],
            closable: false,
            maskClosable: false,
            operation: false,
            platform: 'ios',
            className: '',
            wrapClassName: '',
            message: '',
            actions: [],
            callbackOrActions: [],
            type: '',
            defaultValue: '',
            placeholders: []
        };
        this.value = '';
        this.passwordValue = '';
        this.autoFocus = { focus: true, date: new Date() };
        this.transitionName = '';
        this.maskTransitionName = '';
        this.isTitleString = true;
        this.isMessageString = true;
        this.wrapCls = {};
        this.cls = {};
        this.btnGroupClass = {};
        this.data = {};
        this._title = '';
        this._message = '';
        this._focus = true;
        this.onClose = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get title() {
        return this._title;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set title(value) {
        if (value instanceof TemplateRef) {
            this.isTitleString = false;
        }
        else {
            this.isTitleString = true;
        }
        this._title = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set visible(value) {
        if (!value) {
            this.leaveAnimation();
        }
        else {
            this.defaultProps.visible = value;
            if (this.defaultProps.animated) {
                if (this.defaultProps.transparent) {
                    this.transitionName = this.maskTransitionName = 'am-fade-enter am-fade-enter-active';
                }
                else {
                    this.transitionName = this.maskTransitionName = 'am-slide-up-enter am-slide-up-enter-active';
                }
                if (this.defaultProps.popup) {
                    this.transitionName =
                        this.defaultProps.animationType === 'slide-up'
                            ? 'am-slide-up-enter am-slide-up-enter-active'
                            : 'am-slide-down-enter am-slide-down-enter-active';
                    this.maskTransitionName = 'am-fade-enter am-fade-enter-active';
                }
            }
            this.setClassMap();
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set closable(value) {
        this.defaultProps.closable = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set maskClosable(value) {
        this.defaultProps.maskClosable = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set popup(value) {
        this.defaultProps.popup = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set animationType(value) {
        this.defaultProps.animationType = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set transparent(value) {
        this.defaultProps.transparent = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set footer(value) {
        this.defaultProps.footer = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set platform(value) {
        this.defaultProps.platform = value;
        this.setClassMap();
    }
    /**
     * @return {?}
     */
    get message() {
        return this._message;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set message(value) {
        if (value instanceof TemplateRef) {
            this.isMessageString = false;
        }
        else {
            this.isMessageString = true;
        }
        this._message = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set className(value) {
        this.defaultProps.className = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set wrapClassName(value) {
        this.defaultProps.wrapClassName = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set actions(value) {
        this.defaultProps.footer = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set defaultValue(value) {
        this.defaultProps.defaultValue = value !== undefined ? value : '';
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set type(value) {
        this.defaultProps.type = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set placeholders(value) {
        this.defaultProps.placeholders = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set operation(value) {
        this.defaultProps.operation = value;
        this.setClassMap();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set focus(value) {
        if (value) {
            this._focus = value;
        }
    }
    /**
     * @return {?}
     */
    setClassMap() {
        this.wrapCls = {
            [this.defaultProps.wrapClassName]: true,
            [`${this.defaultProps.prefixCls}-wrap-popup`]: this.defaultProps.popup
        };
        this.cls = {
            [this.defaultProps.className]: true,
            [`${this.defaultProps.prefixCls}-transparent`]: this.defaultProps.transparent,
            [`${this.defaultProps.prefixCls}-popup`]: this.defaultProps.popup,
            [`${this.defaultProps.prefixCls}-popup-${this.defaultProps.animationType}`]: this.defaultProps.popup && this.defaultProps.animationType,
            [`${this.defaultProps.prefixCls}-android`]: this.defaultProps.platform === 'android'
        };
        this.btnGroupClass = {
            [`${this.defaultProps.prefixCls}-button-group-${this.defaultProps.footer.length === 2 && !this.defaultProps.operation ? 'h' : 'v'}`]: true,
            [`${this.defaultProps.prefixCls}-button-group-${this.defaultProps.operation ? 'operation' : 'normal'}`]: true
        };
    }
    /**
     * @param {?} type
     * @param {?} value
     * @return {?}
     */
    inputChange(type, value) {
        this.data[type] = value;
    }
    /**
     * @return {?}
     */
    leaveAnimation() {
        if (this.defaultProps.animated) {
            if (this.defaultProps.transparent) {
                this.transitionName = this.maskTransitionName = 'am-fade-leave am-fade-leave-active';
            }
            else {
                this.transitionName = this.maskTransitionName = 'am-slide-up-leave am-slide-up-leave-active';
            }
            if (this.defaultProps.popup) {
                this.transitionName =
                    this.defaultProps.animationType === 'slide-up'
                        ? 'am-slide-up-leave am-slide-up-leave-active'
                        : 'am-slide-down-leave am-slide-down-leave-active';
                this.maskTransitionName = 'am-fade-leave am-fade-leave-active';
            }
        }
        setTimeout(() => {
            this.defaultProps.visible = false;
        }, 200);
    }
    /**
     * @return {?}
     */
    close() {
        if ((!this.defaultProps.closable || !this.defaultProps.maskClosable) && !this.defaultProps.popup) {
            return;
        }
        if (this._option.close) {
            this._option.close();
        }
        else {
            this.leaveAnimation();
            this.onClose.emit();
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.setClassMap();
    }
}
ModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'Modal',
                template: "<div *ngIf=\"defaultProps.visible\">\n  <div class=\"{{defaultProps.prefixCls}}-mask {{maskTransitionName}}\"></div>\n  <div role=\"dialog\"\n       class=\"{{defaultProps.prefixCls}}-wrap {{transitionName}}\"\n       [ngClass]=\"wrapCls\"\n       (click)=\"close()\"\n  >\n    <div role=\"document\"\n         class=\"{{defaultProps.prefixCls}}\"\n         [ngClass]=\"cls\"\n    >\n      <div class=\"{{defaultProps.prefixCls}}-content\">\n        <div *ngIf=\"defaultProps.closable\"\n             class=\"{{defaultProps.prefixCls}}-close\"\n             (click)=\"close()\"\n      >\n          <span class=\"{{defaultProps.prefixCls}}-close-x\"></span>\n        </div>\n        <div class=\"{{defaultProps.prefixCls}}-header\">\n          <div *ngIf=\"isTitleString\" class=\"{{defaultProps.prefixCls}}-title\">{{title}}</div>\n          <ng-template *ngIf=\"!isTitleString\" [ngTemplateOutlet]=\"title\"></ng-template>\n        </div>\n        <div class=\"{{defaultProps.prefixCls}}-body\">\n          <ng-content></ng-content>\n          <div *ngIf=\"isMessageString\" class=\"{{defaultProps.prefixCls}}-alert-content\">{{message}}</div>\n          <ng-template *ngIf=\"!isMessageString\" [ngTemplateOutlet]=\"message\"></ng-template>\n          <ng-template *ngIf=\"defaultProps.type === 'default'\" [ngTemplateOutlet]=\"promptDefault\"></ng-template>\n          <ng-template *ngIf=\"defaultProps.type === 'secure-text'\" [ngTemplateOutlet]=\"promptSecure\"></ng-template>\n          <ng-template *ngIf=\"defaultProps.type === 'login-password'\" [ngTemplateOutlet]=\"promptPassword\"></ng-template>\n        </div>\n        <div class=\"{{defaultProps.prefixCls}}-footer\">\n          <div [ngClass]=\"btnGroupClass\" role=\"group\">\n            <div Button\n                 role=\"button\"\n                 *ngFor=\"let button of defaultProps.footer\"\n                 [className]=\"'am-modal-button'\"\n                 (onClick)=\"button.onPress()\"\n            >\n              {{button.text}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #promptPassword>\n  <div class=\"{{defaultProps.prefixCls}}-input-container\">\n    <div class=\"{{defaultProps.prefixCls}}-input\">\n        <input \n          #inputElement \n          autofocus\n          [type]=\"'text'\" \n          [defaultValue]=\"defaultProps.defaultValue || ''\" \n          [placeholder]=\"defaultProps.placeholders[0] || ''\"\n          [(ngModel)]=\"value\" \n          (ngModelChange)=\"inputChange('text', $event)\" \n        >\n    </div>\n    <div className=\"{{defaultProps.prefixCls}}-input\">\n        <input \n          #inputElement \n          [type]=\"'password'\" \n          [defaultValue]=\"defaultProps.defaultValue || ''\" \n          [placeholder]=\"defaultProps.placeholders[0] || ''\"\n          [(ngModel)]=\"passwordValue\" \n          (ngModelChange)=\"inputChange('password', $event)\" \n        >\n    </div>\n  </div>\n</ng-template>\n<ng-template #promptSecure>\n  <div className=\"{{defaultProps.prefixCls}}-input-container\">\n    <div className=\"{{defaultProps.prefixCls}}-input\">\n        <input \n          #inputElement \n          autofocus\n          [type]=\"'password'\" \n          [defaultValue]=\"defaultProps.defaultValue || ''\" \n          [placeholder]=\"defaultProps.placeholders[0] || ''\"\n          [(ngModel)]=\"passwordValue\" \n          (ngModelChange)=\"inputChange('password', $event)\" \n        >\n    </div>\n  </div>\n</ng-template>\n<ng-template #promptDefault>\n  <div className=\"{{defaultProps.prefixCls}}-input-container\">\n    <div className=\"{{defaultProps.prefixCls}}-input\">\n      <input \n        #inputElement \n        autofocus\n        [type]=\"'text'\" \n        [defaultValue]=\"defaultProps.defaultValue || ''\" \n        [placeholder]=\"defaultProps.placeholders[0] || ''\"\n        [(ngModel)]=\"value\" \n        (ngModelChange)=\"inputChange('text', $event)\" \n      >\n    </div>\n  </div>\n</ng-template>",
                encapsulation: ViewEncapsulation.None,
                providers: [NgSwitch, NgSwitchCase, ModalOptions]
            }] }
];
/** @nocollapse */
ModalComponent.ctorParameters = () => [
    { type: ModalOptions }
];
ModalComponent.propDecorators = {
    inputElementRef: [{ type: ViewChild, args: ['inputElement',] }],
    title: [{ type: Input }],
    visible: [{ type: Input }],
    closable: [{ type: Input }],
    maskClosable: [{ type: Input }],
    popup: [{ type: Input }],
    animationType: [{ type: Input }],
    transparent: [{ type: Input }],
    footer: [{ type: Input }],
    platform: [{ type: Input }],
    message: [{ type: Input }],
    className: [{ type: Input }],
    wrapClassName: [{ type: Input }],
    actions: [{ type: Input }],
    defaultValue: [{ type: Input }],
    type: [{ type: Input }],
    placeholders: [{ type: Input }],
    operation: [{ type: Input }],
    focus: [{ type: Input }],
    onClose: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    ModalComponent.prototype.defaultProps;
    /** @type {?} */
    ModalComponent.prototype.value;
    /** @type {?} */
    ModalComponent.prototype.passwordValue;
    /** @type {?} */
    ModalComponent.prototype.autoFocus;
    /** @type {?} */
    ModalComponent.prototype.transitionName;
    /** @type {?} */
    ModalComponent.prototype.maskTransitionName;
    /** @type {?} */
    ModalComponent.prototype.isTitleString;
    /** @type {?} */
    ModalComponent.prototype.isMessageString;
    /** @type {?} */
    ModalComponent.prototype.wrapCls;
    /** @type {?} */
    ModalComponent.prototype.cls;
    /** @type {?} */
    ModalComponent.prototype.btnGroupClass;
    /** @type {?} */
    ModalComponent.prototype.data;
    /** @type {?} */
    ModalComponent.prototype._title;
    /** @type {?} */
    ModalComponent.prototype._message;
    /** @type {?} */
    ModalComponent.prototype._focus;
    /** @type {?} */
    ModalComponent.prototype.inputElementRef;
    /** @type {?} */
    ModalComponent.prototype.onClose;
    /** @type {?} */
    ModalComponent.prototype._option;
}

//# sourceMappingURL=data:application/json;base64,