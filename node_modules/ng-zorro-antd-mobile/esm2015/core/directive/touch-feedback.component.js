/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, HostListener, ViewEncapsulation, ElementRef, Renderer2 } from '@angular/core';
export class TouchFeedBackComponent {
    /**
     * @param {?} _ele
     * @param {?} _render
     */
    constructor(_ele, _render) {
        this._ele = _ele;
        this._render = _render;
        this.activeClassName = '';
        this.activeStyle = true;
    }
    /**
     * @return {?}
     */
    touchStart() {
        if (this.activeStyle) {
            this._render.addClass(this._ele.nativeElement, this.activeClassName);
        }
    }
    /**
     * @return {?}
     */
    touchEnd() {
        if (this.activeStyle) {
            this._render.removeClass(this._ele.nativeElement, this.activeClassName);
        }
    }
}
TouchFeedBackComponent.decorators = [
    { type: Component, args: [{
                selector: 'TouchFeedBack',
                template: '<ng-content></ng-content>',
                encapsulation: ViewEncapsulation.None
            }] }
];
/** @nocollapse */
TouchFeedBackComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
TouchFeedBackComponent.propDecorators = {
    activeClassName: [{ type: Input }],
    activeStyle: [{ type: Input }],
    touchStart: [{ type: HostListener, args: ['touchstart', ['$event'],] }, { type: HostListener, args: ['mousedown', ['$event'],] }],
    touchEnd: [{ type: HostListener, args: ['touchend', ['$event'],] }, { type: HostListener, args: ['mouseup', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    TouchFeedBackComponent.prototype.activeClassName;
    /** @type {?} */
    TouchFeedBackComponent.prototype.activeStyle;
    /** @type {?} */
    TouchFeedBackComponent.prototype._ele;
    /** @type {?} */
    TouchFeedBackComponent.prototype._render;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG91Y2gtZmVlZGJhY2suY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJjb3JlL2RpcmVjdGl2ZS90b3VjaC1mZWVkYmFjay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFlBQVksRUFFWixpQkFBaUIsRUFDakIsVUFBVSxFQUNWLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQU92QixNQUFNOzs7OztJQW1CSixZQUFvQixJQUFnQixFQUFVLE9BQWtCO1FBQTVDLFNBQUksR0FBSixJQUFJLENBQVk7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFXOytCQWxCckMsRUFBRTsyQkFDTixJQUFJO0tBaUJ5Qzs7OztJQWJwRSxVQUFVO1FBQ1IsSUFBSSxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztTQUN0RTtLQUNGOzs7O0lBR0QsUUFBUTtRQUNOLElBQUksSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDekU7S0FDRjs7O1lBdEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsUUFBUSxFQUFFLDJCQUEyQjtnQkFDckMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7YUFDdEM7Ozs7WUFSQyxVQUFVO1lBQ1YsU0FBUzs7OzhCQVNSLEtBQUs7MEJBQ0wsS0FBSzt5QkFFTCxZQUFZLFNBQUMsWUFBWSxFQUFFLENBQUMsUUFBUSxDQUFDLGNBQ3JDLFlBQVksU0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7dUJBTXBDLFlBQVksU0FBQyxVQUFVLEVBQUUsQ0FBQyxRQUFRLENBQUMsY0FDbkMsWUFBWSxTQUFDLFNBQVMsRUFBRSxDQUFDLFFBQVEsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgSW5wdXQsXG4gIEhvc3RMaXN0ZW5lcixcbiAgSG9zdEJpbmRpbmcsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBFbGVtZW50UmVmLFxuICBSZW5kZXJlcjJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1RvdWNoRmVlZEJhY2snLFxuICB0ZW1wbGF0ZTogJzxuZy1jb250ZW50PjwvbmctY29udGVudD4nLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFRvdWNoRmVlZEJhY2tDb21wb25lbnQge1xuICBASW5wdXQoKSBhY3RpdmVDbGFzc05hbWUgPSAnJztcbiAgQElucHV0KCkgYWN0aXZlU3R5bGUgPSB0cnVlO1xuXG4gIEBIb3N0TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCBbJyRldmVudCddKVxuICBASG9zdExpc3RlbmVyKCdtb3VzZWRvd24nLCBbJyRldmVudCddKVxuICB0b3VjaFN0YXJ0KCkge1xuICAgIGlmICh0aGlzLmFjdGl2ZVN0eWxlKSB7XG4gICAgICB0aGlzLl9yZW5kZXIuYWRkQ2xhc3ModGhpcy5fZWxlLm5hdGl2ZUVsZW1lbnQsIHRoaXMuYWN0aXZlQ2xhc3NOYW1lKTtcbiAgICB9XG4gIH1cbiAgQEhvc3RMaXN0ZW5lcigndG91Y2hlbmQnLCBbJyRldmVudCddKVxuICBASG9zdExpc3RlbmVyKCdtb3VzZXVwJywgWyckZXZlbnQnXSlcbiAgdG91Y2hFbmQoKSB7XG4gICAgaWYgKHRoaXMuYWN0aXZlU3R5bGUpIHtcbiAgICAgIHRoaXMuX3JlbmRlci5yZW1vdmVDbGFzcyh0aGlzLl9lbGUubmF0aXZlRWxlbWVudCwgdGhpcy5hY3RpdmVDbGFzc05hbWUpO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsZTogRWxlbWVudFJlZiwgcHJpdmF0ZSBfcmVuZGVyOiBSZW5kZXJlcjIpIHt9XG59XG4iXX0=