/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
/**
 * @record
 */
export function OnChangeEvent() { }
/** @type {?} */
OnChangeEvent.prototype.name;
/** @type {?} */
OnChangeEvent.prototype.value;
/** @type {?} */
OnChangeEvent.prototype.checked;
export class RadioItem {
    constructor() {
        this.prefixCls = 'am-radio';
        this.checked = false;
        this.disabled = false;
        this.onClick = new EventEmitter();
        this.onChange = new EventEmitter();
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onRadioItemClick(event) {
        if (!this.disabled && !this.checked) {
            this.checked = true;
            this.onChange.emit({
                name: this.name,
                value: this.value,
                checked: true
            });
        }
        if (this.onClick.observers.length > 0) {
            this.onClick.emit(event);
        }
    }
}
RadioItem.decorators = [
    { type: Component, args: [{
                selector: 'RadioItem, nzm-radio-item',
                template: "<ListItem [className]=\"'am-radio-item ' + (disabled ? 'am-radio-item-disabled' : '')\"\n          [extra]=\"radio\"\n          [disabled]=\"disabled\"\n          (onClick)=\"onRadioItemClick($event)\"\n>\n  <ng-content></ng-content>\n</ListItem>\n<ng-template #radio>\n  <label Radio\n         [name]=\"name\"\n         [value]=\"value\"\n         [checked]=\"checked\"\n         [disabled]=\"disabled\"\n  ></label>\n</ng-template>\n"
            }] }
];
/** @nocollapse */
RadioItem.ctorParameters = () => [];
RadioItem.propDecorators = {
    name: [{ type: Input }],
    value: [{ type: Input }],
    checked: [{ type: Input }],
    disabled: [{ type: Input }],
    onClick: [{ type: Output }],
    onChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    RadioItem.prototype.prefixCls;
    /** @type {?} */
    RadioItem.prototype.name;
    /** @type {?} */
    RadioItem.prototype.value;
    /** @type {?} */
    RadioItem.prototype.checked;
    /** @type {?} */
    RadioItem.prototype.disabled;
    /** @type {?} */
    RadioItem.prototype.onClick;
    /** @type {?} */
    RadioItem.prototype.onChange;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFkaW8taXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy16b3Jyby1hbnRkLW1vYmlsZS8iLCJzb3VyY2VzIjpbInJhZGlvL3JhZGlvLWl0ZW0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7Ozs7OztBQVl2RSxNQUFNO0lBZ0JKO3lCQWZvQixVQUFVO3VCQU9YLEtBQUs7d0JBRUosS0FBSzt1QkFFZixJQUFJLFlBQVksRUFBRTt3QkFFakIsSUFBSSxZQUFZLEVBQWlCO0tBRTVCOzs7OztJQUVoQixnQkFBZ0IsQ0FBQyxLQUFLO1FBQ3BCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNuQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUNwQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztnQkFDakIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO2dCQUNmLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsT0FBTyxFQUFFLElBQUk7YUFDZCxDQUFDLENBQUM7U0FDSjtRQUNELElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUMxQjtLQUNGOzs7WUFsQ0YsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLCtiQUEwQzthQUMzQzs7Ozs7bUJBSUUsS0FBSztvQkFFTCxLQUFLO3NCQUVMLEtBQUs7dUJBRUwsS0FBSztzQkFFTCxNQUFNO3VCQUVOLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE9uQ2hhbmdlRXZlbnQge1xuICBuYW1lOiBzdHJpbmc7XG4gIHZhbHVlOiBzdHJpbmc7XG4gIGNoZWNrZWQ6IGJvb2xlYW47XG59XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1JhZGlvSXRlbSwgbnptLXJhZGlvLWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vcmFkaW8taXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUmFkaW9JdGVtIHtcbiAgcHJlZml4Q2xzOiBzdHJpbmcgPSAnYW0tcmFkaW8nO1xuXG4gIEBJbnB1dCgpXG4gIG5hbWU6IHN0cmluZztcbiAgQElucHV0KClcbiAgdmFsdWU6IHN0cmluZztcbiAgQElucHV0KClcbiAgY2hlY2tlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBASW5wdXQoKVxuICBkaXNhYmxlZDogYm9vbGVhbiA9IGZhbHNlO1xuICBAT3V0cHV0KClcbiAgb25DbGljayA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpXG4gIG9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcjxPbkNoYW5nZUV2ZW50PigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBvblJhZGlvSXRlbUNsaWNrKGV2ZW50KSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkICYmICF0aGlzLmNoZWNrZWQpIHtcbiAgICAgIHRoaXMuY2hlY2tlZCA9IHRydWU7XG4gICAgICB0aGlzLm9uQ2hhbmdlLmVtaXQoe1xuICAgICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgIHZhbHVlOiB0aGlzLnZhbHVlLFxuICAgICAgICBjaGVja2VkOiB0cnVlXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKHRoaXMub25DbGljay5vYnNlcnZlcnMubGVuZ3RoID4gMCkge1xuICAgICAgdGhpcy5vbkNsaWNrLmVtaXQoZXZlbnQpO1xuICAgIH1cbiAgfVxufVxuIl19