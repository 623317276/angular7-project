/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, ViewChild, HostBinding, Renderer2, ElementRef, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
export class InputItem {
    /**
     * @param {?} element
     * @param {?} render
     */
    constructor(element, render) {
        this.element = element;
        this.render = render;
        this.prefixCls = 'am-input';
        this.setFocus = {};
        this.pattern = '';
        this.autoFocus = false;
        this.inputType = 'text';
        this._type = 'text';
        this._defaultValue = '';
        this._placeholder = '';
        this._editable = true;
        this._disabled = false;
        this._clear = false;
        this._error = false;
        this._extra = '';
        this._labelNumber = 5;
        this._updatePlaceholder = false;
        this._prefixListCls = 'am-list';
        this._moneyKeyboardAlign = 'right';
        this._focus = false;
        this._isClear = false;
        this.onChange = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onErrorClick = new EventEmitter();
        this.onExtraClick = new EventEmitter();
        this.clsItem = true;
        this.clsDisabled = this._disabled;
        this.clsError = this._error;
        this.clsFocus = this._focus;
        this.clsAndroid = this._focus;
        this._onChange = (_) => { };
        this._el = element.nativeElement;
    }
    /**
     * @return {?}
     */
    get type() {
        return this._type;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set type(value) {
        if (value && value.length > 0) {
            this.inputType = value;
            if (value === 'bankCard' || value === 'phone') {
                this._type = 'tel';
            }
            else if (value === 'password') {
                this._type = 'password';
            }
            else if (value === 'digit') {
                this._type = 'number';
            }
            else if (value !== 'text' && value !== 'number') {
                this._type = value;
            }
            if (value === 'number') {
                this.pattern = '[0-9]*';
            }
        }
    }
    /**
     * @return {?}
     */
    get value() {
        return this._value;
    }
    /**
     * @param {?} v
     * @return {?}
     */
    set value(v) {
        if (typeof v === undefined || v === null) {
            this._value = '';
        }
        this._value = v;
    }
    /**
     * @return {?}
     */
    get defaultValue() {
        return this._defaultValue;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set defaultValue(value) {
        this._defaultValue = value;
        this._value = this._defaultValue;
    }
    /**
     * @return {?}
     */
    get placeholder() {
        return this._placeholder;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set placeholder(value) {
        this._placeholder = value;
    }
    /**
     * @return {?}
     */
    get editable() {
        return this._editable;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set editable(value) {
        this._editable = value;
    }
    /**
     * @return {?}
     */
    get disabled() {
        return this._disabled;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set disabled(value) {
        this._disabled = value;
        this.clsDisabled = value;
    }
    /**
     * @return {?}
     */
    get clear() {
        return this._clear;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set clear(value) {
        this._clear = value;
    }
    /**
     * @return {?}
     */
    get maxLength() {
        return this._maxLength;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set maxLength(value) {
        this._maxLength = value;
    }
    /**
     * @return {?}
     */
    get error() {
        return this._error;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set error(value) {
        this._error = value;
        this.clsError = value;
    }
    /**
     * @return {?}
     */
    get extra() {
        return this._extra;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set extra(value) {
        this._extra = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set labelNumber(value) {
        this._labelNumber = value;
        this.setCls();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set updatePlaceholder(value) {
        this._updatePlaceholder = value;
    }
    /**
     * @return {?}
     */
    get prefixListCls() {
        return this._prefixListCls;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set prefixListCls(value) {
        this._prefixListCls = value;
        this.render.addClass(this._el, value + '-item');
        this.render.addClass(this._el, value + '-item-middle');
    }
    /**
     * @return {?}
     */
    get name() {
        return this._name;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set name(value) {
        this._name = value;
    }
    /**
     * @return {?}
     */
    get moneyKeyboardAlign() {
        return this._moneyKeyboardAlign;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set moneyKeyboardAlign(value) {
        this._moneyKeyboardAlign = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set locale(value) {
        this._locale = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set focus(value) {
        if (value && value.focus) {
            this.autoFocus = value.focus;
            if (this._type === 'money') {
                this.setFocus = value;
            }
            else if (this.inputElementRef) {
                this._focus = true;
                this.inputElementRef.nativeElement.focus();
                this.inputFocus('');
            }
        }
    }
    /**
     * @return {?}
     */
    setCls() {
        if (this.lableRef.nativeElement.children.length > 0 ||
            (this.lableRef.nativeElement && this.lableRef.nativeElement.innerText !== '')) {
            this.labelCls = {
                [`${this.prefixCls}-label`]: true,
                [`${this.prefixCls}-label-2`]: this._labelNumber === 2,
                [`${this.prefixCls}-label-3`]: this._labelNumber === 3,
                [`${this.prefixCls}-label-4`]: this._labelNumber === 4,
                [`${this.prefixCls}-label-5`]: this._labelNumber === 5,
                [`${this.prefixCls}-label-6`]: this._labelNumber === 6,
                [`${this.prefixCls}-label-7`]: this._labelNumber === 7
            };
        }
        this.controlCls = { [`${this.prefixCls}-control`]: true };
    }
    /**
     * @param {?} e
     * @return {?}
     */
    inputChange(e) {
        /** @type {?} */
        let value = e;
        switch (this.inputType) {
            case 'text':
                break;
            case 'bankCard':
                value = value.replace(/\D/g, '').replace(/(....)(?=.)/g, '$1 ');
                break;
            case 'phone':
                value = value.replace(/\D/g, '').substring(0, 11);
                /** @type {?} */
                const valueLen = value.length;
                if (valueLen > 3 && valueLen < 8) {
                    value = `${value.substr(0, 3)} ${value.substr(3)}`;
                }
                else if (valueLen >= 8) {
                    value = `${value.substr(0, 3)} ${value.substr(3, 4)} ${value.substr(7)}`;
                }
                break;
            case 'number':
                value = value.replace(/\D/g, '');
                break;
            case 'password':
                break;
            default:
                this._value = value;
                break;
        }
        this._value = value;
        if (this._type !== 'money') {
            this.inputElementRef.nativeElement.value = this._value;
        }
        this._onChange(this._value);
        this.onChange.emit(this._value);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    inputFocus(value) {
        setTimeout(() => {
            this._focus = true;
            this.clsFocus = true;
            this.clsAndroid = true;
        }, 100);
        this.onFocus.emit(value);
    }
    /**
     * @param {?} value
     * @param {?} event
     * @return {?}
     */
    inputBlur(value, event) {
        setTimeout(() => {
            if (!this._isClear) {
                this._focus = false;
                this.clsFocus = false;
                this.clsAndroid = false;
                this.onBlur.emit(value);
            }
            this._isClear = false;
        }, 100);
    }
    /**
     * @return {?}
     */
    clearInput() {
        if (this._type !== 'password' && this._updatePlaceholder) {
            this._placeholder = this._value;
        }
        this._value = '';
        this.onChange.emit('');
        this._isClear = true;
        if (this._type !== 'money') {
            this.inputElementRef.nativeElement.value = this._value;
        }
        this.inputFocus(this._value);
    }
    /**
     * @param {?} e
     * @return {?}
     */
    errorClick(e) {
        if (this.onErrorClick) {
            this.onErrorClick.emit(e);
        }
    }
    /**
     * @param {?} e
     * @return {?}
     */
    extraClick(e) {
        if (this.onExtraClick) {
            this.onExtraClick.emit(e);
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        if (value) {
            this._value = value;
        }
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this._onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) { }
    /**
     * @return {?}
     */
    ngOnChanges() {
        if (this.inputElementRef && this._type !== 'money' && this._value !== undefined) {
            this.inputElementRef.nativeElement.value = this._value;
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.setCls();
        this.render.addClass(this._el, this._prefixListCls + '-item');
        this.render.addClass(this._el, this._prefixListCls + '-item-middle');
    }
}
InputItem.decorators = [
    { type: Component, args: [{
                selector: 'InputItem, nzm-input-item',
                template: "<div class=\"{{prefixListCls}}-line\">\n  <div #lableContent [ngClass]=\"labelCls\">\n    <ng-content></ng-content>\n  </div>\n  <div [ngClass]=\"controlCls\">\n    <CustomInput *ngIf=\"type==='money'\"\n                 [value]=\"value\"\n                 [defaultValue]=\"defaultValue\"\n                 [placeholder]=\"placeholder\"\n                 [disabled]=\"disabled\"\n                 [editable]=\"editable\"\n                 [moneyKeyboardAlign]=\"moneyKeyboardAlign\"\n                 [setFocus]=\"setFocus\"\n                 [maxLength]=\"maxLength\"\n                 (onChange)=\"inputChange($event)\"\n                 (onBlur)=\"inputBlur(value)\"\n                 (onFocus)=\"inputFocus(value)\">\n    </CustomInput>\n    <div *ngIf=\"type!=='money'\">\n      <input #inputElement\n             [type]=\"type\"\n             [name]=\"name\"\n             [(ngModel)]=\"value\"\n             [defaultValue]=\"defaultValue\"\n             [placeholder]=\"placeholder\"\n             [disabled]=\"disabled\"\n             [readOnly]=\"!editable\"\n             [autofocus]=\"autoFocus\"\n             [maxlength]=\"maxLength\"\n             [pattern]=\"pattern\"\n             (ngModelChange)=\"inputChange($event)\"\n             (blur)=\"inputBlur(value , $event)\"\n             (focus)=\"inputFocus(value)\"\n             style=\"outline:none\" />\n    </div>\n  </div>\n  <div  *ngIf=\"clear && editable && !disabled && (value && value.length >0 )\"\n        class=\"{{prefixCls}}-clear\"\n        (click)=\"clearInput()\"\n  ></div>\n  <div *ngIf=\"error\"\n       class=\"{{prefixCls}}-error-extra\"\n       (click)=\"errorClick($event)\"\n  ></div>\n  <div *ngIf=\"extra!==''\"\n       class=\"{{prefixCls}}-extra\"\n       (click)=\"extraClick($event)\"\n  >{{extra}}</div>\n</div>",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => InputItem),
                        multi: true
                    }
                ]
            }] }
];
/** @nocollapse */
InputItem.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 }
];
InputItem.propDecorators = {
    lableRef: [{ type: ViewChild, args: ['lableContent',] }],
    inputElementRef: [{ type: ViewChild, args: ['inputElement',] }],
    type: [{ type: Input }],
    value: [{ type: Input }],
    defaultValue: [{ type: Input }],
    placeholder: [{ type: Input }],
    editable: [{ type: Input }],
    disabled: [{ type: Input }],
    clear: [{ type: Input }],
    maxLength: [{ type: Input }],
    error: [{ type: Input }],
    extra: [{ type: Input }],
    labelNumber: [{ type: Input }],
    updatePlaceholder: [{ type: Input }],
    prefixListCls: [{ type: Input }],
    name: [{ type: Input }],
    moneyKeyboardAlign: [{ type: Input }],
    locale: [{ type: Input }],
    focus: [{ type: Input }],
    onChange: [{ type: Output }],
    onBlur: [{ type: Output }],
    onFocus: [{ type: Output }],
    onErrorClick: [{ type: Output }],
    onExtraClick: [{ type: Output }],
    clsItem: [{ type: HostBinding, args: ['class.am-input-item',] }],
    clsDisabled: [{ type: HostBinding, args: ['class.am-input-disabled',] }],
    clsError: [{ type: HostBinding, args: ['class.am-input-error',] }],
    clsFocus: [{ type: HostBinding, args: ['class.am-input-focus',] }],
    clsAndroid: [{ type: HostBinding, args: ['class.am-input-android,',] }]
};
if (false) {
    /** @type {?} */
    InputItem.prototype.prefixCls;
    /** @type {?} */
    InputItem.prototype.wrapCls;
    /** @type {?} */
    InputItem.prototype.labelCls;
    /** @type {?} */
    InputItem.prototype.controlCls;
    /** @type {?} */
    InputItem.prototype.setFocus;
    /** @type {?} */
    InputItem.prototype.pattern;
    /** @type {?} */
    InputItem.prototype.autoFocus;
    /** @type {?} */
    InputItem.prototype.inputType;
    /** @type {?} */
    InputItem.prototype._el;
    /** @type {?} */
    InputItem.prototype._type;
    /** @type {?} */
    InputItem.prototype._value;
    /** @type {?} */
    InputItem.prototype._defaultValue;
    /** @type {?} */
    InputItem.prototype._placeholder;
    /** @type {?} */
    InputItem.prototype._editable;
    /** @type {?} */
    InputItem.prototype._disabled;
    /** @type {?} */
    InputItem.prototype._clear;
    /** @type {?} */
    InputItem.prototype._maxLength;
    /** @type {?} */
    InputItem.prototype._error;
    /** @type {?} */
    InputItem.prototype._extra;
    /** @type {?} */
    InputItem.prototype._labelNumber;
    /** @type {?} */
    InputItem.prototype._updatePlaceholder;
    /** @type {?} */
    InputItem.prototype._prefixListCls;
    /** @type {?} */
    InputItem.prototype._name;
    /** @type {?} */
    InputItem.prototype._moneyKeyboardAlign;
    /** @type {?} */
    InputItem.prototype._locale;
    /** @type {?} */
    InputItem.prototype._focus;
    /** @type {?} */
    InputItem.prototype._isClear;
    /** @type {?} */
    InputItem.prototype.lableRef;
    /** @type {?} */
    InputItem.prototype.inputElementRef;
    /** @type {?} */
    InputItem.prototype.onChange;
    /** @type {?} */
    InputItem.prototype.onBlur;
    /** @type {?} */
    InputItem.prototype.onFocus;
    /** @type {?} */
    InputItem.prototype.onErrorClick;
    /** @type {?} */
    InputItem.prototype.onExtraClick;
    /** @type {?} */
    InputItem.prototype.clsItem;
    /** @type {?} */
    InputItem.prototype.clsDisabled;
    /** @type {?} */
    InputItem.prototype.clsError;
    /** @type {?} */
    InputItem.prototype.clsFocus;
    /** @type {?} */
    InputItem.prototype.clsAndroid;
    /** @type {?} */
    InputItem.prototype._onChange;
    /** @type {?} */
    InputItem.prototype.element;
    /** @type {?} */
    InputItem.prototype.render;
}

//# sourceMappingURL=data:application/json;base64,