import { QueryList, EventEmitter, OnDestroy, ElementRef, AfterViewInit } from '@angular/core';
import { CarouselSlideComponent } from './carousel-slide/carousel-slide.component';
export declare class CarouselComponent implements AfterViewInit, OnDestroy {
    private _ele;
    slideHeight: number;
    touchObject: any;
    style: {
        height: string;
        width: string;
        transform: string;
        margin: string;
    };
    private _timer;
    private _nodeArr;
    private _lastIndex;
    private _isMouseDown;
    private _rationWidth;
    private _currentSlideWidth;
    private _currentSlideHeight;
    private _transition;
    private _spaceWidth;
    private observer;
    items: QueryList<CarouselSlideComponent>;
    speed: number;
    selectedIndex: number;
    dots: boolean;
    vertical: boolean;
    autoplay: boolean;
    autoplayInterval: any;
    infinite: boolean;
    dotStyle: object;
    dotActiveStyle: object;
    frameOverflow: string;
    cellSpacing: number;
    slideWidth: number;
    swipeSpeed: number;
    dragging: boolean;
    afterChange: EventEmitter<any>;
    beforeChange: EventEmitter<any>;
    carouselWrapper: boolean;
    carouselwrap: boolean;
    panstart(event: any): void;
    panmove(event: any): void;
    panend(event: any): void;
    cancel(): void;
    constructor(_ele: ElementRef);
    initCarouselSize(): void;
    carouselInit(items: any): void;
    startTimer(): void;
    stopTimer(): void;
    carousel(moveDirection: any): void;
    moveUp(): void;
    moveDown(): void;
    moveLeft(): void;
    moveRight(): void;
    getAfterNode(pre: any): any;
    caculateDirectionLeftCurrentIndex(): void;
    caculateDirectionRightCurrentIndex(): void;
    gotoCarousel(afterIndex: any): void;
    getCurrentIndex(): void;
    setSlideStyles(index: any, direction: any, xDist?: number): void;
    getListStyles(offset?: number): void;
    swipeDirection(x1: any, x2: any, y1: any, y2: any): {
        direction: number;
        xDist: number;
    };
    readonly page: number;
    readonly pageCount: number;
    readonly dotindicatorStatus: boolean;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
}
