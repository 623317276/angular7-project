/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, TemplateRef, EventEmitter, ViewEncapsulation, ViewChild } from '@angular/core';
import { NgSwitch, NgSwitchCase } from '@angular/common';
import { ModalOptions } from './modal-options.provider';
var ModalComponent = /** @class */ (function () {
    function ModalComponent(_option) {
        this._option = _option;
        this.defaultProps = {
            visible: false,
            prefixCls: 'am-modal',
            transparent: false,
            popup: false,
            animationType: 'slide-down',
            animated: true,
            style: {},
            footer: [],
            closable: false,
            maskClosable: false,
            operation: false,
            platform: 'ios',
            className: '',
            wrapClassName: '',
            message: '',
            actions: [],
            callbackOrActions: [],
            type: '',
            defaultValue: '',
            placeholders: []
        };
        this.value = '';
        this.passwordValue = '';
        this.autoFocus = { focus: true, date: new Date() };
        this.transitionName = '';
        this.maskTransitionName = '';
        this.isTitleString = true;
        this.isMessageString = true;
        this.wrapCls = {};
        this.cls = {};
        this.btnGroupClass = {};
        this.data = {};
        this._title = '';
        this._message = '';
        this._focus = true;
        this.onClose = new EventEmitter();
    }
    Object.defineProperty(ModalComponent.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._title;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof TemplateRef) {
                this.isTitleString = false;
            }
            else {
                this.isTitleString = true;
            }
            this._title = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "visible", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (!value) {
                this.leaveAnimation();
            }
            else {
                this.defaultProps.visible = value;
                if (this.defaultProps.animated) {
                    if (this.defaultProps.transparent) {
                        this.transitionName = this.maskTransitionName = 'am-fade-enter am-fade-enter-active';
                    }
                    else {
                        this.transitionName = this.maskTransitionName = 'am-slide-up-enter am-slide-up-enter-active';
                    }
                    if (this.defaultProps.popup) {
                        this.transitionName =
                            this.defaultProps.animationType === 'slide-up'
                                ? 'am-slide-up-enter am-slide-up-enter-active'
                                : 'am-slide-down-enter am-slide-down-enter-active';
                        this.maskTransitionName = 'am-fade-enter am-fade-enter-active';
                    }
                }
                this.setClassMap();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "closable", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.closable = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "maskClosable", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.maskClosable = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "popup", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.popup = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "animationType", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.animationType = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "transparent", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.transparent = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "footer", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.footer = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "platform", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.platform = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "message", {
        get: /**
         * @return {?}
         */
        function () {
            return this._message;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof TemplateRef) {
                this.isMessageString = false;
            }
            else {
                this.isMessageString = true;
            }
            this._message = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "className", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.className = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "wrapClassName", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.wrapClassName = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "actions", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.footer = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "defaultValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.defaultValue = value !== undefined ? value : '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "type", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.type = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "placeholders", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.placeholders = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "operation", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.operation = value;
            this.setClassMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ModalComponent.prototype, "focus", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this._focus = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ModalComponent.prototype.setClassMap = /**
     * @return {?}
     */
    function () {
        var _a, _b, _c;
        this.wrapCls = (_a = {},
            _a[this.defaultProps.wrapClassName] = true,
            _a[this.defaultProps.prefixCls + "-wrap-popup"] = this.defaultProps.popup,
            _a);
        this.cls = (_b = {},
            _b[this.defaultProps.className] = true,
            _b[this.defaultProps.prefixCls + "-transparent"] = this.defaultProps.transparent,
            _b[this.defaultProps.prefixCls + "-popup"] = this.defaultProps.popup,
            _b[this.defaultProps.prefixCls + "-popup-" + this.defaultProps.animationType] = this.defaultProps.popup && this.defaultProps.animationType,
            _b[this.defaultProps.prefixCls + "-android"] = this.defaultProps.platform === 'android',
            _b);
        this.btnGroupClass = (_c = {},
            _c[this.defaultProps.prefixCls + "-button-group-" + (this.defaultProps.footer.length === 2 && !this.defaultProps.operation ? 'h' : 'v')] = true,
            _c[this.defaultProps.prefixCls + "-button-group-" + (this.defaultProps.operation ? 'operation' : 'normal')] = true,
            _c);
    };
    /**
     * @param {?} type
     * @param {?} value
     * @return {?}
     */
    ModalComponent.prototype.inputChange = /**
     * @param {?} type
     * @param {?} value
     * @return {?}
     */
    function (type, value) {
        this.data[type] = value;
    };
    /**
     * @return {?}
     */
    ModalComponent.prototype.leaveAnimation = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.defaultProps.animated) {
            if (this.defaultProps.transparent) {
                this.transitionName = this.maskTransitionName = 'am-fade-leave am-fade-leave-active';
            }
            else {
                this.transitionName = this.maskTransitionName = 'am-slide-up-leave am-slide-up-leave-active';
            }
            if (this.defaultProps.popup) {
                this.transitionName =
                    this.defaultProps.animationType === 'slide-up'
                        ? 'am-slide-up-leave am-slide-up-leave-active'
                        : 'am-slide-down-leave am-slide-down-leave-active';
                this.maskTransitionName = 'am-fade-leave am-fade-leave-active';
            }
        }
        setTimeout(function () {
            _this.defaultProps.visible = false;
        }, 200);
    };
    /**
     * @return {?}
     */
    ModalComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        if ((!this.defaultProps.closable || !this.defaultProps.maskClosable) && !this.defaultProps.popup) {
            return;
        }
        if (this._option.close) {
            this._option.close();
        }
        else {
            this.leaveAnimation();
            this.onClose.emit();
        }
    };
    /**
     * @return {?}
     */
    ModalComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.setClassMap();
    };
    ModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Modal',
                    template: "<div *ngIf=\"defaultProps.visible\">\n  <div class=\"{{defaultProps.prefixCls}}-mask {{maskTransitionName}}\"></div>\n  <div role=\"dialog\"\n       class=\"{{defaultProps.prefixCls}}-wrap {{transitionName}}\"\n       [ngClass]=\"wrapCls\"\n       (click)=\"close()\"\n  >\n    <div role=\"document\"\n         class=\"{{defaultProps.prefixCls}}\"\n         [ngClass]=\"cls\"\n    >\n      <div class=\"{{defaultProps.prefixCls}}-content\">\n        <div *ngIf=\"defaultProps.closable\"\n             class=\"{{defaultProps.prefixCls}}-close\"\n             (click)=\"close()\"\n      >\n          <span class=\"{{defaultProps.prefixCls}}-close-x\"></span>\n        </div>\n        <div class=\"{{defaultProps.prefixCls}}-header\">\n          <div *ngIf=\"isTitleString\" class=\"{{defaultProps.prefixCls}}-title\">{{title}}</div>\n          <ng-template *ngIf=\"!isTitleString\" [ngTemplateOutlet]=\"title\"></ng-template>\n        </div>\n        <div class=\"{{defaultProps.prefixCls}}-body\">\n          <ng-content></ng-content>\n          <div *ngIf=\"isMessageString\" class=\"{{defaultProps.prefixCls}}-alert-content\">{{message}}</div>\n          <ng-template *ngIf=\"!isMessageString\" [ngTemplateOutlet]=\"message\"></ng-template>\n          <ng-template *ngIf=\"defaultProps.type === 'default'\" [ngTemplateOutlet]=\"promptDefault\"></ng-template>\n          <ng-template *ngIf=\"defaultProps.type === 'secure-text'\" [ngTemplateOutlet]=\"promptSecure\"></ng-template>\n          <ng-template *ngIf=\"defaultProps.type === 'login-password'\" [ngTemplateOutlet]=\"promptPassword\"></ng-template>\n        </div>\n        <div class=\"{{defaultProps.prefixCls}}-footer\">\n          <div [ngClass]=\"btnGroupClass\" role=\"group\">\n            <div Button\n                 role=\"button\"\n                 *ngFor=\"let button of defaultProps.footer\"\n                 [className]=\"'am-modal-button'\"\n                 (onClick)=\"button.onPress()\"\n            >\n              {{button.text}}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<ng-template #promptPassword>\n  <div class=\"{{defaultProps.prefixCls}}-input-container\">\n    <div class=\"{{defaultProps.prefixCls}}-input\">\n        <input \n          #inputElement \n          autofocus\n          [type]=\"'text'\" \n          [defaultValue]=\"defaultProps.defaultValue || ''\" \n          [placeholder]=\"defaultProps.placeholders[0] || ''\"\n          [(ngModel)]=\"value\" \n          (ngModelChange)=\"inputChange('text', $event)\" \n        >\n    </div>\n    <div className=\"{{defaultProps.prefixCls}}-input\">\n        <input \n          #inputElement \n          [type]=\"'password'\" \n          [defaultValue]=\"defaultProps.defaultValue || ''\" \n          [placeholder]=\"defaultProps.placeholders[0] || ''\"\n          [(ngModel)]=\"passwordValue\" \n          (ngModelChange)=\"inputChange('password', $event)\" \n        >\n    </div>\n  </div>\n</ng-template>\n<ng-template #promptSecure>\n  <div className=\"{{defaultProps.prefixCls}}-input-container\">\n    <div className=\"{{defaultProps.prefixCls}}-input\">\n        <input \n          #inputElement \n          autofocus\n          [type]=\"'password'\" \n          [defaultValue]=\"defaultProps.defaultValue || ''\" \n          [placeholder]=\"defaultProps.placeholders[0] || ''\"\n          [(ngModel)]=\"passwordValue\" \n          (ngModelChange)=\"inputChange('password', $event)\" \n        >\n    </div>\n  </div>\n</ng-template>\n<ng-template #promptDefault>\n  <div className=\"{{defaultProps.prefixCls}}-input-container\">\n    <div className=\"{{defaultProps.prefixCls}}-input\">\n      <input \n        #inputElement \n        autofocus\n        [type]=\"'text'\" \n        [defaultValue]=\"defaultProps.defaultValue || ''\" \n        [placeholder]=\"defaultProps.placeholders[0] || ''\"\n        [(ngModel)]=\"value\" \n        (ngModelChange)=\"inputChange('text', $event)\" \n      >\n    </div>\n  </div>\n</ng-template>",
                    encapsulation: ViewEncapsulation.None,
                    providers: [NgSwitch, NgSwitchCase, ModalOptions]
                }] }
    ];
    /** @nocollapse */
    ModalComponent.ctorParameters = function () { return [
        { type: ModalOptions }
    ]; };
    ModalComponent.propDecorators = {
        inputElementRef: [{ type: ViewChild, args: ['inputElement',] }],
        title: [{ type: Input }],
        visible: [{ type: Input }],
        closable: [{ type: Input }],
        maskClosable: [{ type: Input }],
        popup: [{ type: Input }],
        animationType: [{ type: Input }],
        transparent: [{ type: Input }],
        footer: [{ type: Input }],
        platform: [{ type: Input }],
        message: [{ type: Input }],
        className: [{ type: Input }],
        wrapClassName: [{ type: Input }],
        actions: [{ type: Input }],
        defaultValue: [{ type: Input }],
        type: [{ type: Input }],
        placeholders: [{ type: Input }],
        operation: [{ type: Input }],
        focus: [{ type: Input }],
        onClose: [{ type: Output }]
    };
    return ModalComponent;
}());
export { ModalComponent };
if (false) {
    /** @type {?} */
    ModalComponent.prototype.defaultProps;
    /** @type {?} */
    ModalComponent.prototype.value;
    /** @type {?} */
    ModalComponent.prototype.passwordValue;
    /** @type {?} */
    ModalComponent.prototype.autoFocus;
    /** @type {?} */
    ModalComponent.prototype.transitionName;
    /** @type {?} */
    ModalComponent.prototype.maskTransitionName;
    /** @type {?} */
    ModalComponent.prototype.isTitleString;
    /** @type {?} */
    ModalComponent.prototype.isMessageString;
    /** @type {?} */
    ModalComponent.prototype.wrapCls;
    /** @type {?} */
    ModalComponent.prototype.cls;
    /** @type {?} */
    ModalComponent.prototype.btnGroupClass;
    /** @type {?} */
    ModalComponent.prototype.data;
    /** @type {?} */
    ModalComponent.prototype._title;
    /** @type {?} */
    ModalComponent.prototype._message;
    /** @type {?} */
    ModalComponent.prototype._focus;
    /** @type {?} */
    ModalComponent.prototype.inputElementRef;
    /** @type {?} */
    ModalComponent.prototype.onClose;
    /** @type {?} */
    ModalComponent.prototype._option;
}

//# sourceMappingURL=data:application/json;base64,