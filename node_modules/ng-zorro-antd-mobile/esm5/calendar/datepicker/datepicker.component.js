/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding, ViewEncapsulation, Input, ElementRef, ViewChild } from '@angular/core';
import DatePicker from './datepicker.base.component';
var DatePickerComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DatePickerComponent, _super);
    function DatePickerComponent() {
        var _this = _super.call(this) || this;
        _this.transform = '';
        _this._initDelta = 0;
        _this._lastY = 0;
        _this._delta = _this._initDelta;
        _this.amCalendar = true;
        _this.datePicker = true;
        _this.genMonthComponent = function (data) {
            if (!data)
                return;
            return {
                monthData: data,
                locale: _this.props.locale,
                rowSize: _this.props.rowSize,
                onCellClick: _this.baseOnCellClick,
                getDateExtra: _this.props.getDateExtra,
                ref: function (dom) {
                    data.componentRef = dom || data.componentRef || undefined;
                    data.updateLayout = function () {
                        _this.computeHeight(data, dom);
                    };
                    data.updateLayout();
                }
            };
        };
        _this.computeHeight = function (data, singleMonth) {
            if (singleMonth && singleMonth.wrapperDivDOM) {
                if (!data.height && !singleMonth.wrapperDivDOM.clientHeight) {
                    setTimeout(function () { return _this.computeHeight(data, singleMonth); }, 500);
                    return;
                }
                data.height = singleMonth.wrapperDivDOM.clientHeight || data.height || 0;
                data.y = singleMonth.wrapperDivDOM.offsetTop || data.y || 0;
            }
        };
        _this.setLayout = function (dom) {
            if (dom) {
                var onLayout = _this.props.onLayout;
                onLayout && onLayout(dom.clientHeight);
                /** @type {?} */
                var scrollHandler_1 = _this.createOnScroll();
                dom.onscroll = function (evt) {
                    scrollHandler_1({
                        client: dom.clientHeight,
                        full: (/** @type {?} */ (evt.currentTarget)).clientHeight,
                        top: (/** @type {?} */ (evt.currentTarget)).scrollTop
                    });
                };
            }
        };
        _this.setPanel = function (dom) {
            _this._panel = dom;
        };
        return _this;
    }
    Object.defineProperty(DatePickerComponent.prototype, "onCellClick", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.props.onCellClick = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerComponent.prototype, "endDate", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var oldProps = Object.assign({}, this.props);
            this.props.endDate = value;
            this.receiveProps(oldProps, this.props);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerComponent.prototype, "startDate", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var oldProps = Object.assign({}, this.props);
            this.props.startDate = value;
            this.receiveProps(oldProps, this.props);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerComponent.prototype, "propsData", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.props = tslib_1.__assign({}, this.props, value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerComponent.prototype, "onSelectHasDisableDate", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.props.onSelectHasDisableDate = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatePickerComponent.prototype, "onLayout", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.props.onLayout = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    DatePickerComponent.prototype.onTouchStart = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this._lastY = event.touches[0].screenY;
        this._delta = this._initDelta;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DatePickerComponent.prototype.onTouchMove = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        /** @type {?} */
        var ele = event.currentTarget;
        /** @type {?} */
        var isReachTop = ele.scrollTop === 0;
        if (isReachTop) {
            this._delta = event.touches[0].screenY - this._lastY;
            if (this._delta > 0) {
                event.preventDefault();
                if (this._delta > 80) {
                    this._delta = 80;
                }
            }
            else {
                this._delta = 0;
            }
            this.setTransform(this._panel.style, "translate3d(0," + this._delta + "px,0)");
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DatePickerComponent.prototype.onTouchEnd = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onFinish();
    };
    /**
     * @return {?}
     */
    DatePickerComponent.prototype.onFinish = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this._delta > 40 && this.canLoadPrev()) {
            this.genMonthData(this.state.months[0].firstDate, -1);
            this.visibleMonth = this.state.months.slice(0, this.props.initalMonths);
            this.state.months.forEach(function (m) {
                m.updateLayout && m.updateLayout();
            });
        }
        this.setTransform(this._panel.style, "translate3d(0,0,0)");
        this.setTransition(this._panel.style, '.3s');
        setTimeout(function () {
            _this._panel && _this.setTransition(_this._panel.style, '');
        }, 300);
    };
    /**
     * @param {?} nodeStyle
     * @param {?} value
     * @return {?}
     */
    DatePickerComponent.prototype.setTransform = /**
     * @param {?} nodeStyle
     * @param {?} value
     * @return {?}
     */
    function (nodeStyle, value) {
        this.transform = value;
        nodeStyle.transform = value;
        nodeStyle.webkitTransform = value;
    };
    /**
     * @param {?} nodeStyle
     * @param {?} value
     * @return {?}
     */
    DatePickerComponent.prototype.setTransition = /**
     * @param {?} nodeStyle
     * @param {?} value
     * @return {?}
     */
    function (nodeStyle, value) {
        nodeStyle.transition = value;
        nodeStyle.webkitTransition = value;
    };
    /**
     * @return {?}
     */
    DatePickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.init();
        this.setLayout(this.layoutDom.nativeElement);
        this.setPanel(this.panelDom.nativeElement);
    };
    DatePickerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'CalendarDatePicker, nzm-calendar-date-picker',
                    template: "<CalendarWeekPanel [locale]=\"props.locale\"></CalendarWeekPanel>\n<div #layout\n     class=\"wrapper\"\n     style=\"overflow-x:hidden;overflow-y:visible;-webkit-overflow-scrolling:touch;\"\n     (touchstart)=\"onTouchStart($event)\"\n     (touchmove)=\"onTouchMove($event)\"\n     (touchend)=\"onTouchEnd($event)\"\n>\n  <div #panel [ngStyle]=\"{transform: transform}\">\n    <div *ngIf=\"canLoadPrev()\" class=\"load-tip\">{{props.locale.loadPrevMonth}}</div>\n    <div class=\"months\">\n      <SingleMonth *ngFor=\"let item of visibleMonth;let i = index;\"\n                   style=\"display: block;\"\n                   [data]=\"item.component\"\n      ></SingleMonth>\n    </div>\n  </div>\n</div>\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    DatePickerComponent.ctorParameters = function () { return []; };
    DatePickerComponent.propDecorators = {
        layoutDom: [{ type: ViewChild, args: ['layout',] }],
        panelDom: [{ type: ViewChild, args: ['panel',] }],
        onCellClick: [{ type: Input }],
        endDate: [{ type: Input }],
        startDate: [{ type: Input }],
        propsData: [{ type: Input }],
        onSelectHasDisableDate: [{ type: Input }],
        onLayout: [{ type: Input }],
        amCalendar: [{ type: HostBinding, args: ['class.am-calendar',] }],
        datePicker: [{ type: HostBinding, args: ['class.date-picker',] }]
    };
    return DatePickerComponent;
}(DatePicker));
export { DatePickerComponent };
if (false) {
    /** @type {?} */
    DatePickerComponent.prototype.transform;
    /** @type {?} */
    DatePickerComponent.prototype._panel;
    /** @type {?} */
    DatePickerComponent.prototype._initDelta;
    /** @type {?} */
    DatePickerComponent.prototype._lastY;
    /** @type {?} */
    DatePickerComponent.prototype._delta;
    /** @type {?} */
    DatePickerComponent.prototype.layoutDom;
    /** @type {?} */
    DatePickerComponent.prototype.panelDom;
    /** @type {?} */
    DatePickerComponent.prototype.amCalendar;
    /** @type {?} */
    DatePickerComponent.prototype.datePicker;
    /** @type {?} */
    DatePickerComponent.prototype.genMonthComponent;
    /** @type {?} */
    DatePickerComponent.prototype.computeHeight;
    /** @type {?} */
    DatePickerComponent.prototype.setLayout;
    /** @type {?} */
    DatePickerComponent.prototype.setPanel;
}

//# sourceMappingURL=data:application/json;base64,