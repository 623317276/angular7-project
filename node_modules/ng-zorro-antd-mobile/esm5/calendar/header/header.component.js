/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, Output, HostBinding, TemplateRef, EventEmitter } from '@angular/core';
var HeaderComponent = /** @class */ (function () {
    function HeaderComponent() {
        this.closeIcon_component = false;
        this._closeIcon = 'X';
        this.onCancel = new EventEmitter();
        this.onClear = new EventEmitter();
        this.header = true;
    }
    Object.defineProperty(HeaderComponent.prototype, "locale", {
        get: /**
         * @return {?}
         */
        function () {
            return this._locale;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._locale = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeaderComponent.prototype, "closeIcon", {
        get: /**
         * @return {?}
         */
        function () {
            return this._closeIcon;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof TemplateRef) {
                this._closeIcon = value;
                this.closeIcon_component = true;
            }
            else {
                this._closeIcon = /** @type {?} */ (value);
                this.closeIcon_component = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeaderComponent.prototype, "showClear", {
        get: /**
         * @return {?}
         */
        function () {
            return this._showClear;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._showClear = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    HeaderComponent.prototype.triggerCancel = /**
     * @return {?}
     */
    function () {
        this.onCancel && this.onCancel.emit();
    };
    /**
     * @return {?}
     */
    HeaderComponent.prototype.triggerClear = /**
     * @return {?}
     */
    function () {
        this.onClear && this.onClear.emit();
    };
    HeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'CalendarHeader, nzm-calendar-header',
                    template: "<span *ngIf=\"!closeIcon_component\" class=\"left\" (click)=\"triggerCancel()\" [innerHTML]=\"closeIcon\"></span>\n<span *ngIf=\"closeIcon_component\" class=\"left\" (click)=\"triggerCancel()\">\n  <ng-template [ngTemplateOutlet]=\"closeIcon\"></ng-template>\n</span>\n<span class=\"title\">{{title || locale.title}}</span>\n<span *ngIf=\"showClear\" class=\"right\" (click)=\"triggerClear()\">{{clearIcon || locale.clear}}</span>\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    HeaderComponent.ctorParameters = function () { return []; };
    HeaderComponent.propDecorators = {
        locale: [{ type: Input }],
        closeIcon: [{ type: Input }],
        showClear: [{ type: Input }],
        onCancel: [{ type: Output }],
        onClear: [{ type: Output }],
        header: [{ type: HostBinding, args: ['class.header',] }]
    };
    return HeaderComponent;
}());
export { HeaderComponent };
if (false) {
    /** @type {?} */
    HeaderComponent.prototype.title;
    /** @type {?} */
    HeaderComponent.prototype.closeIcon_component;
    /** @type {?} */
    HeaderComponent.prototype.clearIcon;
    /** @type {?} */
    HeaderComponent.prototype._locale;
    /** @type {?} */
    HeaderComponent.prototype._showClear;
    /** @type {?} */
    HeaderComponent.prototype._closeIcon;
    /** @type {?} */
    HeaderComponent.prototype.onCancel;
    /** @type {?} */
    HeaderComponent.prototype.onClear;
    /** @type {?} */
    HeaderComponent.prototype.header;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiY2FsZW5kYXIvaGVhZGVyL2hlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsaUJBQWlCLEVBQ2pCLEtBQUssRUFDTCxNQUFNLEVBQ04sV0FBVyxFQUNYLFdBQVcsRUFDWCxZQUFZLEVBQ2IsTUFBTSxlQUFlLENBQUM7O0lBbURyQjttQ0F6QytCLEtBQUs7MEJBS1YsR0FBRzt3QkE4QkMsSUFBSSxZQUFZLEVBQU87dUJBRXhCLElBQUksWUFBWSxFQUFPO3NCQUVMLElBQUk7S0FFbkM7SUFsQ2hCLHNCQUNJLG1DQUFNOzs7O1FBRFY7WUFFRSxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7U0FDckI7Ozs7O1FBQ0QsVUFBVyxLQUFLO1lBQ2QsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7U0FDdEI7OztPQUhBO0lBSUQsc0JBQ0ksc0NBQVM7Ozs7UUFEYjtZQUVFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztTQUN4Qjs7Ozs7UUFDRCxVQUFjLEtBQWdDO1lBQzVDLElBQUksS0FBSyxZQUFZLFdBQVcsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7Z0JBQ3hCLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUM7YUFDakM7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFVBQVUscUJBQVcsS0FBSyxDQUFBLENBQUM7Z0JBQ2hDLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxLQUFLLENBQUM7YUFDbEM7U0FDRjs7O09BVEE7SUFVRCxzQkFDSSxzQ0FBUzs7OztRQURiO1lBRUUsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO1NBQ3hCOzs7OztRQUNELFVBQWMsS0FBSztZQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztTQUN6Qjs7O09BSEE7Ozs7SUFhRCx1Q0FBYTs7O0lBQWI7UUFDRSxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7S0FDdkM7Ozs7SUFFRCxzQ0FBWTs7O0lBQVo7UUFDRSxJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUM7S0FDckM7O2dCQXhERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFDQUFxQztvQkFDL0MsNGJBQXNDO29CQUN0QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtpQkFDdEM7Ozs7O3lCQVVFLEtBQUs7NEJBT0wsS0FBSzs0QkFhTCxLQUFLOzJCQU9MLE1BQU07MEJBRU4sTUFBTTt5QkFHTixXQUFXLFNBQUMsY0FBYzs7MEJBekQ3Qjs7U0FnQmEsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgVmlld0VuY2Fwc3VsYXRpb24sXG4gIElucHV0LFxuICBPdXRwdXQsXG4gIEhvc3RCaW5kaW5nLFxuICBUZW1wbGF0ZVJlZixcbiAgRXZlbnRFbWl0dGVyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTW9kZWxzIH0gZnJvbSAnLi4vZGF0ZS9EYXRhVHlwZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdDYWxlbmRhckhlYWRlciwgbnptLWNhbGVuZGFyLWhlYWRlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9oZWFkZXIuY29tcG9uZW50Lmh0bWwnLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIEhlYWRlckNvbXBvbmVudCB7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIGNsb3NlSWNvbl9jb21wb25lbnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgY2xlYXJJY29uOiBhbnk7XG5cbiAgcHJpdmF0ZSBfbG9jYWxlOiBNb2RlbHMuTG9jYWxlO1xuICBwcml2YXRlIF9zaG93Q2xlYXI6IGJvb2xlYW47XG4gIHByaXZhdGUgX2Nsb3NlSWNvbjogYW55ID0gJ1gnO1xuXG4gIEBJbnB1dCgpXG4gIGdldCBsb2NhbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xvY2FsZTtcbiAgfVxuICBzZXQgbG9jYWxlKHZhbHVlKSB7XG4gICAgdGhpcy5fbG9jYWxlID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgZ2V0IGNsb3NlSWNvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fY2xvc2VJY29uO1xuICB9XG4gIHNldCBjbG9zZUljb24odmFsdWU6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBUZW1wbGF0ZVJlZikge1xuICAgICAgdGhpcy5fY2xvc2VJY29uID0gdmFsdWU7XG4gICAgICB0aGlzLmNsb3NlSWNvbl9jb21wb25lbnQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9jbG9zZUljb24gPSA8c3RyaW5nPnZhbHVlO1xuICAgICAgdGhpcy5jbG9zZUljb25fY29tcG9uZW50ID0gZmFsc2U7XG4gICAgfVxuICB9XG4gIEBJbnB1dCgpXG4gIGdldCBzaG93Q2xlYXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Nob3dDbGVhcjtcbiAgfVxuICBzZXQgc2hvd0NsZWFyKHZhbHVlKSB7XG4gICAgdGhpcy5fc2hvd0NsZWFyID0gdmFsdWU7XG4gIH1cbiAgQE91dHB1dCgpXG4gIG9uQ2FuY2VsOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KClcbiAgb25DbGVhcjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmhlYWRlcicpIGhlYWRlcjogYm9vbGVhbiA9IHRydWU7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIHRyaWdnZXJDYW5jZWwoKSB7XG4gICAgdGhpcy5vbkNhbmNlbCAmJiB0aGlzLm9uQ2FuY2VsLmVtaXQoKTtcbiAgfVxuXG4gIHRyaWdnZXJDbGVhcigpIHtcbiAgICB0aGlzLm9uQ2xlYXIgJiYgdGhpcy5vbkNsZWFyLmVtaXQoKTtcbiAgfVxuXG59XG4iXX0=