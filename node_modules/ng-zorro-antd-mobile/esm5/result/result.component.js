/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, HostBinding, TemplateRef, ViewEncapsulation } from '@angular/core';
var Result = /** @class */ (function () {
    function Result() {
        this.prefixCls = 'am-result';
        this.isTitleString = true;
        this.isMessageString = true;
        this.onButtonClick = new EventEmitter();
        this.role = 'alert';
        this.amResult = true;
    }
    Object.defineProperty(Result.prototype, "title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._title;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.isTemplateRef(value)) {
                this.isTitleString = false;
            }
            else {
                this.isTitleString = true;
            }
            this._title = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Result.prototype, "message", {
        get: /**
         * @return {?}
         */
        function () {
            return this._message;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.isTemplateRef(value)) {
                this.isMessageString = false;
            }
            else {
                this.isMessageString = true;
            }
            this._message = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    Result.prototype.buttonClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onButtonClick.emit(event);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    Result.prototype.isTemplateRef = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value) {
            return value instanceof TemplateRef;
        }
        return false;
    };
    Result.decorators = [
        { type: Component, args: [{
                    selector: 'Result, nzm-result',
                    template: "<div *ngIf=\"img\" class=\"{{prefixCls}}-pic\">\n  <ng-template [ngTemplateOutlet]=\"img\"></ng-template>\n</div>\n<div *ngIf=\"!img && imgUrl\"\n     class=\"{{prefixCls}}-pic\"\n     [ngStyle]=\"{ backgroundImage: 'url('+ imgUrl +')' }\"\n></div>\n<div *ngIf=\"title\" class=\"{{prefixCls}}-title\">\n  <ng-template *ngIf=\"!isTitleString\" [ngTemplateOutlet]=\"title\"></ng-template>\n  <span *ngIf=\"isTitleString\">{{title}}</span>\n</div>\n<div [ngClass]=\"prefixCls+'-message'\">\n  <ng-template *ngIf=\"!isMessageString\" [ngTemplateOutlet]=\"message\"></ng-template>\n  <span *ngIf=\"isMessageString\">{{message}}</span>\n</div>\n<div *ngIf=\"buttonText\" class=\"{{prefixCls}}-button\">\n  <a Button [type]=\"buttonType\" (click)=\"buttonClick($event)\">\n    {{buttonText}}\n  </a>\n</div>\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    Result.ctorParameters = function () { return []; };
    Result.propDecorators = {
        title: [{ type: Input }],
        imgUrl: [{ type: Input }],
        buttonText: [{ type: Input }],
        buttonType: [{ type: Input }],
        img: [{ type: Input }],
        message: [{ type: Input }],
        onButtonClick: [{ type: Output }],
        role: [{ type: HostBinding, args: ['attr.role',] }],
        amResult: [{ type: HostBinding, args: ['class.am-result',] }]
    };
    return Result;
}());
export { Result };
if (false) {
    /** @type {?} */
    Result.prototype.prefixCls;
    /** @type {?} */
    Result.prototype.isTitleString;
    /** @type {?} */
    Result.prototype.isMessageString;
    /** @type {?} */
    Result.prototype._title;
    /** @type {?} */
    Result.prototype._message;
    /** @type {?} */
    Result.prototype.imgUrl;
    /** @type {?} */
    Result.prototype.buttonText;
    /** @type {?} */
    Result.prototype.buttonType;
    /** @type {?} */
    Result.prototype.img;
    /** @type {?} */
    Result.prototype.onButtonClick;
    /** @type {?} */
    Result.prototype.role;
    /** @type {?} */
    Result.prototype.amResult;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsicmVzdWx0L3Jlc3VsdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7SUF1RGxIO3lCQS9Db0IsV0FBVzs2QkFDTixJQUFJOytCQUNGLElBQUk7NkJBc0NJLElBQUksWUFBWSxFQUFFO29CQUd0QyxPQUFPO3dCQUVGLElBQUk7S0FFUjtJQXhDaEIsc0JBQ0kseUJBQUs7Ozs7UUFEVDtZQUVFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQztTQUNwQjs7Ozs7UUFDRCxVQUFVLEtBQWdDO1lBQ3hDLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDN0IsSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUM7YUFDNUI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLGFBQWEsR0FBRyxJQUFJLENBQUM7YUFDM0I7WUFDRCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztTQUNyQjs7O09BUkE7SUFpQkQsc0JBQ0ksMkJBQU87Ozs7UUFEWDtZQUVFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztTQUN0Qjs7Ozs7UUFDRCxVQUFZLEtBQWdDO1lBQzFDLElBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRTtnQkFDN0IsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7YUFDOUI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7YUFDN0I7WUFDRCxJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztTQUN2Qjs7O09BUkE7Ozs7O0lBbUJELDRCQUFXOzs7O0lBQVgsVUFBWSxLQUFLO1FBQ2YsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDaEM7Ozs7O0lBRUQsOEJBQWE7Ozs7SUFBYixVQUFjLEtBQUs7UUFDakIsSUFBSSxLQUFLLEVBQUU7WUFDVCxPQUFPLEtBQUssWUFBWSxXQUFXLENBQUM7U0FDckM7UUFDRCxPQUFPLEtBQUssQ0FBQztLQUNkOztnQkFoRUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLDh5QkFBc0M7b0JBQ3RDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2lCQUN0Qzs7Ozs7d0JBU0UsS0FBSzt5QkFZTCxLQUFLOzZCQUVMLEtBQUs7NkJBRUwsS0FBSztzQkFFTCxLQUFLOzBCQUVMLEtBQUs7Z0NBWUwsTUFBTTt1QkFHTixXQUFXLFNBQUMsV0FBVzsyQkFFdkIsV0FBVyxTQUFDLGlCQUFpQjs7aUJBcERoQzs7U0FPYSxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEhvc3RCaW5kaW5nLCBUZW1wbGF0ZVJlZiwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnUmVzdWx0LCBuem0tcmVzdWx0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Jlc3VsdC5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgUmVzdWx0IHtcbiAgcHJlZml4Q2xzOiBzdHJpbmcgPSAnYW0tcmVzdWx0JztcbiAgaXNUaXRsZVN0cmluZzogYm9vbGVhbiA9IHRydWU7XG4gIGlzTWVzc2FnZVN0cmluZzogYm9vbGVhbiA9IHRydWU7XG5cbiAgcHJpdmF0ZSBfdGl0bGU6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG4gIHByaXZhdGUgX21lc3NhZ2U6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgQElucHV0KClcbiAgZ2V0IHRpdGxlKCk6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4ge1xuICAgIHJldHVybiB0aGlzLl90aXRsZTtcbiAgfVxuICBzZXQgdGl0bGUodmFsdWU6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICBpZiAodGhpcy5pc1RlbXBsYXRlUmVmKHZhbHVlKSkge1xuICAgICAgdGhpcy5pc1RpdGxlU3RyaW5nID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaXNUaXRsZVN0cmluZyA9IHRydWU7XG4gICAgfVxuICAgIHRoaXMuX3RpdGxlID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgaW1nVXJsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGJ1dHRvblRleHQ6IHN0cmluZztcbiAgQElucHV0KClcbiAgYnV0dG9uVHlwZTogc3RyaW5nO1xuICBASW5wdXQoKVxuICBpbWc6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBJbnB1dCgpXG4gIGdldCBtZXNzYWdlKCk6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4ge1xuICAgIHJldHVybiB0aGlzLl9tZXNzYWdlO1xuICB9XG4gIHNldCBtZXNzYWdlKHZhbHVlOiBzdHJpbmcgfCBUZW1wbGF0ZVJlZjxhbnk+KSB7XG4gICAgaWYgKHRoaXMuaXNUZW1wbGF0ZVJlZih2YWx1ZSkpIHtcbiAgICAgIHRoaXMuaXNNZXNzYWdlU3RyaW5nID0gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaXNNZXNzYWdlU3RyaW5nID0gdHJ1ZTtcbiAgICB9XG4gICAgdGhpcy5fbWVzc2FnZSA9IHZhbHVlO1xuICB9XG4gIEBPdXRwdXQoKVxuICBvbkJ1dHRvbkNsaWNrOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIucm9sZScpXG4gIHJvbGU6IHN0cmluZyA9ICdhbGVydCc7XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcmVzdWx0JylcbiAgYW1SZXN1bHQ6IGJvb2xlYW4gPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBidXR0b25DbGljayhldmVudCkge1xuICAgIHRoaXMub25CdXR0b25DbGljay5lbWl0KGV2ZW50KTtcbiAgfVxuXG4gIGlzVGVtcGxhdGVSZWYodmFsdWUpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFRlbXBsYXRlUmVmO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cbiJdfQ==