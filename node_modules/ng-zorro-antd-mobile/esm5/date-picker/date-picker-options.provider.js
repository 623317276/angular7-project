/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { EventEmitter } from '@angular/core';
/**
 * @record
 */
export function DatePickerOptionsInterface() { }
/** @type {?} */
DatePickerOptionsInterface.prototype.mode;
/** @type {?} */
DatePickerOptionsInterface.prototype.value;
/** @type {?} */
DatePickerOptionsInterface.prototype.minDate;
/** @type {?} */
DatePickerOptionsInterface.prototype.maxDate;
/** @type {?} */
DatePickerOptionsInterface.prototype.use12Hours;
/** @type {?} */
DatePickerOptionsInterface.prototype.minuteStep;
/** @type {?} */
DatePickerOptionsInterface.prototype.locale;
/** @type {?} */
DatePickerOptionsInterface.prototype.disabled;
/** @type {?} */
DatePickerOptionsInterface.prototype.mask;
/** @type {?} */
DatePickerOptionsInterface.prototype.title;
/** @type {?} */
DatePickerOptionsInterface.prototype.okText;
/** @type {?} */
DatePickerOptionsInterface.prototype.dismissText;
/** @type {?} */
DatePickerOptionsInterface.prototype.appendToBody;
var DatePickerOptions = /** @class */ (function () {
    function DatePickerOptions() {
        this.mode = 'date';
        this.value = new Date();
        this.minDate = new Date(2000, 6, 1, 0, 0, 0);
        this.maxDate = new Date(2030, 1, 1, 23, 59, 59);
        this.use12Hours = false;
        this.minuteStep = 1;
        this.data = [];
        this.mask = true;
        this.title = '';
        this.okText = '确定';
        this.dismissText = '取消';
        this.disabled = false;
        this.appendToBody = false;
        this.onOk = new EventEmitter();
        this.onDismiss = new EventEmitter();
        this.onValueChange = new EventEmitter();
        this.onChange = new EventEmitter();
    }
    return DatePickerOptions;
}());
export { DatePickerOptions };
if (false) {
    /** @type {?} */
    DatePickerOptions.prototype.mode;
    /** @type {?} */
    DatePickerOptions.prototype.value;
    /** @type {?} */
    DatePickerOptions.prototype.minDate;
    /** @type {?} */
    DatePickerOptions.prototype.maxDate;
    /** @type {?} */
    DatePickerOptions.prototype.use12Hours;
    /** @type {?} */
    DatePickerOptions.prototype.minuteStep;
    /** @type {?} */
    DatePickerOptions.prototype.data;
    /** @type {?} */
    DatePickerOptions.prototype.mask;
    /** @type {?} */
    DatePickerOptions.prototype.title;
    /** @type {?} */
    DatePickerOptions.prototype.okText;
    /** @type {?} */
    DatePickerOptions.prototype.dismissText;
    /** @type {?} */
    DatePickerOptions.prototype.disabled;
    /** @type {?} */
    DatePickerOptions.prototype.locale;
    /** @type {?} */
    DatePickerOptions.prototype.appendToBody;
    /** @type {?} */
    DatePickerOptions.prototype.onOk;
    /** @type {?} */
    DatePickerOptions.prototype.onDismiss;
    /** @type {?} */
    DatePickerOptions.prototype.onValueChange;
    /** @type {?} */
    DatePickerOptions.prototype.onChange;
    /** @type {?} */
    DatePickerOptions.prototype.hidePicker;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXItb3B0aW9ucy5wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiZGF0ZS1waWNrZXIvZGF0ZS1waWNrZXItb3B0aW9ucy5wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCN0MsSUFBQTs7b0JBQ1MsTUFBTTtxQkFDTCxJQUFJLElBQUksRUFBRTt1QkFDUixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQzt1QkFDN0IsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7MEJBQzdCLEtBQUs7MEJBQ0wsQ0FBQztvQkFDUCxFQUFFO29CQUNPLElBQUk7cUJBQ1osRUFBRTtzQkFDRCxJQUFJOzJCQUNDLElBQUk7d0JBQ1AsS0FBSzs0QkFFRCxLQUFLO29CQUNNLElBQUksWUFBWSxFQUFFO3lCQUNiLElBQUksWUFBWSxFQUFFOzZCQUNkLElBQUksWUFBWSxFQUFFO3dCQUN2QixJQUFJLFlBQVksRUFBRTs7NEJBcENsRDtJQXNDQyxDQUFBO0FBcEJELDZCQW9CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgemhfQ04gfSBmcm9tICcuLi9sb2NhbGUtcHJvdmlkZXIvbGFuZ3VhZ2VzJztcbmV4cG9ydCBpbnRlcmZhY2UgRGF0ZVBpY2tlck9wdGlvbnNJbnRlcmZhY2Uge1xuICBtb2RlOiBzdHJpbmc7XG4gIHZhbHVlOiBEYXRlO1xuICBtaW5EYXRlOiBEYXRlO1xuICBtYXhEYXRlOiBEYXRlO1xuICB1c2UxMkhvdXJzOiBib29sZWFuO1xuICBtaW51dGVTdGVwOiBOdW1iZXI7XG4gIGxvY2FsZTogYW55O1xuICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgbWFzazogYm9vbGVhbjtcbiAgdGl0bGU6IHN0cmluZztcbiAgb2tUZXh0OiBzdHJpbmc7XG4gIGRpc21pc3NUZXh0OiBzdHJpbmc7XG4gIGFwcGVuZFRvQm9keTogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNsYXNzIERhdGVQaWNrZXJPcHRpb25zIGltcGxlbWVudHMgRGF0ZVBpY2tlck9wdGlvbnNJbnRlcmZhY2Uge1xuICBtb2RlID0gJ2RhdGUnO1xuICB2YWx1ZSA9IG5ldyBEYXRlKCk7XG4gIG1pbkRhdGUgPSBuZXcgRGF0ZSgyMDAwLCA2LCAxLCAwLCAwLCAwKTtcbiAgbWF4RGF0ZSA9IG5ldyBEYXRlKDIwMzAsIDEsIDEsIDIzLCA1OSwgNTkpO1xuICB1c2UxMkhvdXJzID0gZmFsc2U7XG4gIG1pbnV0ZVN0ZXAgPSAxO1xuICBkYXRhID0gW107XG4gIG1hc2s6IGJvb2xlYW4gPSB0cnVlO1xuICB0aXRsZSA9ICcnO1xuICBva1RleHQgPSAn56Gu5a6aJztcbiAgZGlzbWlzc1RleHQgPSAn5Y+W5raIJztcbiAgZGlzYWJsZWQgPSBmYWxzZTtcbiAgbG9jYWxlO1xuICBhcHBlbmRUb0JvZHkgPSBmYWxzZTtcbiAgb25PazogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIG9uRGlzbWlzczogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIG9uVmFsdWVDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBvbkNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIGhpZGVQaWNrZXI6ICgpID0+IHZvaWQ7XG59XG4iXX0=