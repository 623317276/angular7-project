/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, TemplateRef, ViewEncapsulation } from '@angular/core';
var ActionSheetComponent = /** @class */ (function () {
    function ActionSheetComponent() {
        this.props = {
            prefixCls: 'am-action-sheet',
            cancelButtonText: '取消'
        };
        this.flag = '';
        this.title = '';
        this.message = '';
        this.transitionName = '';
        this.maskTransitionName = '';
        this.activeClassName = [this.props.prefixCls + "-button-list-item-active"];
    }
    /**
     * @param {?} flag
     * @return {?}
     */
    ActionSheetComponent.prototype.showShare = /**
     * @param {?} flag
     * @return {?}
     */
    function (flag) {
        var _a;
        /** @type {?} */
        var cls = (_a = {}, _a[this.props.prefixCls + "-share"] = flag === 'SHARE', _a);
        return cls;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ActionSheetComponent.prototype.isTemplateRef = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value) {
            return value instanceof TemplateRef;
        }
        return false;
    };
    /**
     * @param {?} options
     * @param {?} value
     * @return {?}
     */
    ActionSheetComponent.prototype.isArray = /**
     * @param {?} options
     * @param {?} value
     * @return {?}
     */
    function (options, value) {
        if (options.length > 0 && value) {
            return value instanceof Array;
        }
        return false;
    };
    ActionSheetComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ActionSheet',
                    template: "<div class=\"{{props.prefixCls}}-mask {{maskTransitionName}}\"></div>\n<div class=\"{{props.prefixCls}}-wrap {{transitionName}}\" (click)=\"onPress(-1, 0, $event)\">\n  <div role=\"document\"\n       class=\"{{props.prefixCls}}\"\n       [ngClass]=\"showShare(flag)\">\n    <div class=\"{{props.prefixCls}}-content\">\n      <button aria-label=\"Close\" class=\"{{props.prefixCls}}-close\">\n        <span class=\"{{props.prefixCls}}-close-x\"></span>\n      </button>\n      <div class=\"{{props.prefixCls}}-body\">\n        <div>\n          <ng-template *ngIf=\"isTemplateRef(title)\" [ngTemplateOutlet]=\"title\"></ng-template>\n          <h3 *ngIf=\"!isTemplateRef(title)\" class=\"{{props.prefixCls}}-title\">{{title}}</h3>\n          <ng-template *ngIf=\"isTemplateRef(message)\" [ngTemplateOutlet]=\"message\"></ng-template>\n          <div *ngIf=\"!isTemplateRef(message)\" class=\"{{props.prefixCls}}-message\">{{message}}</div>\n          <ng-container [ngSwitch]=\"flag\">\n            <div *ngSwitchCase=\"'NORMAL'\" class=\"{{props.prefixCls}}-button-list\" role=\"group\">\n              <ng-container *ngFor=\"let item of options; let i = index;\">\n                  <TouchFeedBack class=\"{{props.prefixCls}}-button-list-item\" [activeClassName]=\"activeClassName\" >\n                      <div *ngIf=\"destructiveButtonIndex !== i && cancelButtonIndex !== i\"\n                           class=\"{{props.prefixCls}}-button-list-item\"\n                           (click)=\"onPress(i, 0, $event)\"\n                      >\n                        {{item}}\n                      </div>\n                      <div *ngIf=\"destructiveButtonIndex === i\"\n                           class=\"{{props.prefixCls}}-button-list-item {{props.prefixCls}}-destructive-button\"\n                           (click)=\"onPress(i, 0, $event)\"\n                      >\n                        {{item}}\n                      </div>\n                      <div *ngIf=\"cancelButtonIndex === i\"\n                           class=\"{{props.prefixCls}}-button-list-item {{props.prefixCls}}-cancel-button\"\n                           (click)=\"onPress(i, 0, $event)\"\n                      >\n                        {{item}}\n                        <span class=\"{{props.prefixCls}}-cancel-button-mask\"></span>\n                      </div>\n                  </TouchFeedBack>\n              </ng-container>\n            </div>\n            <div *ngSwitchCase=\"'SHARE'\" class=\"{{props.prefixCls}}-share {{props.prefixCls}}-share-content\">\n              <div *ngIf=\"!isArray(options, options[0])\" class=\"{{props.prefixCls}}-share-list\">\n                <ng-container *ngFor=\"let item of options; let i = index;\">\n                  <div class=\"{{props.prefixCls}}-share-list-item\" (click)=\"onPress(i, 0, $event)\">\n                    <div class=\"{{props.prefixCls}}-share-list-item-icon\">\n                      <ng-template *ngIf=\"isTemplateRef(item.icon)\" [ngTemplateOutlet]=\"item.icon\"></ng-template>\n                      <div *ngIf=\"!isTemplateRef(item.icon)\" [innerHTML]=\"item.icon | safeHTML\"></div>\n                    </div>\n                    <div class=\"{{props.prefixCls}}-share-list-item-title\">{{item.title}}</div>\n                  </div>\n                </ng-container>\n              </div>\n              <ng-container *ngIf=\"isArray(options, options[0])\">\n                <div *ngFor=\"let items of options; let rowIndex = index\" class=\"{{props.prefixCls}}-share-list\">\n                  <ng-container *ngFor=\"let item of items; let i = index;\">\n                    <div class=\"{{props.prefixCls}}-share-list-item\" (click)=\"onPress(i, rowIndex, $event)\">\n                      <div class=\"{{props.prefixCls}}-share-list-item-icon\">\n                        <ng-template *ngIf=\"isTemplateRef(item.icon)\" [ngTemplateOutlet]=\"item.icon\"></ng-template>\n                        <div *ngIf=\"!isTemplateRef(item.icon)\" [innerHTML]=\"item.icon | safeHTML\"></div>\n                      </div>\n                      <div class=\"{{props.prefixCls}}-share-list-item-title\">{{item.title}}</div>\n                    </div>\n                  </ng-container>\n                </div>\n              </ng-container>\n              <div class=\"{{props.prefixCls}}-share-cancel-button\">{{props.cancelButtonText}}</div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    ActionSheetComponent.ctorParameters = function () { return []; };
    return ActionSheetComponent;
}());
export { ActionSheetComponent };
if (false) {
    /** @type {?} */
    ActionSheetComponent.prototype.props;
    /** @type {?} */
    ActionSheetComponent.prototype.flag;
    /** @type {?} */
    ActionSheetComponent.prototype.title;
    /** @type {?} */
    ActionSheetComponent.prototype.message;
    /** @type {?} */
    ActionSheetComponent.prototype.transitionName;
    /** @type {?} */
    ActionSheetComponent.prototype.maskTransitionName;
    /** @type {?} */
    ActionSheetComponent.prototype.activeClassName;
    /** @type {?} */
    ActionSheetComponent.prototype.onPress;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aW9uLXNoZWV0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiYWN0aW9uLXNoZWV0L2FjdGlvbi1zaGVldC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDOztJQW9CeEU7cUJBWlE7WUFDTixTQUFTLEVBQUUsaUJBQWlCO1lBQzVCLGdCQUFnQixFQUFFLElBQUk7U0FDdkI7b0JBQ2MsRUFBRTtxQkFDRCxFQUFFO3VCQUNBLEVBQUU7OEJBQ0ssRUFBRTtrQ0FDRSxFQUFFOytCQUNiLENBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLDZCQUEwQixDQUFDO0tBR3JEOzs7OztJQUVoQix3Q0FBUzs7OztJQUFULFVBQVUsSUFBSTs7O1FBQ1osSUFBTSxHQUFHLGFBQUssR0FBSSxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsV0FBUSxJQUFHLElBQUksS0FBSyxPQUFPLE1BQUc7UUFDcEUsT0FBTyxHQUFHLENBQUM7S0FDWjs7Ozs7SUFFRCw0Q0FBYTs7OztJQUFiLFVBQWMsS0FBSztRQUNqQixJQUFJLEtBQUssRUFBRTtZQUNULE9BQU8sS0FBSyxZQUFZLFdBQVcsQ0FBQztTQUNyQztRQUNELE9BQU8sS0FBSyxDQUFDO0tBQ2Q7Ozs7OztJQUVELHNDQUFPOzs7OztJQUFQLFVBQVEsT0FBWSxFQUFFLEtBQVU7UUFDOUIsSUFBSSxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxLQUFLLEVBQUU7WUFDL0IsT0FBTyxLQUFLLFlBQVksS0FBSyxDQUFDO1NBQy9CO1FBQ0QsT0FBTyxLQUFLLENBQUM7S0FDZDs7Z0JBckNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsYUFBYTtvQkFDdkIsNjVJQUE0QztvQkFDNUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOzs7OytCQU5EOztTQU9hLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVGVtcGxhdGVSZWYsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ0FjdGlvblNoZWV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2FjdGlvbi1zaGVldC5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgQWN0aW9uU2hlZXRDb21wb25lbnQge1xuICBwcm9wcyA9IHtcbiAgICBwcmVmaXhDbHM6ICdhbS1hY3Rpb24tc2hlZXQnLFxuICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognXG4gIH07XG4gIGZsYWc6IHN0cmluZyA9ICcnO1xuICB0aXRsZTogc3RyaW5nID0gJyc7XG4gIG1lc3NhZ2U6IHN0cmluZyA9ICcnO1xuICB0cmFuc2l0aW9uTmFtZTogc3RyaW5nID0gJyc7XG4gIG1hc2tUcmFuc2l0aW9uTmFtZTogc3RyaW5nID0gJyc7XG4gIGFjdGl2ZUNsYXNzTmFtZSA9IFtgJHt0aGlzLnByb3BzLnByZWZpeENsc30tYnV0dG9uLWxpc3QtaXRlbS1hY3RpdmVgXTtcbiAgb25QcmVzcztcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgc2hvd1NoYXJlKGZsYWcpIHtcbiAgICBjb25zdCBjbHMgPSB7IFtgJHt0aGlzLnByb3BzLnByZWZpeENsc30tc2hhcmVgXTogZmxhZyA9PT0gJ1NIQVJFJyB9O1xuICAgIHJldHVybiBjbHM7XG4gIH1cblxuICBpc1RlbXBsYXRlUmVmKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBUZW1wbGF0ZVJlZjtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaXNBcnJheShvcHRpb25zOiBhbnksIHZhbHVlOiBhbnkpIHtcbiAgICBpZiAob3B0aW9ucy5sZW5ndGggPiAwICYmIHZhbHVlKSB7XG4gICAgICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBBcnJheTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG4iXX0=