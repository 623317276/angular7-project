/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, HostBinding } from '@angular/core';
/** @typedef {?} */
var PositionType;
export { PositionType };
var ProgressComponent = /** @class */ (function () {
    function ProgressComponent() {
        this.prefixCls = 'am-progress';
        this._percent = 0;
        this._exceedance = false;
        this.unfilled = true;
        this.position = 'fixed';
        this.barStyle = {};
        this.max = 100;
        this.outer = true;
    }
    Object.defineProperty(ProgressComponent.prototype, "percent", {
        get: /**
         * @return {?}
         */
        function () {
            return this._percent;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._percent = value;
            if (value > 100) {
                this._exceedance = true;
            }
            else {
                this._exceedance = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this.percent;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "fixOuter", {
        get: /**
         * @return {?}
         */
        function () {
            return 'fixed' === this.position;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "hideOuter", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.unfilled && !this._exceedance;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ProgressComponent.prototype, "exceedance", {
        get: /**
         * @return {?}
         */
        function () {
            return this._exceedance;
        },
        enumerable: true,
        configurable: true
    });
    ProgressComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Progress, nzm-progress',
                    template: "<div class=\"{{prefixCls}}-bar\" [ngStyle]=\"barStyle\" [style.width.%]=\"percent\"></div>",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    ProgressComponent.ctorParameters = function () { return []; };
    ProgressComponent.propDecorators = {
        unfilled: [{ type: Input }],
        position: [{ type: Input }],
        barStyle: [{ type: Input }],
        percent: [{ type: Input }],
        max: [{ type: HostBinding, args: ['attr.max',] }],
        value: [{ type: HostBinding, args: ['attr.value',] }],
        outer: [{ type: HostBinding, args: ['class.am-progress-outer',] }],
        fixOuter: [{ type: HostBinding, args: ['class.am-progress-fixed-outer',] }],
        hideOuter: [{ type: HostBinding, args: ['class.am-progress-hide-outer',] }],
        exceedance: [{ type: HostBinding, args: ['class.am-progress-exceedance',] }]
    };
    return ProgressComponent;
}());
export { ProgressComponent };
if (false) {
    /** @type {?} */
    ProgressComponent.prototype.prefixCls;
    /** @type {?} */
    ProgressComponent.prototype._percent;
    /** @type {?} */
    ProgressComponent.prototype._exceedance;
    /** @type {?} */
    ProgressComponent.prototype.unfilled;
    /** @type {?} */
    ProgressComponent.prototype.position;
    /** @type {?} */
    ProgressComponent.prototype.barStyle;
    /** @type {?} */
    ProgressComponent.prototype.max;
    /** @type {?} */
    ProgressComponent.prototype.outer;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJwcm9ncmVzcy9wcm9ncmVzcy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7SUFzRC9FO3lCQTdDb0IsYUFBYTt3QkFFTixDQUFDOzJCQUNHLEtBQUs7d0JBR2hCLElBQUk7d0JBRUMsT0FBTzt3QkFFYixFQUFFO21CQWVQLEdBQUc7cUJBTUEsSUFBSTtLQWNMO0lBbENoQixzQkFDSSxzQ0FBTzs7OztRQURYO1lBRUUsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ3RCOzs7OztRQUNELFVBQVksS0FBYTtZQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztZQUN0QixJQUFJLEtBQUssR0FBRyxHQUFHLEVBQUU7Z0JBQ2YsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7YUFDekI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7YUFDMUI7U0FDRjs7O09BUkE7SUFZRCxzQkFDSSxvQ0FBSzs7OztRQURUO1lBRUUsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO1NBQ3JCOzs7T0FBQTtJQUdELHNCQUNJLHVDQUFROzs7O1FBRFo7WUFFRSxPQUFPLE9BQU8sS0FBSyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ2xDOzs7T0FBQTtJQUNELHNCQUNJLHdDQUFTOzs7O1FBRGI7WUFFRSxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7U0FDNUM7OztPQUFBO0lBQ0Qsc0JBQ0kseUNBQVU7Ozs7UUFEZDtZQUVFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUN6Qjs7O09BQUE7O2dCQWpERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsc0dBQXdDO29CQUN4QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtpQkFDdEM7Ozs7OzJCQU9FLEtBQUs7MkJBRUwsS0FBSzsyQkFFTCxLQUFLOzBCQUVMLEtBQUs7c0JBYUwsV0FBVyxTQUFDLFVBQVU7d0JBRXRCLFdBQVcsU0FBQyxZQUFZO3dCQUl4QixXQUFXLFNBQUMseUJBQXlCOzJCQUVyQyxXQUFXLFNBQUMsK0JBQStCOzRCQUkzQyxXQUFXLFNBQUMsOEJBQThCOzZCQUkxQyxXQUFXLFNBQUMsOEJBQThCOzs0QkFqRDdDOztTQVFhLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0VuY2Fwc3VsYXRpb24sIElucHV0LCBIb3N0QmluZGluZyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IHR5cGUgUG9zaXRpb25UeXBlID0gJ25vcm1hbCcgfCAnZml4ZWQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdQcm9ncmVzcywgbnptLXByb2dyZXNzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2dyZXNzLmNvbXBvbmVudC5odG1sJyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZVxufSlcbmV4cG9ydCBjbGFzcyBQcm9ncmVzc0NvbXBvbmVudCB7XG4gIHByZWZpeENsczogc3RyaW5nID0gJ2FtLXByb2dyZXNzJztcblxuICBwcml2YXRlIF9wZXJjZW50OiBudW1iZXIgPSAwO1xuICBwcml2YXRlIF9leGNlZWRhbmNlOiBib29sZWFuID0gZmFsc2U7XG5cbiAgQElucHV0KClcbiAgdW5maWxsZWQ6IGJvb2xlYW4gPSB0cnVlO1xuICBASW5wdXQoKVxuICBwb3NpdGlvbjogUG9zaXRpb25UeXBlID0gJ2ZpeGVkJztcbiAgQElucHV0KClcbiAgYmFyU3R5bGU6IG9iamVjdCA9IHt9O1xuICBASW5wdXQoKVxuICBnZXQgcGVyY2VudCgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLl9wZXJjZW50O1xuICB9XG4gIHNldCBwZXJjZW50KHZhbHVlOiBudW1iZXIpIHtcbiAgICB0aGlzLl9wZXJjZW50ID0gdmFsdWU7XG4gICAgaWYgKHZhbHVlID4gMTAwKSB7XG4gICAgICB0aGlzLl9leGNlZWRhbmNlID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZXhjZWVkYW5jZSA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0QmluZGluZygnYXR0ci5tYXgnKVxuICBtYXg6IG51bWJlciA9IDEwMDtcbiAgQEhvc3RCaW5kaW5nKCdhdHRyLnZhbHVlJylcbiAgZ2V0IHZhbHVlKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMucGVyY2VudDtcbiAgfVxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXByb2dyZXNzLW91dGVyJylcbiAgb3V0ZXI6IGJvb2xlYW4gPSB0cnVlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmFtLXByb2dyZXNzLWZpeGVkLW91dGVyJylcbiAgZ2V0IGZpeE91dGVyKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAnZml4ZWQnID09PSB0aGlzLnBvc2l0aW9uO1xuICB9XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcHJvZ3Jlc3MtaGlkZS1vdXRlcicpXG4gIGdldCBoaWRlT3V0ZXIoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuICF0aGlzLnVuZmlsbGVkICYmICF0aGlzLl9leGNlZWRhbmNlO1xuICB9XG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tcHJvZ3Jlc3MtZXhjZWVkYW5jZScpXG4gIGdldCBleGNlZWRhbmNlKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLl9leGNlZWRhbmNlO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7fVxufVxuIl19