/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, TemplateRef, HostBinding } from '@angular/core';
var GridComponent = /** @class */ (function () {
    function GridComponent() {
        this.wrapCls = {};
        this.itemCls = {};
        this.carouselProps = {
            dots: false,
            dragging: false
        };
        this.defaultProps = {
            data: [],
            hasLine: true,
            isCarousel: false,
            columnNum: 4,
            carouselMaxRow: 2,
            prefixCls: 'am-grid',
            square: true,
            itemStyle: {}
        };
        this.carouselData = [];
        this.carouselDataTmp = [];
        this.gridData = [];
        this._data = [];
        this.columnNum = 4;
        this.carouselMaxRow = 2;
        this.itemStyle = {};
        this.square = true;
        this.hasLine = true;
        this.activeStyle = true;
        this.OnClick = new EventEmitter();
        this.amGrid = true;
    }
    Object.defineProperty(GridComponent.prototype, "isCarousel", {
        get: /**
         * @return {?}
         */
        function () {
            return this.defaultProps.isCarousel;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.isCarousel = value;
            this.init();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridComponent.prototype, "data", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._data = value;
            this.init();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridComponent.prototype, "amGridSquare", {
        get: /**
         * @return {?}
         */
        function () {
            return true === this.square;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridComponent.prototype, "amGridLine", {
        get: /**
         * @return {?}
         */
        function () {
            return true === this.hasLine;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridComponent.prototype, "amGridCarousel", {
        get: /**
         * @return {?}
         */
        function () {
            return true === this.isCarousel;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    GridComponent.prototype.isTemplateRef = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return value instanceof TemplateRef;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    GridComponent.prototype.isURL = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value) {
            return value.indexOf('http') >= 0;
        }
        else {
            return false;
        }
    };
    /**
     * @return {?}
     */
    GridComponent.prototype.init = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var dataLength = (this._data && this._data.length) || 0;
        /** @type {?} */
        var rowCount = Math.ceil(dataLength / this.columnNum);
        /** @type {?} */
        var rowsArr;
        if (this.defaultProps.isCarousel) {
            if (rowCount % this.carouselMaxRow !== 0) {
                rowCount = rowCount + this.carouselMaxRow - (rowCount % this.carouselMaxRow);
            }
            /** @type {?} */
            var pageCount = Math.ceil(rowCount / this.carouselMaxRow);
            rowsArr = this.getRows(rowCount, dataLength);
            if (pageCount <= 1) {
                this.carouselProps = {
                    dots: false,
                    dragging: false
                };
            }
            else {
                this.carouselProps = {
                    dots: true,
                    dragging: true
                };
            }
            this.carouselDataTmp = this.getCarouselData(rowsArr, pageCount, rowCount);
        }
        else {
            this.gridData = this.getRows(rowCount, dataLength);
        }
    };
    /**
     * @param {?} rowsArr
     * @param {?} pageCount
     * @param {?} rowCount
     * @return {?}
     */
    GridComponent.prototype.getCarouselData = /**
     * @param {?} rowsArr
     * @param {?} pageCount
     * @param {?} rowCount
     * @return {?}
     */
    function (rowsArr, pageCount, rowCount) {
        /** @type {?} */
        var pagesArr = [];
        for (var pageIndex = 0; pageIndex < pageCount; pageIndex++) {
            /** @type {?} */
            var pageRows = [];
            for (var ii = 0; ii < this.carouselMaxRow; ii++) {
                /** @type {?} */
                var rowIndex = pageIndex * this.carouselMaxRow + ii;
                if (rowIndex < rowCount) {
                    pageRows.push(rowsArr[rowIndex]);
                }
                else {
                    // 空节点为了确保末尾页的最后未到底的行有底线(样式中last-child会没线)
                    pageRows.push(null);
                }
            }
            pagesArr.push(pageRows);
        }
        return pagesArr;
    };
    /**
     * @param {?} rowCount
     * @param {?} dataLength
     * @return {?}
     */
    GridComponent.prototype.getRows = /**
     * @param {?} rowCount
     * @param {?} dataLength
     * @return {?}
     */
    function (rowCount, dataLength) {
        /** @type {?} */
        var columnNum = this.columnNum;
        /** @type {?} */
        var rowArr = new Array();
        for (var i = 0; i < rowCount; i++) {
            rowArr[i] = new Array();
            for (var j = 0; j < columnNum; j++) {
                /** @type {?} */
                var dataIndex = i * columnNum + j;
                if (dataIndex < dataLength) {
                    rowArr[i][j] = this._data[dataIndex];
                }
                else {
                    rowArr[i][j] = null;
                }
            }
        }
        return rowArr;
    };
    /**
     * @param {?} data
     * @param {?} index
     * @return {?}
     */
    GridComponent.prototype.click = /**
     * @param {?} data
     * @param {?} index
     * @return {?}
     */
    function (data, index) {
        /** @type {?} */
        var outputData = {
            data: data,
            index: index
        };
        this.OnClick.emit(outputData);
    };
    /**
     * @return {?}
     */
    GridComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _a;
        this.itemCls = (_a = {},
            _a[this.defaultProps.prefixCls + "-item"] = true,
            _a[this.defaultProps.prefixCls + "-active-item"] = false,
            _a);
    };
    GridComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Grid, nzm-grid',
                    template: "<ng-container *ngIf=\"!isCarousel\">\n  <Flex *ngFor=\"let item of gridData; let i = index;\"\n        [justify]=\"'center'\"\n        [align]=\"'stretch'\"\n  >\n    <FlexItem TouchFeedback\n              *ngFor=\"let subItem of item; let j = index;\"\n              [ngClass]=\"itemCls\"\n              [ngStyle]=\"itemStyle\"\n              [className]=\"['am-grid-item-active']\"\n              [activeStyle]=\"activeStyle\"\n    >\n      <div *ngIf=\"subItem !== null\"\n           class=\"{{defaultProps.prefixCls}}-item-content\"\n           (click)=\"click(subItem,i * columnNum + j)\"\n      >\n        <div class=\"{{defaultProps.prefixCls}}-item-inner-content column-num-{{columnNum}}\">\n          <img *ngIf=\"subItem.icon && isURL(subItem.icon)\"\n               src=\"{{subItem.icon}}\"\n               class=\"{{defaultProps.prefixCls}}-icon\"\n          >\n          <Icon *ngIf=\"subItem.icon && !isURL(subItem.icon)\"\n                [type]=\"subItem.icon\"\n                [size]=\"subItem.size\"\n          ></Icon>\n          <div class=\"{{defaultProps.prefixCls}}-text\">{{subItem.text}}</div>\n        </div>\n      </div>\n      <div *ngIf=\"subItem === null\" class=\"{{defaultProps.prefixCls}}-null-item\"></div>\n    </FlexItem>\n    <ng-content></ng-content>\n  </Flex>\n</ng-container>\n\n<Carousel *ngIf=\"isCarousel && carouselDataTmp.length > 0\"\n          [autoplay]=\"false\"\n          [infinite]=\"true\"\n          [selectedIndex]=\"0\"\n          [autoplayInterval]='3000'\n          [dots]=\"carouselProps.dots\"\n          [dragging]=\"carouselProps.dragging\"\n>\n  <CarouselSlide *ngFor=\"let gridData of carouselDataTmp\"\n                 class=\"{{defaultProps.prefixCls}}-carousel-page\"\n                 style=\"display: block;\"\n  >\n    <Flex *ngFor=\"let item of gridData; let i = index;\"\n          [justify]=\"'center'\"\n          [align]=\"'stretch'\"\n    >\n      <FlexItem TouchFeedback\n                *ngFor=\"let subItem of item; let j = index;\"\n                class=\"{{defaultProps.prefixCls}}-item\"\n                [ngStyle]=\"itemStyle\"\n                [className]=\"['am-grid-item-active']\"\n      >\n        <div *ngIf=\"subItem !== null\"\n             class=\"{{defaultProps.prefixCls}}-item-content\"\n             (click)=\"click(subItem,i * columnNum + j)\"\n        >\n          <div class=\"{{defaultProps.prefixCls}}-item-inner-content column-num-4\">\n            <img class=\"{{defaultProps.prefixCls}}-icon\" src=\"{{subItem.icon}}\">\n            <div class=\"{{defaultProps.prefixCls}}-text\">{{subItem.text}}</div>\n          </div>\n        </div>\n        <div *ngIf=\"subItem === null\" class=\"{{defaultProps.prefixCls}}-null-item\"></div>\n      </FlexItem>\n    </Flex>\n  </CarouselSlide>\n</Carousel>"
                }] }
    ];
    /** @nocollapse */
    GridComponent.ctorParameters = function () { return []; };
    GridComponent.propDecorators = {
        columnNum: [{ type: Input }],
        carouselMaxRow: [{ type: Input }],
        itemStyle: [{ type: Input }],
        square: [{ type: Input }],
        hasLine: [{ type: Input }],
        isCarousel: [{ type: Input }],
        activeStyle: [{ type: Input }],
        data: [{ type: Input }],
        OnClick: [{ type: Output }],
        amGrid: [{ type: HostBinding, args: ['class.am-grid',] }],
        amGridSquare: [{ type: HostBinding, args: ['class.am-grid-square',] }],
        amGridLine: [{ type: HostBinding, args: ['class.am-grid-line',] }],
        amGridCarousel: [{ type: HostBinding, args: ['class.am-grid-carousel',] }]
    };
    return GridComponent;
}());
export { GridComponent };
if (false) {
    /** @type {?} */
    GridComponent.prototype.wrapCls;
    /** @type {?} */
    GridComponent.prototype.itemCls;
    /** @type {?} */
    GridComponent.prototype.carouselProps;
    /** @type {?} */
    GridComponent.prototype.defaultProps;
    /** @type {?} */
    GridComponent.prototype.carouselData;
    /** @type {?} */
    GridComponent.prototype.carouselDataTmp;
    /** @type {?} */
    GridComponent.prototype.gridData;
    /** @type {?} */
    GridComponent.prototype._data;
    /** @type {?} */
    GridComponent.prototype.columnNum;
    /** @type {?} */
    GridComponent.prototype.carouselMaxRow;
    /** @type {?} */
    GridComponent.prototype.itemStyle;
    /** @type {?} */
    GridComponent.prototype.square;
    /** @type {?} */
    GridComponent.prototype.hasLine;
    /** @type {?} */
    GridComponent.prototype.activeStyle;
    /** @type {?} */
    GridComponent.prototype.OnClick;
    /** @type {?} */
    GridComponent.prototype.amGrid;
}

//# sourceMappingURL=data:application/json;base64,