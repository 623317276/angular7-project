/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewEncapsulation, Input, Output, EventEmitter } from '@angular/core';
import { Subject } from 'rxjs';
import { LocaleProviderService } from '../locale-provider/locale-provider.service';
import { takeUntil } from 'rxjs/operators';
var MenuComponent = /** @class */ (function () {
    function MenuComponent(_localeProviderService) {
        this._localeProviderService = _localeProviderService;
        this.prefixCls = 'am-menu';
        this.subMenuPrefixCls = 'am-sub-menu';
        this.radioPrefixCls = 'am-radio';
        this.multiSelectMenuBtnsCls = 'am-multi-select-btns';
        this.menuSelectContanerPrefixCls = 'am-menu-select-container';
        this.locale = {};
        this._data = [];
        this._unsubscribe$ = new Subject();
        this.level = 2;
        this.value = [];
        this.height = document.documentElement.clientHeight / 2;
        this.multiSelect = false;
        this.onChange = new EventEmitter();
        this.onOk = new EventEmitter();
        this.onCancel = new EventEmitter();
    }
    Object.defineProperty(MenuComponent.prototype, "data", {
        get: /**
         * @return {?}
         */
        function () {
            return this._data;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._data = v;
            this.initData();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    MenuComponent.prototype.onMenuOk = /**
     * @return {?}
     */
    function () {
        this.onOk.emit(this.value);
    };
    /**
     * @return {?}
     */
    MenuComponent.prototype.onMenuCancel = /**
     * @return {?}
     */
    function () {
        this.onCancel.emit();
    };
    /**
     * @return {?}
     */
    MenuComponent.prototype.getNewFsv = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var firstValue = '';
        if (this.value && this.value.length) {
            firstValue = /** @type {?} */ (this.value[0]);
        }
        else if (this._data && this._data.length && !this._data[0].isLeaf) {
            firstValue = this._data[0].value;
        }
        return firstValue;
    };
    /**
     * @param {?} dataItem
     * @return {?}
     */
    MenuComponent.prototype.onClickFirstLevelItem = /**
     * @param {?} dataItem
     * @return {?}
     */
    function (dataItem) {
        this.firstLevelSelectValue = dataItem.value;
        if (dataItem.isLeaf && this.onChange) {
            this.onChange.emit([dataItem.value]);
        }
        this.initData();
    };
    /**
     * @param {?} dataItem
     * @return {?}
     */
    MenuComponent.prototype.onClickSubMenuItem = /**
     * @param {?} dataItem
     * @return {?}
     */
    function (dataItem) {
        var _this = this;
        this.value = this.getSelectValue(dataItem);
        this.initData();
        setTimeout(function () {
            _this.onChange.emit(_this.value);
        }, 300);
    };
    /**
     * @param {?} dataItem
     * @return {?}
     */
    MenuComponent.prototype.getSelectValue = /**
     * @param {?} dataItem
     * @return {?}
     */
    function (dataItem) {
        if (this.multiSelect) {
            if (this.value && this.value.length > 0) {
                if (this.level === 2 && this.value[0] !== this.firstLevelSelectValue) {
                    return [this.firstLevelSelectValue, [dataItem.value]];
                }
                else {
                    if (this.level == 1) {
                        /** @type {?} */
                        var chosenValues = Array.from(this.value);
                        /** @type {?} */
                        var existIndex = chosenValues.indexOf(dataItem.value);
                        if (existIndex === -1) {
                            chosenValues.push(dataItem.value);
                        }
                        else {
                            chosenValues.splice(existIndex, 1);
                        }
                        return chosenValues;
                    }
                    else {
                        /** @type {?} */
                        var chosenValues = Array.from(this.value[1]);
                        /** @type {?} */
                        var existIndex = chosenValues.indexOf(dataItem.value);
                        if (existIndex === -1) {
                            chosenValues.push(dataItem.value);
                        }
                        else {
                            chosenValues.splice(existIndex, 1);
                        }
                        return [this.firstLevelSelectValue, chosenValues];
                    }
                }
            }
            else {
                return this.level === 2 ? [this.firstLevelSelectValue, [dataItem.value]] : [dataItem.value];
            }
        }
        return this.level === 2 ? [this.firstLevelSelectValue, dataItem.value] : [dataItem.value];
    };
    /**
     * @return {?}
     */
    MenuComponent.prototype.initData = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.subMenuData = this._data;
        if (this.level === 2) {
            /** @type {?} */
            var parent_1 = this._data;
            if (this.firstLevelSelectValue && this.firstLevelSelectValue !== '') {
                parent_1 = this._data.filter(function (dataItem) { return dataItem.value === _this.firstLevelSelectValue; });
            }
            if (parent_1[0] && parent_1[0].children && parent_1[0].isLeaf !== true) {
                this.subMenuData = parent_1[0].children;
            }
            else {
                this.subMenuData = [];
            }
        }
        /** @type {?} */
        var subValue = (this.value && this.value.length > 0 && tslib_1.__spread(this.value)) || [];
        if (this.level === 2 && subValue.length > 1) {
            subValue.shift();
            if (this.multiSelect) {
                subValue = /** @type {?} */ (subValue[0]);
            }
        }
        this.subSelInitItem = this.subMenuData.filter(function (dataItem) { return subValue.indexOf(dataItem.value) !== -1; }).map(function (item) {
            return item.value;
        });
        /** @type {?} */
        var parentValue = this.value && this.value.length > 1 && this.level === 2 ? this.value[0] : null;
        this.showSelect = true;
        if (this.level === 2 && parentValue !== this.firstLevelSelectValue) {
            this.showSelect = false;
        }
    };
    /**
     * @param {?} dataItem
     * @return {?}
     */
    MenuComponent.prototype.getClass = /**
     * @param {?} dataItem
     * @return {?}
     */
    function (dataItem) {
        return this.dataItemSelected(dataItem) ? this.prefixCls + '-selected' : '';
    };
    /**
     * @param {?} dataItem
     * @return {?}
     */
    MenuComponent.prototype.dataItemSelected = /**
     * @param {?} dataItem
     * @return {?}
     */
    function (dataItem) {
        return dataItem.value === this.firstLevelSelectValue;
    };
    /**
     * @return {?}
     */
    MenuComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._localeProviderService.localeChange.pipe(takeUntil(this._unsubscribe$)).subscribe(function (_) {
            _this.locale = _this._localeProviderService.getLocaleSubObj('Menu');
        });
        this.firstLevelSelectValue = this.getNewFsv();
        this.heightStyle = {
            height: this.height + 'px'
        };
        this.initData();
    };
    /**
     * @return {?}
     */
    MenuComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._unsubscribe$.next();
        this._unsubscribe$.complete();
    };
    MenuComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Menu, nzm-menu',
                    template: "<Flex class=\"{{prefixCls}}\"\n      [ngStyle]=\"heightStyle\"\n      [direction]=\"'column'\"\n      [align]=\"'stretch'\"\n>\n  <Flex class=\"{{menuSelectContanerPrefixCls}}\" [align]=\"'start'\">\n    <FlexItem *ngIf=\"level == 2\">\n      <List role=\"tablist\">\n        <ListItem role=\"tab\"\n                  *ngFor=\"let dataItem of data, let i = index\"\n                  [className]=\"getClass(dataItem)\"\n                  (click)=\"onClickFirstLevelItem(dataItem)\"\n        >\n          {{dataItem.label}}\n        </ListItem>\n      </List>\n    </FlexItem>\n\n    <FlexItem role=\"tabpanel\" aria-hidden=\"false\" class=\"{{menuSelectContanerPrefixCls}}-submenu\">\n      <SubMenu [subMenuPrefixCls]=\"subMenuPrefixCls\"\n               [radioPrefixCls]=\"radioPrefixCls\"\n               [subMenuData]=\"subMenuData\"\n               [selItem]=\"subSelInitItem\"\n               [showSelect]=\"showSelect\"\n               [multiSelect]=\"multiSelect\"\n               (onSel)=\"onClickSubMenuItem($event)\">\n      </SubMenu>\n    </FlexItem>\n  </Flex>\n\n  <div *ngIf=\"multiSelect\" class=\"{{multiSelectMenuBtnsCls}}\">\n    <a Button\n       [className]=\"'am-multi-select-btns-btn'\"\n       [inline]=\"true\"\n       (onClick)=\"onMenuCancel()\"\n    >\n      {{locale.cancelText}}\n    </a>\n    <a Button\n       [className]=\"'am-multi-select-btns-btn'\"\n       [inline]=\"true\" [type]=\"'primary'\"\n       (onClick)=\"onMenuOk()\"\n    >\n      {{locale.okText}}\n    </a>\n  </div>\n</Flex>\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    MenuComponent.ctorParameters = function () { return [
        { type: LocaleProviderService }
    ]; };
    MenuComponent.propDecorators = {
        data: [{ type: Input }],
        level: [{ type: Input }],
        value: [{ type: Input }],
        height: [{ type: Input }],
        multiSelect: [{ type: Input }],
        onChange: [{ type: Output }],
        onOk: [{ type: Output }],
        onCancel: [{ type: Output }]
    };
    return MenuComponent;
}());
export { MenuComponent };
if (false) {
    /** @type {?} */
    MenuComponent.prototype.prefixCls;
    /** @type {?} */
    MenuComponent.prototype.subMenuPrefixCls;
    /** @type {?} */
    MenuComponent.prototype.radioPrefixCls;
    /** @type {?} */
    MenuComponent.prototype.multiSelectMenuBtnsCls;
    /** @type {?} */
    MenuComponent.prototype.menuSelectContanerPrefixCls;
    /** @type {?} */
    MenuComponent.prototype.firstLevelSelectValue;
    /** @type {?} */
    MenuComponent.prototype.heightStyle;
    /** @type {?} */
    MenuComponent.prototype.subMenuData;
    /** @type {?} */
    MenuComponent.prototype.showSelect;
    /** @type {?} */
    MenuComponent.prototype.subSelInitItem;
    /** @type {?} */
    MenuComponent.prototype.locale;
    /** @type {?} */
    MenuComponent.prototype._data;
    /** @type {?} */
    MenuComponent.prototype._unsubscribe$;
    /** @type {?} */
    MenuComponent.prototype.level;
    /** @type {?} */
    MenuComponent.prototype.value;
    /** @type {?} */
    MenuComponent.prototype.height;
    /** @type {?} */
    MenuComponent.prototype.multiSelect;
    /** @type {?} */
    MenuComponent.prototype.onChange;
    /** @type {?} */
    MenuComponent.prototype.onOk;
    /** @type {?} */
    MenuComponent.prototype.onCancel;
    /** @type {?} */
    MenuComponent.prototype._localeProviderService;
}

//# sourceMappingURL=data:application/json;base64,