/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { IconHandler } from '../core/util/icon';
var NoticeBarComponent = /** @class */ (function () {
    function NoticeBarComponent(_iconHandler) {
        this._iconHandler = _iconHandler;
        this.isShow = false;
        this.isStopScroll = false;
        this.marqueeScroll = 'scrolling';
        this.style = {};
        this._timer = null;
        this.marqueeProps = { loop: true, leading: 500, trailing: 8000, fps: 200, style: {} };
        this.noticeBarcontent = '';
        this.onClick = new EventEmitter();
        this._iconHandler.load();
    }
    Object.defineProperty(NoticeBarComponent.prototype, "stopScrolling", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.isStopScroll = value;
            if (value) {
                this.marqueeScroll = 'scrolling-stop';
                clearTimeout(this._timer);
                this._timer = setTimeout(function () {
                    this.marqueeScroll = 'scrolling';
                }, 1000);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NoticeBarComponent.prototype, "mode", {
        get: /**
         * @return {?}
         */
        function () {
            return this._mode;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._mode = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NoticeBarComponent.prototype, "icon", {
        get: /**
         * @return {?}
         */
        function () {
            return this._icon;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._icon = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NoticeBarComponent.prototype, "action", {
        get: /**
         * @return {?}
         */
        function () {
            return this._action;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._action = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NoticeBarComponent.prototype.click = /**
     * @return {?}
     */
    function () {
        this.onClick.emit(this._mode);
        if (this._mode === 'closable') {
            this.isShow = false;
        }
    };
    /**
     * @return {?}
     */
    NoticeBarComponent.prototype.dataProcess = /**
     * @return {?}
     */
    function () {
        this.isShow = true;
        this.style = {
            width: '200%'
        };
        if (window.innerWidth < this._width) {
            /** @type {?} */
            var count = this.marqueeProps.loop ? 'infinite' : 1;
            this.style = {
                width: this._width * 2 + 'px',
                'animation-delay': this.marqueeProps.leading + "ms",
                'animation-duration': (1 / this.marqueeProps.fps) * 1000 + "s",
                'animation-iteration-count': "" + count
            };
            scroll.call(this);
        }
        else {
            this.marqueeScroll = 'scrolling-stop';
        }
    };
    /**
     * @return {?}
     */
    NoticeBarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        document.addEventListener('touchstart', function () {
            _this.marqueeScroll = 'scrolling-stop';
        });
        document.addEventListener('touchend', function () {
            _this.marqueeScroll = 'scrolling';
        });
        this._width = getRectWidth(this.noticeBarcontent);
        this.dataProcess();
    };
    NoticeBarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'NoticeBar, nzm-notice-bar',
                    template: "<div role=\"alert\" *ngIf=\"isShow\" class=\"am-notice-bar\" (click)=\"click()\">\n  <div *ngIf=\"icon !== null\" class=\"am-notice-bar-icon\">\n    <ng-template [ngTemplateOutlet]=\"icon || voice\"></ng-template>\n  </div>\n  <div class=\"am-notice-bar-content\">\n    <div class=\"marquee\">\n      <div [ngClass]=\"marqueeScroll\" [ngStyle]=\"style\">\n        <span>{{noticeBarcontent}}</span>\n        <span>{{noticeBarcontent}}</span>\n      </div>\n    </div>\n  </div>\n  <div role=\"button\" *ngIf=\"mode && action !== null\" class=\"am-notice-bar-operation\">\n    <ng-template *ngIf=\"mode === 'closable'\" [ngTemplateOutlet]=\"action || cross\"></ng-template>\n    <ng-template *ngIf=\"mode === 'link'\" [ngTemplateOutlet]=\"action || right\"></ng-template>\n  </div>\n</div>\n\n<ng-template #voice>\n  <Icon [type]=\"'voice'\" [size]=\"'xxs'\"></Icon>\n</ng-template>\n<ng-template #cross>\n  <Icon [type]=\"'cross'\" [size]=\"'md'\"></Icon>\n</ng-template>\n<ng-template #right>\n  <Icon [type]=\"'right'\" [size]=\"'md'\"></Icon>\n</ng-template>\n",
                    providers: [IconHandler]
                }] }
    ];
    /** @nocollapse */
    NoticeBarComponent.ctorParameters = function () { return [
        { type: IconHandler }
    ]; };
    NoticeBarComponent.propDecorators = {
        stopScrolling: [{ type: Input }],
        mode: [{ type: Input }],
        icon: [{ type: Input }],
        action: [{ type: Input }],
        marqueeProps: [{ type: Input }],
        noticeBarcontent: [{ type: Input }],
        onClick: [{ type: Output }]
    };
    return NoticeBarComponent;
}());
export { NoticeBarComponent };
if (false) {
    /** @type {?} */
    NoticeBarComponent.prototype.actionDom;
    /** @type {?} */
    NoticeBarComponent.prototype.isShow;
    /** @type {?} */
    NoticeBarComponent.prototype.isStopScroll;
    /** @type {?} */
    NoticeBarComponent.prototype.styleDom;
    /** @type {?} */
    NoticeBarComponent.prototype.rate;
    /** @type {?} */
    NoticeBarComponent.prototype.marqueeScroll;
    /** @type {?} */
    NoticeBarComponent.prototype.style;
    /** @type {?} */
    NoticeBarComponent.prototype._mode;
    /** @type {?} */
    NoticeBarComponent.prototype._icon;
    /** @type {?} */
    NoticeBarComponent.prototype._action;
    /** @type {?} */
    NoticeBarComponent.prototype._timer;
    /** @type {?} */
    NoticeBarComponent.prototype._width;
    /** @type {?} */
    NoticeBarComponent.prototype.marqueeProps;
    /** @type {?} */
    NoticeBarComponent.prototype.noticeBarcontent;
    /** @type {?} */
    NoticeBarComponent.prototype.onClick;
    /** @type {?} */
    NoticeBarComponent.prototype._iconHandler;
}
/**
 * @return {?}
 */
function scroll() {
    /** @type {?} */
    var styleDom = document.getElementById('notice_bar_animation_cls');
    if (styleDom) {
        return;
    }
    styleDom = document.createElement('style');
    styleDom.setAttribute('id', 'notice_bar_animation_cls');
    styleDom.innerHTML = "@-webkit-keyframes noticebarmarquee{ 0% { left: 0px; } 100% { left: -" + this._width + "px; }}";
    document.body.appendChild(styleDom);
}
/**
 * @param {?} text
 * @return {?}
 */
function getRectWidth(text) {
    /** @type {?} */
    var _dom = document.createElement('div');
    _dom.innerHTML = text;
    _dom.style.position = 'absolute';
    _dom.style.left = '-9999';
    _dom.style.whiteSpace = 'nowrap';
    _dom.style.fontSize = '14px';
    document.body.appendChild(_dom);
    /** @type {?} */
    var _w = _dom.clientWidth + 20;
    document.body.removeChild(_dom);
    return _w;
}

//# sourceMappingURL=data:application/json;base64,