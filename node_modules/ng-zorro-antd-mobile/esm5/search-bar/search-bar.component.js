/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, Output, forwardRef, ElementRef, EventEmitter, ViewChild } from '@angular/core';
import { trigger, state, animate, transition, style } from '@angular/animations';
import { LocaleProviderService } from '../locale-provider/locale-provider.service';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
var SearchBar = /** @class */ (function () {
    function SearchBar(_elementRef, _localeProvider) {
        var _a;
        this._elementRef = _elementRef;
        this._localeProvider = _localeProvider;
        this.prefixCls = 'am-search';
        this.cancelCls = (_a = {},
            _a[this.prefixCls + "-cancel"] = true,
            _a);
        this._defaultValue = '';
        this._value = '';
        this._placeholder = '';
        this._showCancelButton = false;
        this._disabled = false;
        this._focus = false;
        this._isSubmit = false;
        this._isCustomText = false;
        this._isClearClicking = false;
        this._blurFromOnClear = false;
        this.locale = {};
        this._unsubscribe$ = new Subject();
        this.onSubmit = new EventEmitter();
        this.onChange = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onCancel = new EventEmitter();
        this.onClear = new EventEmitter();
    }
    Object.defineProperty(SearchBar.prototype, "defaultValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._defaultValue = value;
            this._value = value;
            this.inputElementRef.nativeElement.value = this._value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBar.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this._value = v || '';
            this.inputElementRef.nativeElement.value = this._value;
            this.setClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBar.prototype, "placeholder", {
        get: /**
         * @return {?}
         */
        function () {
            return this._placeholder;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._placeholder = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBar.prototype, "showCancelButton", {
        get: /**
         * @return {?}
         */
        function () {
            return this._showCancelButton;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._showCancelButton = value;
            this.setClass();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBar.prototype, "cancelText", {
        get: /**
         * @return {?}
         */
        function () {
            return this._cancelText;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== undefined) {
                this._cancelText = value;
                this._isCustomText = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBar.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._disabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBar.prototype, "maxLength", {
        get: /**
         * @return {?}
         */
        function () {
            return this._maxLength;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._maxLength = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SearchBar.prototype, "setFocus", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                if (value.focusValue) {
                    this._focus = true;
                    this.inputElementRef.nativeElement.focus();
                    this._blurFromOnClear = true;
                    this.onSearchbarFocus();
                }
                else {
                    this._blurFromOnClear = false;
                    this.onSearchbarBlur();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SearchBar.prototype.setClass = /**
     * @return {?}
     */
    function () {
        var _a, _b, _c;
        this.wrapCls = (_a = {},
            _a["" + this.prefixCls] = true,
            _a[this.prefixCls + "-start"] = !!(this._focus || (this._value && this._value.length > 0)) && !this._disabled,
            _a);
        this.cancelCls = (_b = {},
            _b[this.prefixCls + "-cancel"] = true,
            _b[this.prefixCls + "-cancel-show"] = this._showCancelButton || this._focus || (this._value && this._value.length > 0),
            _b[this.prefixCls + "-cancel-anim"] = this._focus,
            _b);
        this.clearCls = (_c = {},
            _c[this.prefixCls + "-clear"] = this._value && this._value.length > 0,
            _c[this.prefixCls + "-clear-show"] = this._value && this._value.length > 0 && !this._isSubmit,
            _c[this.prefixCls + "-clear-active"] = this._isClearClicking,
            _c);
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.setStyle = /**
     * @return {?}
     */
    function () {
        if (this._inputContainerRef.className.indexOf(this.prefixCls + "-start") > -1) {
            /** @type {?} */
            var realWidth = this._syntheticPhContainerRef.getBoundingClientRect().width;
            this._syntheticPhRef.style.width = Math.ceil(realWidth) + 'px';
            if (!this._showCancelButton) {
                this._rightBtnRef.style.marginRight = '0';
            }
        }
        else {
            this._syntheticPhRef.style.width = '100%';
            if (!this._showCancelButton) {
                this._rightBtnInitMarginLeft = window.getComputedStyle(this._rightBtnRef)['margin-left'];
                /** @type {?} */
                var btnMarginRight = this._rightBtnRef.offsetWidth + parseInt(this._rightBtnInitMarginLeft, 10);
                this._rightBtnRef.style.marginRight = '-' + btnMarginRight + 'px';
            }
        }
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.onSearchbarBlur = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        setTimeout(function () {
            if (!self._blurFromOnClear && self._value === '' && self._focus) {
                self._focus = false;
                self._value = '';
                self.onBlur.emit();
                self.setClass();
            }
            self._blurFromOnClear = false;
        }, 50);
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.onSearchbarFocus = /**
     * @return {?}
     */
    function () {
        this._focus = true;
        this._isSubmit = false;
        this.onFocus.emit();
        this.setClass();
    };
    /**
     * @param {?} e
     * @return {?}
     */
    SearchBar.prototype.onSearchbarChange = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this._focus = true;
        this.onChange.emit(e);
        this.setClass();
    };
    /**
     * @param {?} e
     * @return {?}
     */
    SearchBar.prototype.onSearchSubmit = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        e.preventDefault();
        this._value = e.target[0].value;
        this._isSubmit = true;
        this.onSubmit.emit(this._value);
        this.setClass();
        this._blurFromOnClear = true;
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.onSearchbarCancel = /**
     * @return {?}
     */
    function () {
        this._focus = false;
        this._value = '';
        this.onCancel.emit();
        this.setClass();
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.onSearchbarClear = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._blurFromOnClear = true;
        this._isClearClicking = true;
        this.onSearchbarChange('');
        this.inputElementRef.nativeElement.focus();
        this.onClear.emit(this._value);
        this.setClass();
        setTimeout(function () {
            _this._value = '';
            _this._isClearClicking = false;
            _this._blurFromOnClear = false;
            _this.setClass();
        }, 100);
        this.onSearchbarFocus();
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.setClass();
        this._localeProvider.localeChange.pipe(takeUntil(this._unsubscribe$)).subscribe(function (_) {
            _this.locale = _this._localeProvider.getLocaleSubObj('SearchBar');
            _this._cancelText = _this._isCustomText ? _this._cancelText : _this.locale.cancelText;
        });
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this._syntheticPhContainerRef = this._elementRef.nativeElement.getElementsByClassName(this.prefixCls + "-synthetic-ph-container")[0];
        this._syntheticPhRef = this._elementRef.nativeElement.getElementsByClassName(this.prefixCls + "-synthetic-ph")[0];
        this._rightBtnRef = this._elementRef.nativeElement.getElementsByClassName('cancel')[0];
        this._inputContainerRef = this._elementRef.nativeElement.getElementsByClassName("" + this.prefixCls)[0];
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
        this.setStyle();
    };
    /**
     * @return {?}
     */
    SearchBar.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._unsubscribe$.next();
        this._unsubscribe$.complete();
    };
    SearchBar.decorators = [
        { type: Component, args: [{
                    selector: 'SearchBar, nzm-search-bar',
                    template: "<form name=\"myForm\"\n      class=\"{{prefixCls}}\"\n      [ngClass]=\"wrapCls\"\n      action=\"#\"\n      (submit)=\"onSearchSubmit($event)\"\n>\n  <div class=\"{{prefixCls}}-input\">\n    <div class=\"{{prefixCls}}-synthetic-ph\"\n         style=\"box-sizing:unset\"\n         [@cancelButtonState]=\"showCancelButton?'visible' : 'hidden'\"\n    >\n      <span class=\"{{prefixCls}}-synthetic-ph-container\">\n        <i class=\"{{prefixCls}}-synthetic-ph-icon\"></i>\n        <span class=\"{{prefixCls}}-synthetic-ph-placeholder\"\n              [ngStyle]=\"{'visibility' : (placeholder && !value) ? 'visible' : 'hidden'}\"\n        >\n          {{placeholder}}\n        </span>\n      </span>\n    </div>\n    <input #search\n           class=\"{{prefixCls}}-value\"\n           style=\"outline:none;\"\n           [name]=\"'search'\"\n           [type]=\"'search'\"\n           [disabled]=\"disabled\"\n           [maxlength]=\"maxLength\"\n           [placeholder]=\"placeholder\"\n           [(ngModel)]=\"value\"\n           (blur)=\"onSearchbarBlur()\"\n           (focus)=\"onSearchbarFocus()\"\n           (ngModelChange)=\"onSearchbarChange($event)\"\n    />\n    <a [ngClass]=\"clearCls\"\n       style=\"box-sizing: content-box;transition: 0s\"\n       (click)=\"onSearchbarClear()\"\n    ></a>\n  </div>\n  <div class=\"cancel\"\n       [ngClass]=\"cancelCls\"\n       (click)=\"onSearchbarCancel()\"\n  >\n    {{cancelText}}\n  </div>\n</form>",
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return SearchBar; }),
                            multi: true
                        }
                    ],
                    animations: [
                        trigger('cancelButtonState', [
                            state('visible', style({ width: '*' })),
                            state('hidden', style({ width: '100%' })),
                            transition('visible =>hidden', [animate(300, style({ width: '100%' }))]),
                            transition('hidden => visible', [animate(300, style({ width: '*' }))])
                        ])
                    ]
                }] }
    ];
    /** @nocollapse */
    SearchBar.ctorParameters = function () { return [
        { type: ElementRef },
        { type: LocaleProviderService }
    ]; };
    SearchBar.propDecorators = {
        inputElementRef: [{ type: ViewChild, args: ['search',] }],
        defaultValue: [{ type: Input }],
        value: [{ type: Input }],
        placeholder: [{ type: Input }],
        showCancelButton: [{ type: Input }],
        cancelText: [{ type: Input }],
        disabled: [{ type: Input }],
        maxLength: [{ type: Input }],
        setFocus: [{ type: Input }],
        onSubmit: [{ type: Output }],
        onChange: [{ type: Output }],
        onFocus: [{ type: Output }],
        onBlur: [{ type: Output }],
        onCancel: [{ type: Output }],
        onClear: [{ type: Output }]
    };
    return SearchBar;
}());
export { SearchBar };
if (false) {
    /** @type {?} */
    SearchBar.prototype.prefixCls;
    /** @type {?} */
    SearchBar.prototype.clearCls;
    /** @type {?} */
    SearchBar.prototype.wrapCls;
    /** @type {?} */
    SearchBar.prototype.cancelCls;
    /** @type {?} */
    SearchBar.prototype._defaultValue;
    /** @type {?} */
    SearchBar.prototype._value;
    /** @type {?} */
    SearchBar.prototype._placeholder;
    /** @type {?} */
    SearchBar.prototype._showCancelButton;
    /** @type {?} */
    SearchBar.prototype._cancelText;
    /** @type {?} */
    SearchBar.prototype._disabled;
    /** @type {?} */
    SearchBar.prototype._maxLength;
    /** @type {?} */
    SearchBar.prototype._focus;
    /** @type {?} */
    SearchBar.prototype._isSubmit;
    /** @type {?} */
    SearchBar.prototype._isCustomText;
    /** @type {?} */
    SearchBar.prototype._isClearClicking;
    /** @type {?} */
    SearchBar.prototype._syntheticPhContainerRef;
    /** @type {?} */
    SearchBar.prototype._syntheticPhRef;
    /** @type {?} */
    SearchBar.prototype._rightBtnRef;
    /** @type {?} */
    SearchBar.prototype._inputContainerRef;
    /** @type {?} */
    SearchBar.prototype._rightBtnInitMarginLeft;
    /** @type {?} */
    SearchBar.prototype._blurFromOnClear;
    /** @type {?} */
    SearchBar.prototype.locale;
    /** @type {?} */
    SearchBar.prototype._unsubscribe$;
    /** @type {?} */
    SearchBar.prototype.inputElementRef;
    /** @type {?} */
    SearchBar.prototype.onSubmit;
    /** @type {?} */
    SearchBar.prototype.onChange;
    /** @type {?} */
    SearchBar.prototype.onFocus;
    /** @type {?} */
    SearchBar.prototype.onBlur;
    /** @type {?} */
    SearchBar.prototype.onCancel;
    /** @type {?} */
    SearchBar.prototype.onClear;
    /** @type {?} */
    SearchBar.prototype._elementRef;
    /** @type {?} */
    SearchBar.prototype._localeProvider;
}

//# sourceMappingURL=data:application/json;base64,