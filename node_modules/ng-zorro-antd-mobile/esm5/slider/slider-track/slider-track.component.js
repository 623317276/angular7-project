/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var SliderTrack = /** @class */ (function () {
    function SliderTrack(_elf, _sanitizer) {
        this._elf = _elf;
        this._sanitizer = _sanitizer;
        this.prefixCls = 'am-slider';
        this._included = true;
    }
    Object.defineProperty(SliderTrack.prototype, "className", {
        get: /**
         * @return {?}
         */
        function () {
            return this._className;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._className = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderTrack.prototype, "included", {
        get: /**
         * @return {?}
         */
        function () {
            return this._included;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._included = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderTrack.prototype, "offset", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._offset = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderTrack.prototype, "length", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._length = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SliderTrack.prototype, "style", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._style = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SliderTrack.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var positonStyle = {
            left: this._offset + "%",
            width: this._length + "%"
        };
        this.elStyle = tslib_1.__assign({}, this._style, positonStyle);
    };
    SliderTrack.decorators = [
        { type: Component, args: [{
                    selector: 'SliderTrack, nzm-slider-track',
                    template: "<div *ngIf=\"included\" \n     [ngClass]=\"className\" \n     [ngStyle]=\"elStyle\" >\n</div>",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    SliderTrack.ctorParameters = function () { return [
        { type: ElementRef },
        { type: DomSanitizer }
    ]; };
    SliderTrack.propDecorators = {
        className: [{ type: Input }],
        included: [{ type: Input }],
        offset: [{ type: Input }],
        length: [{ type: Input }],
        style: [{ type: Input }]
    };
    return SliderTrack;
}());
export { SliderTrack };
if (false) {
    /** @type {?} */
    SliderTrack.prototype.prefixCls;
    /** @type {?} */
    SliderTrack.prototype.elStyle;
    /** @type {?} */
    SliderTrack.prototype._className;
    /** @type {?} */
    SliderTrack.prototype._included;
    /** @type {?} */
    SliderTrack.prototype._offset;
    /** @type {?} */
    SliderTrack.prototype._length;
    /** @type {?} */
    SliderTrack.prototype._style;
    /** @type {?} */
    SliderTrack.prototype._elf;
    /** @type {?} */
    SliderTrack.prototype._sanitizer;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLXRyYWNrLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsic2xpZGVyL3NsaWRlci10cmFjay9zbGlkZXItdHJhY2suY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFhLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7SUE0Q3ZELHFCQUFvQixJQUFnQixFQUFVLFVBQXdCO1FBQWxELFNBQUksR0FBSixJQUFJLENBQVk7UUFBVSxlQUFVLEdBQVYsVUFBVSxDQUFjO3lCQXBDMUQsV0FBVzt5QkFJTSxJQUFJO0tBZ0N5QztJQTNCMUUsc0JBQ0ksa0NBQVM7Ozs7UUFEYjtZQUVFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztTQUN4Qjs7Ozs7UUFDRCxVQUFjLEtBQWE7WUFDekIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7U0FDekI7OztPQUhBO0lBSUQsc0JBQ0ksaUNBQVE7Ozs7UUFEWjtZQUVFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQztTQUN2Qjs7Ozs7UUFDRCxVQUFhLEtBQWM7WUFDekIsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7U0FDeEI7OztPQUhBO0lBSUQsc0JBQ0ksK0JBQU07Ozs7O1FBRFYsVUFDVyxLQUFhO1lBQ3RCLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1NBQ3RCOzs7T0FBQTtJQUNELHNCQUNJLCtCQUFNOzs7OztRQURWLFVBQ1csS0FBYTtZQUN0QixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztTQUN0Qjs7O09BQUE7SUFDRCxzQkFDSSw4QkFBSzs7Ozs7UUFEVCxVQUNVLEtBQWE7WUFDckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUM7U0FDckI7OztPQUFBOzs7O0lBSUQsaUNBQVc7OztJQUFYOztRQUNFLElBQU0sWUFBWSxHQUFHO1lBQ25CLElBQUksRUFBSyxJQUFJLENBQUMsT0FBTyxNQUFHO1lBQ3hCLEtBQUssRUFBSyxJQUFJLENBQUMsT0FBTyxNQUFHO1NBQzFCLENBQUM7UUFDRixJQUFJLENBQUMsT0FBTyx3QkFDUCxJQUFJLENBQUMsTUFBTSxFQUNYLFlBQVksQ0FDaEIsQ0FBQztLQUNIOztnQkFyREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSwrQkFBK0I7b0JBQ3pDLHlHQUE0QztvQkFDNUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7aUJBQ3RDOzs7O2dCQVBtQixVQUFVO2dCQUNyQixZQUFZOzs7NEJBaUJsQixLQUFLOzJCQU9MLEtBQUs7eUJBT0wsS0FBSzt5QkFJTCxLQUFLO3dCQUlMLEtBQUs7O3NCQXhDUjs7U0FRYSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgT25DaGFuZ2VzLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1NsaWRlclRyYWNrLCBuem0tc2xpZGVyLXRyYWNrJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3NsaWRlci10cmFjay5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgU2xpZGVyVHJhY2sgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBwcmVmaXhDbHMgPSAnYW0tc2xpZGVyJztcbiAgZWxTdHlsZTogb2JqZWN0O1xuXG4gIHByaXZhdGUgX2NsYXNzTmFtZTogb2JqZWN0O1xuICBwcml2YXRlIF9pbmNsdWRlZDogYm9vbGVhbiA9IHRydWU7XG4gIHByaXZhdGUgX29mZnNldDogbnVtYmVyO1xuICBwcml2YXRlIF9sZW5ndGg6IG51bWJlcjtcbiAgcHJpdmF0ZSBfc3R5bGU6IG9iamVjdDtcblxuICBASW5wdXQoKVxuICBnZXQgY2xhc3NOYW1lKCk6IG9iamVjdCB7XG4gICAgcmV0dXJuIHRoaXMuX2NsYXNzTmFtZTtcbiAgfVxuICBzZXQgY2xhc3NOYW1lKHZhbHVlOiBvYmplY3QpIHtcbiAgICB0aGlzLl9jbGFzc05hbWUgPSB2YWx1ZTtcbiAgfVxuICBASW5wdXQoKVxuICBnZXQgaW5jbHVkZWQoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuX2luY2x1ZGVkO1xuICB9XG4gIHNldCBpbmNsdWRlZCh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2luY2x1ZGVkID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IG9mZnNldCh2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5fb2Zmc2V0ID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IGxlbmd0aCh2YWx1ZTogbnVtYmVyKSB7XG4gICAgdGhpcy5fbGVuZ3RoID0gdmFsdWU7XG4gIH1cbiAgQElucHV0KClcbiAgc2V0IHN0eWxlKHZhbHVlOiBvYmplY3QpIHtcbiAgICB0aGlzLl9zdHlsZSA9IHZhbHVlO1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBfZWxmOiBFbGVtZW50UmVmLCBwcml2YXRlIF9zYW5pdGl6ZXI6IERvbVNhbml0aXplcikge31cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICBjb25zdCBwb3NpdG9uU3R5bGUgPSB7XG4gICAgICBsZWZ0OiBgJHt0aGlzLl9vZmZzZXR9JWAsXG4gICAgICB3aWR0aDogYCR7dGhpcy5fbGVuZ3RofSVgXG4gICAgfTtcbiAgICB0aGlzLmVsU3R5bGUgPSB7XG4gICAgICAuLi50aGlzLl9zdHlsZSxcbiAgICAgIC4uLnBvc2l0b25TdHlsZVxuICAgIH07XG4gIH1cbn1cbiJdfQ==