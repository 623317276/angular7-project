/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewEncapsulation, Input, TemplateRef, EventEmitter, Output, HostBinding, HostListener } from '@angular/core';
var ListItem = /** @class */ (function () {
    function ListItem() {
        this.defaultProps = {
            prefixCls: 'am-list',
            align: 'middle',
            error: false,
            multipleLine: false,
            wrap: false,
            platform: 'ios',
            rippleStyle: {}
        };
        this.arrowCls = {};
        this.lineCls = {};
        this.wrapCls = '';
        this.rippleCls = {};
        this.rippleClicked = false;
        this._thumb_component = false;
        this._thumb_src = '';
        this._extra_component = false;
        this._extra_title = '';
        this._arrow = '';
        this._disabled = false;
        this._className = '';
        this._active = false;
        this.onClick = new EventEmitter();
    }
    Object.defineProperty(ListItem.prototype, "extra", {
        get: /**
         * @return {?}
         */
        function () {
            return this._extra;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof TemplateRef) {
                this._extra_component = true;
                this._extra = value;
            }
            else {
                this._extra_component = false;
                this._extra_title = /** @type {?} */ (value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "extra_component", {
        get: /**
         * @return {?}
         */
        function () {
            return this._extra_component;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "extra_title", {
        get: /**
         * @return {?}
         */
        function () {
            return this._extra_title;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "className", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._className = value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "arrow", {
        get: /**
         * @return {?}
         */
        function () {
            return this._arrow;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._arrow = value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "multipleLine", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.multipleLine = value === '' ? true : value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "error", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.error = value === '' ? true : value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "wrap", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.wrap = value === '' ? true : value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "align", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.align = value;
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "platform", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.defaultProps.platform = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "disabled", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (typeof value === 'boolean') {
                this._disabled = value;
            }
            else {
                if (value === 'true') {
                    this._disabled = true;
                }
                else {
                    this._disabled = false;
                }
            }
            this.setClsMap();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "thumb", {
        get: /**
         * @return {?}
         */
        function () {
            return this._thumb;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value instanceof TemplateRef) {
                this._thumb_component = true;
                this._thumb = value;
            }
            else {
                this._thumb_component = false;
                this._thumb_src = /** @type {?} */ (value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "thumb_component", {
        get: /**
         * @return {?}
         */
        function () {
            return this._thumb_component;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "thumb_src", {
        get: /**
         * @return {?}
         */
        function () {
            return this._thumb_src;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListItem.prototype, "bingClassName", {
        get: /**
         * @return {?}
         */
        function () {
            return this.wrapCls;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @return {?}
     */
    ListItem.prototype.click = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onItemClick(event);
    };
    /**
     * @return {?}
     */
    ListItem.prototype.start = /**
     * @return {?}
     */
    function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = true;
            this.setClsMap();
        }
    };
    /**
     * @return {?}
     */
    ListItem.prototype.move = /**
     * @return {?}
     */
    function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = false;
            this.setClsMap();
        }
    };
    /**
     * @return {?}
     */
    ListItem.prototype.end = /**
     * @return {?}
     */
    function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = false;
            this.setClsMap();
        }
    };
    /**
     * @return {?}
     */
    ListItem.prototype.mouse_start = /**
     * @return {?}
     */
    function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = true;
            this.setClsMap();
        }
    };
    /**
     * @return {?}
     */
    ListItem.prototype.mouse_end = /**
     * @return {?}
     */
    function () {
        if (!this._disabled && this.onClick.observers.length > 0) {
            this._active = false;
            this.setClsMap();
        }
    };
    /**
     * @return {?}
     */
    ListItem.prototype.setClsMap = /**
     * @return {?}
     */
    function () {
        var e_1, _a, _b, _c, _d, _e, _f;
        /** @type {?} */
        var classNameList = this._className.split(' ');
        /** @type {?} */
        var classNameObj = {};
        this.wrapCls = '';
        try {
            for (var classNameList_1 = tslib_1.__values(classNameList), classNameList_1_1 = classNameList_1.next(); !classNameList_1_1.done; classNameList_1_1 = classNameList_1.next()) {
                var value = classNameList_1_1.value;
                if (value) {
                    classNameObj = tslib_1.__assign({}, classNameObj, (_b = {}, _b["" + value] = true, _b));
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (classNameList_1_1 && !classNameList_1_1.done && (_a = classNameList_1.return)) _a.call(classNameList_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        /** @type {?} */
        var wrapClsObj = tslib_1.__assign((_c = {}, _c[this.defaultProps.prefixCls + "-item"] = true, _c[this.defaultProps.prefixCls + "-item-disabled"] = this._disabled, _c[this.defaultProps.prefixCls + "-item-active"] = this._active, _c[this.defaultProps.prefixCls + "-item-error"] = this.defaultProps.error, _c[this.defaultProps.prefixCls + "-item-top"] = this.defaultProps.align === 'top', _c[this.defaultProps.prefixCls + "-item-middle"] = this.defaultProps.align === 'middle', _c[this.defaultProps.prefixCls + "-item-bottom"] = this.defaultProps.align === 'bottom', _c), classNameObj);
        for (var key in wrapClsObj) {
            if (wrapClsObj[key]) {
                this.wrapCls += " " + key;
            }
        }
        this.rippleCls = (_d = {},
            _d[this.defaultProps.prefixCls + "-ripple"] = true,
            _d[this.defaultProps.prefixCls + "-ripple-animate"] = this.rippleClicked,
            _d);
        this.lineCls = (_e = {},
            _e[this.defaultProps.prefixCls + "-line"] = true,
            _e[this.defaultProps.prefixCls + "-line-multiple"] = this.defaultProps.multipleLine,
            _e[this.defaultProps.prefixCls + "-line-wrap"] = this.defaultProps.wrap,
            _e);
        this.arrowCls = (_f = {},
            _f[this.defaultProps.prefixCls + "-arrow"] = true,
            _f[this.defaultProps.prefixCls + "-arrow-horizontal"] = this._arrow === 'horizontal',
            _f[this.defaultProps.prefixCls + "-arrow-vertical"] = this._arrow === 'down' || this._arrow === 'up',
            _f[this.defaultProps.prefixCls + "-arrow-vertical-up"] = this._arrow === 'up',
            _f);
    };
    /**
     * @param {?} ev
     * @return {?}
     */
    ListItem.prototype.onItemClick = /**
     * @param {?} ev
     * @return {?}
     */
    function (ev) {
        var _this = this;
        /** @type {?} */
        var isAndroid = this.defaultProps.platform === 'android';
        if (isAndroid) {
            if (this.debounceTimeout) {
                clearTimeout(this.debounceTimeout);
                this.debounceTimeout = null;
            }
            /** @type {?} */
            var Item = ev.currentTarget;
            /** @type {?} */
            var RippleWidth = Math.max(Item.offsetHeight, Item.offsetWidth);
            /** @type {?} */
            var ClientRect_1 = ev.currentTarget.getBoundingClientRect();
            /** @type {?} */
            var pointX = ev.clientX - ClientRect_1.left - Item.offsetWidth / 2;
            /** @type {?} */
            var pointY = ev.clientY - ClientRect_1.top - Item.offsetWidth / 2;
            /** @type {?} */
            var coverRippleStyle = {
                width: RippleWidth + "px",
                height: RippleWidth + "px",
                left: pointX + "px",
                top: pointY + "px"
            };
            this.defaultProps.rippleStyle = coverRippleStyle;
            this.rippleClicked = true;
            this.setClsMap();
            this.debounceTimeout = setTimeout(function () {
                _this.rippleClicked = false;
                _this.defaultProps.rippleStyle = { display: 'none' };
                _this.setClsMap();
            }, 1000);
        }
        this.onClick.emit(ev);
    };
    /**
     * @return {?}
     */
    ListItem.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.defaultProps.rippleStyle = { display: 'none' };
        this.setClsMap();
    };
    /**
     * @return {?}
     */
    ListItem.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.debounceTimeout) {
            clearTimeout(this.debounceTimeout);
            this.debounceTimeout = null;
        }
    };
    ListItem.decorators = [
        { type: Component, args: [{
                    selector: 'ListItem, nzm-list-item',
                    template: "<div *ngIf=\"thumb_src && !thumb_component\" class=\"{{defaultProps.prefixCls}}-thumb\">\n  <img src={{thumb_src}}/>\n</div>\n<div *ngIf=\"thumb && thumb_component\" class=\"{{defaultProps.prefixCls}}-thumb\">\n  <ng-template [ngTemplateOutlet]=\"thumb\"></ng-template>\n</div>\n<div [ngClass]=\"lineCls\">\n  <div class=\"{{defaultProps.prefixCls}}-content\">\n    <ng-content></ng-content>\n  </div>\n  <div *ngIf=\"extra_title && !extra_component\"\n       class=\"{{defaultProps.prefixCls}}-extra\"\n       [innerHTML]=\"extra_title\"\n  ></div>\n  <div *ngIf=\"extra && extra_component\" class=\"{{defaultProps.prefixCls}}-extra\">\n    <ng-template [ngTemplateOutlet]=\"extra\"></ng-template>\n  </div>\n  <div *ngIf=\"arrow\" [ngClass]=\"arrowCls\" aria-hidden=\"true\"></div>\n</div>\n<div [ngClass]=\"rippleCls\" [ngStyle]=\"defaultProps.rippleStyle\"></div>\n\n",
                    encapsulation: ViewEncapsulation.None
                }] }
    ];
    /** @nocollapse */
    ListItem.ctorParameters = function () { return []; };
    ListItem.propDecorators = {
        extra: [{ type: Input }],
        className: [{ type: Input }],
        arrow: [{ type: Input }],
        multipleLine: [{ type: Input }],
        error: [{ type: Input }],
        wrap: [{ type: Input }],
        align: [{ type: Input }],
        platform: [{ type: Input }],
        disabled: [{ type: Input }],
        thumb: [{ type: Input }],
        onClick: [{ type: Output }],
        bingClassName: [{ type: HostBinding, args: ['class',] }],
        click: [{ type: HostListener, args: ['click', ['$event'],] }],
        start: [{ type: HostListener, args: ['touchstart',] }],
        move: [{ type: HostListener, args: ['touchmove',] }],
        end: [{ type: HostListener, args: ['touchend',] }],
        mouse_start: [{ type: HostListener, args: ['mousedown',] }],
        mouse_end: [{ type: HostListener, args: ['mouseup',] }]
    };
    return ListItem;
}());
export { ListItem };
if (false) {
    /** @type {?} */
    ListItem.prototype.defaultProps;
    /** @type {?} */
    ListItem.prototype.arrowCls;
    /** @type {?} */
    ListItem.prototype.lineCls;
    /** @type {?} */
    ListItem.prototype.wrapCls;
    /** @type {?} */
    ListItem.prototype.rippleCls;
    /** @type {?} */
    ListItem.prototype.rippleClicked;
    /** @type {?} */
    ListItem.prototype.debounceTimeout;
    /** @type {?} */
    ListItem.prototype._thumb_component;
    /** @type {?} */
    ListItem.prototype._thumb;
    /** @type {?} */
    ListItem.prototype._thumb_src;
    /** @type {?} */
    ListItem.prototype._extra_component;
    /** @type {?} */
    ListItem.prototype._extra;
    /** @type {?} */
    ListItem.prototype._extra_title;
    /** @type {?} */
    ListItem.prototype._arrow;
    /** @type {?} */
    ListItem.prototype._disabled;
    /** @type {?} */
    ListItem.prototype._className;
    /** @type {?} */
    ListItem.prototype._active;
    /** @type {?} */
    ListItem.prototype.onClick;
}

//# sourceMappingURL=data:application/json;base64,