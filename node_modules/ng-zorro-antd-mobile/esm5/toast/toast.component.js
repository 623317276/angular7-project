/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ViewEncapsulation, Input, TemplateRef, HostBinding, NgZone } from '@angular/core';
var ToastComponent = /** @class */ (function () {
    function ToastComponent(_zone) {
        this._zone = _zone;
        this.prefixCls = 'am-toast';
        this.isContentString = true;
        this.transitionName = 'am-fade-enter am-fade-enter-active';
        this._iconType = '';
        this._content = '';
        this.mask = true;
        this.amToast = true;
    }
    Object.defineProperty(ToastComponent.prototype, "content", {
        get: /**
         * @return {?}
         */
        function () {
            return this._content;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var _this = this;
            if (value instanceof TemplateRef) {
                this.isContentString = false;
            }
            else {
                this.isContentString = true;
            }
            this._zone.run(function () {
                _this._content = value;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastComponent.prototype, "iconType", {
        get: /**
         * @return {?}
         */
        function () {
            return this._iconType;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var _this = this;
            this._zone.run(function () {
                _this._iconType = value;
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastComponent.prototype, "amToastMask", {
        get: /**
         * @return {?}
         */
        function () {
            return this.mask;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ToastComponent.prototype, "amToastNoMask", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.mask;
        },
        enumerable: true,
        configurable: true
    });
    ToastComponent.decorators = [
        { type: Component, args: [{
                    selector: 'Toast',
                    encapsulation: ViewEncapsulation.None,
                    template: "<div class=\"{{prefixCls}}-notice {{prefixCls}}-notice-closable {{transitionName}}\">\n  <div class=\"{{prefixCls}}-notice-content\">\n    <div role=\"alert\"\n         *ngIf=\"iconType\"\n         class=\"{{prefixCls}}-text {{prefixCls}}-text-icon\"\n         aria-live=\"assertive\"\n    >\n      <Icon [type]=\"iconType\" [size]=\"'lg'\"></Icon>\n      <div *ngIf=\"isContentString\" class=\"{{prefixCls}}-text-info\">{{content}}</div>\n    </div>\n    <div *ngIf=\"!iconType\" class=\"{{prefixCls}}-text\" role=\"alert\" aria-live=\"assertive\">\n      <div *ngIf=\"isContentString\" class=\"{{prefixCls}}-text-info\">{{content}}</div>\n      <ng-template *ngIf=\"!isContentString\" [ngTemplateOutlet]=\"content\"></ng-template>\n    </div>\n  </div>\n  <a class=\"{{prefixCls}}-notice-close\">\n    <span class=\"{{prefixCls}}-notice-close-x\"></span>\n  </a>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    ToastComponent.ctorParameters = function () { return [
        { type: NgZone }
    ]; };
    ToastComponent.propDecorators = {
        mask: [{ type: Input }],
        content: [{ type: Input }],
        iconType: [{ type: Input }],
        amToast: [{ type: HostBinding, args: ['class.am-toast',] }],
        amToastMask: [{ type: HostBinding, args: ['class.am-toast-mask',] }],
        amToastNoMask: [{ type: HostBinding, args: ['class.am-toast-nomask',] }]
    };
    return ToastComponent;
}());
export { ToastComponent };
if (false) {
    /** @type {?} */
    ToastComponent.prototype.prefixCls;
    /** @type {?} */
    ToastComponent.prototype.isContentString;
    /** @type {?} */
    ToastComponent.prototype.maskClassMap;
    /** @type {?} */
    ToastComponent.prototype.transitionName;
    /** @type {?} */
    ToastComponent.prototype._iconType;
    /** @type {?} */
    ToastComponent.prototype._content;
    /** @type {?} */
    ToastComponent.prototype.mask;
    /** @type {?} */
    ToastComponent.prototype.amToast;
    /** @type {?} */
    ToastComponent.prototype._zone;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmctem9ycm8tYW50ZC1tb2JpbGUvIiwic291cmNlcyI6WyJ0b2FzdC90b2FzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOztJQXFEcEcsd0JBQW9CLEtBQWE7UUFBYixVQUFLLEdBQUwsS0FBSyxDQUFRO3lCQTdDYixVQUFVOytCQUNILElBQUk7OEJBRWQsb0NBQW9DO3lCQUV6QixFQUFFO3dCQUNnQixFQUFFO29CQUdoQyxJQUFJO3VCQTBCRCxJQUFJO0tBVWM7SUFuQ3JDLHNCQUNJLG1DQUFPOzs7O1FBRFg7WUFFRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDdEI7Ozs7O1FBQ0QsVUFBWSxLQUFnQztZQUE1QyxpQkFTQztZQVJDLElBQUksS0FBSyxZQUFZLFdBQVcsRUFBRTtnQkFDaEMsSUFBSSxDQUFDLGVBQWUsR0FBRyxLQUFLLENBQUM7YUFDOUI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUM7YUFDN0I7WUFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztnQkFDYixLQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQzthQUN2QixDQUFDLENBQUM7U0FDSjs7O09BVkE7SUFXRCxzQkFDSSxvQ0FBUTs7OztRQURaO1lBRUUsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO1NBQ3ZCOzs7OztRQUNELFVBQWEsS0FBYTtZQUExQixpQkFJQztZQUhDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDO2dCQUNiLEtBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFDO2FBQ3hCLENBQUMsQ0FBQztTQUNKOzs7T0FMQTtJQVNELHNCQUNJLHVDQUFXOzs7O1FBRGY7WUFFRSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7U0FDbEI7OztPQUFBO0lBQ0Qsc0JBQ0kseUNBQWE7Ozs7UUFEakI7WUFFRSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQztTQUNuQjs7O09BQUE7O2dCQWpERixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLE9BQU87b0JBQ2pCLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxzM0JBQXFDO2lCQUN0Qzs7OztnQkFOdUUsTUFBTTs7O3VCQWdCM0UsS0FBSzswQkFFTCxLQUFLOzJCQWNMLEtBQUs7MEJBVUwsV0FBVyxTQUFDLGdCQUFnQjs4QkFFNUIsV0FBVyxTQUFDLHFCQUFxQjtnQ0FJakMsV0FBVyxTQUFDLHVCQUF1Qjs7eUJBaER0Qzs7U0FPYSxjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBWaWV3RW5jYXBzdWxhdGlvbiwgSW5wdXQsIFRlbXBsYXRlUmVmLCBIb3N0QmluZGluZywgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1RvYXN0JyxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgdGVtcGxhdGVVcmw6ICcuL3RvYXN0LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBUb2FzdENvbXBvbmVudCB7XG4gIHByZWZpeENsczogc3RyaW5nID0gJ2FtLXRvYXN0JztcbiAgaXNDb250ZW50U3RyaW5nOiBib29sZWFuID0gdHJ1ZTtcbiAgbWFza0NsYXNzTWFwO1xuICB0cmFuc2l0aW9uTmFtZSA9ICdhbS1mYWRlLWVudGVyIGFtLWZhZGUtZW50ZXItYWN0aXZlJztcblxuICBwcml2YXRlIF9pY29uVHlwZTogc3RyaW5nID0gJyc7XG4gIHByaXZhdGUgX2NvbnRlbnQ6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4gPSAnJztcblxuICBASW5wdXQoKVxuICBtYXNrOiBib29sZWFuID0gdHJ1ZTtcbiAgQElucHV0KClcbiAgZ2V0IGNvbnRlbnQoKTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbnRlbnQ7XG4gIH1cbiAgc2V0IGNvbnRlbnQodmFsdWU6IHN0cmluZyB8IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBUZW1wbGF0ZVJlZikge1xuICAgICAgdGhpcy5pc0NvbnRlbnRTdHJpbmcgPSBmYWxzZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5pc0NvbnRlbnRTdHJpbmcgPSB0cnVlO1xuICAgIH1cbiAgICB0aGlzLl96b25lLnJ1bigoKSA9PiB7XG4gICAgICB0aGlzLl9jb250ZW50ID0gdmFsdWU7XG4gICAgfSk7XG4gIH1cbiAgQElucHV0KClcbiAgZ2V0IGljb25UeXBlKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMuX2ljb25UeXBlO1xuICB9XG4gIHNldCBpY29uVHlwZSh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fem9uZS5ydW4oKCkgPT4ge1xuICAgICAgdGhpcy5faWNvblR5cGUgPSB2YWx1ZTtcbiAgICB9KTtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYW0tdG9hc3QnKVxuICBhbVRvYXN0OiBib29sZWFuID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS10b2FzdC1tYXNrJylcbiAgZ2V0IGFtVG9hc3RNYXNrKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLm1hc2s7XG4gIH1cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5hbS10b2FzdC1ub21hc2snKVxuICBnZXQgYW1Ub2FzdE5vTWFzaygpOiBib29sZWFuIHtcbiAgICByZXR1cm4gIXRoaXMubWFzaztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX3pvbmU6IE5nWm9uZSkge31cbn1cbiJdfQ==