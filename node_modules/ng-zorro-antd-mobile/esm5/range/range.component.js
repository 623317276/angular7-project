/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, ElementRef, HostBinding } from '@angular/core';
var Range = /** @class */ (function () {
    function Range(_elf) {
        this._elf = _elf;
        this.prefixCls = 'am-slider';
        this.offset = [];
        this.length = [];
        this._min = 0;
        this._max = 100;
        this._step = 1;
        this._defaultValue = [0, 0, 0];
        this._disabled = false;
        this._marks = {};
        this._dots = false;
        this._included = true;
        this._count = 1;
        this._allowCross = true;
        this._handleStyle = [];
        this._trackStyle = [];
        this.onChange = new EventEmitter();
        this.onAfterChange = new EventEmitter();
        this.amWrapper = true;
    }
    Object.defineProperty(Range.prototype, "min", {
        get: /**
         * @return {?}
         */
        function () {
            return this._min;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._min = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "max", {
        get: /**
         * @return {?}
         */
        function () {
            return this._max;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._max = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "step", {
        get: /**
         * @return {?}
         */
        function () {
            return this._step;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._step = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._value = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "defaultValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._defaultValue = value;
            this._value = this._defaultValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._disabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "marks", {
        get: /**
         * @return {?}
         */
        function () {
            return this._marks;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._marks = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "dots", {
        get: /**
         * @return {?}
         */
        function () {
            return this._dots;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._dots = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "included", {
        get: /**
         * @return {?}
         */
        function () {
            return this._included;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._included = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "count", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._count = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "allowCross", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._allowCross = value;
            this.setValueBound();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "pushable", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._pushable = value;
            if (this.verifyPushable()) {
                this.setValueBound();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "handleStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this._handleStyle;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._handleStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "trackStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this._trackStyle;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._trackStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Range.prototype, "railStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return this._railStyle;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._railStyle = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    Range.prototype.setCls = /**
     * @return {?}
     */
    function () {
        var _a;
        this.sliderCls = (_a = {},
            _a[this.prefixCls + "-disabled"] = this._disabled,
            _a);
    };
    /**
     * @return {?}
     */
    Range.prototype.initialValue = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var minTemp = this._min;
        /** @type {?} */
        var initialValue = Array.apply(null, Array(this._count + 1)).map(function () {
            return minTemp;
        });
        this._defaultValue = this._defaultValue !== undefined ? this._defaultValue : initialValue;
        this._value = this._value !== undefined ? this._value : this._defaultValue;
        if (this._count > 0) {
            this.upperBound = Math.max.apply(Math, tslib_1.__spread(this._value));
            this.lowerBound = Math.min.apply(Math, tslib_1.__spread(this._value));
        }
    };
    /**
     * @param {?} e
     * @param {?} i
     * @return {?}
     */
    Range.prototype.handleChange = /**
     * @param {?} e
     * @param {?} i
     * @return {?}
     */
    function (e, i) {
        /** @type {?} */
        var temp = tslib_1.__spread(this._value);
        if (typeof this._pushable === 'boolean' && this._pushable) {
            /** @type {?} */
            var diff_1 = e - this._value[i];
            temp = temp.map(function (v) { return (v = v + diff_1); });
        }
        else {
            temp[i] = e;
        }
        this.upperBound = Math.max.apply(Math, tslib_1.__spread(temp));
        this.lowerBound = Math.min.apply(Math, tslib_1.__spread(temp));
        this.setTrackStyle(temp);
        this.onChange.emit(temp);
    };
    /**
     * @param {?} e
     * @param {?} i
     * @return {?}
     */
    Range.prototype.handleAfterChange = /**
     * @param {?} e
     * @param {?} i
     * @return {?}
     */
    function (e, i) {
        var _this = this;
        setTimeout(function () {
            _this._value[i] = e;
            _this.upperBound = Math.max.apply(Math, tslib_1.__spread(_this._value));
            _this.lowerBound = Math.min.apply(Math, tslib_1.__spread(_this._value));
            _this.setTrackStyle(_this._value);
            _this.onAfterChange.emit(_this._value);
            _this.setValueBound();
        }, 0);
    };
    /**
     * @param {?} value
     * @return {?}
     */
    Range.prototype.setTrackStyle = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value && value.length === this._count + 1) {
            value.sort(function (a, b) { return a - b; });
            for (var i = 0; i < this._count; i++) {
                this.offset[i] = (value[i] * 100) / (this._max - this._min);
                this.length[i] = ((value[i + 1] - value[i]) * 100) / (this._max - this._min);
            }
        }
    };
    /**
     * @return {?}
     */
    Range.prototype.setValueBound = /**
     * @return {?}
     */
    function () {
        this.maxBound = [];
        this.minBound = [];
        if (this._allowCross || this._handleCount <= 1) {
            for (var i = 0; i < this._handleCount; i++) {
                this.maxBound[i] = this._max;
                this.minBound[i] = this._min;
            }
        }
        else {
            if (typeof this._pushable !== 'number' || (typeof this._pushable === 'boolean' && this._pushable)) {
                this._pushable = 0;
            }
            for (var i = 0; i < this._handleCount; i++) {
                this.maxBound[i] = i === this._handleCount - 1 ? this._max : this._value[i + 1] - this._pushable;
                this.minBound[i] = i === 0 ? this._min : this._value[i - 1] + this._pushable;
            }
        }
    };
    /**
     * @return {?}
     */
    Range.prototype.verifyPushable = /**
     * @return {?}
     */
    function () {
        if (typeof this._pushable === 'number') {
            for (var i = 1; i < this._handleCount; i++) {
                /** @type {?} */
                var diff = this._value[i] - this._value[i - 1];
                if (diff < this._pushable) {
                    return false;
                }
            }
        }
        return true;
    };
    /**
     * @return {?}
     */
    Range.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this._max === undefined || this._min === undefined) {
            return;
        }
        if (this.verifyPushable()) {
            this.setValueBound();
            this._handleCount = this._count + 1;
            this.setCls();
            /** @type {?} */
            var sliderCoords = this._elf.nativeElement.getElementsByClassName('am-slider')[0].getBoundingClientRect();
            this.sliderLength = sliderCoords.width;
            this.sliderStart = sliderCoords.left;
            this.initialValue();
        }
    };
    Range.decorators = [
        { type: Component, args: [{
                    selector: 'Range , nzm-range',
                    template: "<div class=\"am-slider\" [ngClass]=\"sliderCls\">\n  <div class=\"am-slider-rail\" [ngStyle]=\"railStyle\"></div>\n  <SliderTrack *ngFor=\"let off of offset ; let i = index\"\n               [className]=\"'am-slider-track'\"\n               [included]=\"included\"\n               [style]=\"trackStyle[i]\"\n               [offset]=\"off\"\n               [length]=\"length[i]\"\n  ></SliderTrack>\n  <SliderSteps [max]=\"max\"\n               [min]=\"min\"\n               [dots]=\"dots\"\n               [step]=\"step\"\n               [marks]=\"marks\"\n               [upperBound]=\"upperBound\"\n               [lowerBound]=\"lowerBound\"\n  ></SliderSteps>\n  <SliderHandle *ngFor=\"let val of value ; let i = index\"\n                [max]=\"max\"\n                [min]=\"min\"\n                [maxBound]=\"maxBound[i]\"\n                [minBound]=\"minBound[i]\"\n                [value]=\"val\"\n                [step]=\"step\"\n                [disabled]=\"disabled\"\n                [sliderLength]=\"sliderLength\"\n                [sliderStart]=\"sliderStart\"\n                [handleStyle]=\"handleStyle[i]\"\n                (onChange)=\"handleChange($event , i)\"\n                (onAfterChange)=\"handleAfterChange($event , i)\"\n  ></SliderHandle>\n  <SliderMarks [max]=\"max\"\n               [min]=\"min\"\n               [marks]=\"marks\"\n               [upperBound]=\"upperBound\"\n               [lowerBound]=\"lowerBound\"\n  ></SliderMarks>\n</div>\n"
                }] }
    ];
    /** @nocollapse */
    Range.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    Range.propDecorators = {
        min: [{ type: Input }],
        max: [{ type: Input }],
        step: [{ type: Input }],
        value: [{ type: Input }],
        defaultValue: [{ type: Input }],
        disabled: [{ type: Input }],
        marks: [{ type: Input }],
        dots: [{ type: Input }],
        included: [{ type: Input }],
        count: [{ type: Input }],
        allowCross: [{ type: Input }],
        pushable: [{ type: Input }],
        handleStyle: [{ type: Input }],
        trackStyle: [{ type: Input }],
        railStyle: [{ type: Input }],
        onChange: [{ type: Output }],
        onAfterChange: [{ type: Output }],
        amWrapper: [{ type: HostBinding, args: ['class.am-slider-wrapper',] }]
    };
    return Range;
}());
export { Range };
if (false) {
    /** @type {?} */
    Range.prototype.prefixCls;
    /** @type {?} */
    Range.prototype.offset;
    /** @type {?} */
    Range.prototype.length;
    /** @type {?} */
    Range.prototype.upperBound;
    /** @type {?} */
    Range.prototype.lowerBound;
    /** @type {?} */
    Range.prototype.maxBound;
    /** @type {?} */
    Range.prototype.minBound;
    /** @type {?} */
    Range.prototype.sliderCls;
    /** @type {?} */
    Range.prototype.sliderLength;
    /** @type {?} */
    Range.prototype.sliderStart;
    /** @type {?} */
    Range.prototype._min;
    /** @type {?} */
    Range.prototype._max;
    /** @type {?} */
    Range.prototype._step;
    /** @type {?} */
    Range.prototype._value;
    /** @type {?} */
    Range.prototype._defaultValue;
    /** @type {?} */
    Range.prototype._disabled;
    /** @type {?} */
    Range.prototype._marks;
    /** @type {?} */
    Range.prototype._dots;
    /** @type {?} */
    Range.prototype._included;
    /** @type {?} */
    Range.prototype._count;
    /** @type {?} */
    Range.prototype._allowCross;
    /** @type {?} */
    Range.prototype._pushable;
    /** @type {?} */
    Range.prototype._handleStyle;
    /** @type {?} */
    Range.prototype._trackStyle;
    /** @type {?} */
    Range.prototype._railStyle;
    /** @type {?} */
    Range.prototype._handleCount;
    /** @type {?} */
    Range.prototype.onChange;
    /** @type {?} */
    Range.prototype.onAfterChange;
    /** @type {?} */
    Range.prototype.amWrapper;
    /** @type {?} */
    Range.prototype._elf;
}

//# sourceMappingURL=data:application/json;base64,