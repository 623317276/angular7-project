/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, ElementRef, EventEmitter, Input, Output, ViewEncapsulation, HostBinding, NgZone } from '@angular/core';
import { CustomInputService } from './custom-input.service';
var CustomInput = /** @class */ (function () {
    function CustomInput(_ref, _customInputService, _ngZone) {
        var _this = this;
        this._ref = _ref;
        this._customInputService = _customInputService;
        this._ngZone = _ngZone;
        this.keyboardPrefixCls = 'am-number-keyboard';
        this.focus = false;
        this._value = '';
        this._defaultValue = '';
        this._placeholder = '';
        this._editable = true;
        this._disabled = false;
        this._setFocus = false;
        this.onChange = new EventEmitter();
        this.onBlur = new EventEmitter();
        this.onFocus = new EventEmitter();
        this.clsFakeContainer = true;
        this.inputFocus = function () {
            _this.removeBlurListener();
            /** @type {?} */
            var focus = _this.focus;
            if (!focus || _this._setFocus) {
                _this.onInputFocus();
            }
            setTimeout(function () {
                _this.addBlurListener();
            }, 50);
        };
        this.doBlur = function (ev) {
            /** @type {?} */
            var value = _this._value;
            /** @type {?} */
            var parentFound = false;
            /** @type {?} */
            var isInput = false;
            /** @type {?} */
            var isKeyboard = false;
            /** @type {?} */
            var isClear = false;
            /** @type {?} */
            var target = ev.target;
            while (target && target !== null && !parentFound) {
                if (target === _this._ref.nativeElement) {
                    parentFound = true;
                }
                if (target.localName === 'custominput') {
                    isInput = true;
                }
                if (target.localName === 'customkeyboard') {
                    isKeyboard = true;
                }
                if (target.className.indexOf('am-input-clear') >= 0) {
                    isClear = true;
                }
                target = target.parentElement;
            }
            // 当点击目标是本身的时候，获取焦点、不隐藏keyboard
            // 当点击目标不是本身但是其他的custom-input时，失去焦点、不隐藏keyboard
            // 当点击目标是keyboard时，不失去焦点，不隐藏keyboard
            if (parentFound) {
                _this.focus = true;
            }
            else if (isInput) {
                _this._setFocus = false;
                _this.focus = false;
                _this.onBlur.emit(_this._value);
            }
            if (_this.focus && isKeyboard) {
                _this.focus = true;
                _this.onKeyboardClick(CustomInputService.clickValue);
            }
            if (!parentFound && !isInput && !isKeyboard && !isClear && !_this._setFocus) {
                _this.focus = false;
                _this._setFocus = false;
                _this.onBlur.emit(_this._value);
                CustomInputService.hideKeyboard();
            }
            _this.setFakeInputCls();
        };
        this.removeBlurListener = function () {
            document.removeEventListener('click', _this.doBlur, false);
        };
        this.addBlurListener = function () {
            document.addEventListener('click', _this.doBlur, false);
        };
        this.onInputBlur = function (value) {
            _this.focus = false;
            _this.setFakeInputCls();
            _this.onBlur.emit(_this._value);
            CustomInputService.hideKeyboard();
        };
        this.onInputFocus = function () {
            _this.onFocus.emit(_this._value);
            _this.focus = true;
            _this._setFocus = false;
            _this.setFakeInputCls();
            setTimeout(function () {
                CustomInputService.showKeyboard();
            }, 100);
        };
        this.setFakeInputCls = function () {
            var _a;
            _this.fakeInputCls = (_a = {},
                _a["fake-input"] = true,
                _a['fake-input-disabled'] = _this._disabled,
                _a['focus'] = _this.focus,
                _a);
        };
        this.setContainerCls = function () {
            _this.clsFakeContainerLeft = _this._moneyKeyboardAlign === 'left';
        };
        this.onKeyboardClick = function (keyboardItemValue) {
            /** @type {?} */
            var valueAfterChange;
            // 删除键
            if (keyboardItemValue === 'delete') {
                valueAfterChange = _this._value.substring(0, _this._value.length - 1);
                _this.onChange.emit(valueAfterChange);
                // 确认键
            }
            else if (keyboardItemValue === 'confirm') {
                valueAfterChange = _this._value;
                _this.onChange.emit(valueAfterChange);
                _this.onInputBlur(_this._value);
                // 收起键
            }
            else if (keyboardItemValue === 'hide') {
                valueAfterChange = _this._value;
                _this.onInputBlur(valueAfterChange);
            }
            else {
                if (_this._maxLength !== undefined &&
                    +_this._maxLength >= 0 &&
                    (_this._value + keyboardItemValue).length > _this._maxLength) {
                    valueAfterChange = (_this._value + keyboardItemValue).substr(0, _this._maxLength);
                    _this.onChange.emit(valueAfterChange);
                }
                else {
                    valueAfterChange = _this._value + keyboardItemValue;
                    _this.onChange.emit(valueAfterChange);
                }
            }
            _this._ngZone.run(function () {
                _this._value = valueAfterChange;
            });
        };
    }
    Object.defineProperty(CustomInput.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            if (typeof v === undefined || v === null) {
                this._value = '';
            }
            else if (this._maxLength !== undefined && this._maxLength >= 0) {
                this._value = v.substr(0, this._maxLength);
            }
            else {
                this._value = v;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomInput.prototype, "defaultValue", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._defaultValue = value;
            this._value = this._defaultValue;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomInput.prototype, "maxLength", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._maxLength = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomInput.prototype, "placeholder", {
        get: /**
         * @return {?}
         */
        function () {
            return this._placeholder;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._placeholder = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomInput.prototype, "editable", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._editable = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomInput.prototype, "disabled", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._disabled = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomInput.prototype, "moneyKeyboardAlign", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._moneyKeyboardAlign = value;
            this.setContainerCls();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CustomInput.prototype, "setFocus", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value) {
                this._setFocus = value.focus;
                if (this._setFocus) {
                    this.inputFocus();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    CustomInput.prototype.onFakeInputClick = /**
     * @return {?}
     */
    function () {
        if (this._preventKeyboard) {
            return;
        }
        this.inputFocus();
    };
    /**
     * @return {?}
     */
    CustomInput.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this._preventKeyboard = this._disabled || !this._editable;
        this.setFakeInputCls();
        this.setContainerCls();
    };
    /**
     * @return {?}
     */
    CustomInput.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.removeBlurListener();
        if (CustomInputService) {
            CustomInputService.hideKeyboard();
            CustomInputService.compRef = null;
        }
        /** @type {?} */
        var container = document.querySelector("#" + this.keyboardPrefixCls + "-container");
        if (container) {
            container.remove();
        }
    };
    CustomInput.decorators = [
        { type: Component, args: [{
                    selector: 'CustomInput',
                    template: "<div *ngIf=\"value===''\" class=\"fake-input-placeholder\">\n  {{placeholder}}\n</div>\n<div [ngClass]=\"fakeInputCls\" (click)=\"onFakeInputClick()\">\n  {{value}}\n</div>\n",
                    encapsulation: ViewEncapsulation.None,
                    providers: [CustomInputService]
                }] }
    ];
    /** @nocollapse */
    CustomInput.ctorParameters = function () { return [
        { type: ElementRef },
        { type: CustomInputService },
        { type: NgZone }
    ]; };
    CustomInput.propDecorators = {
        value: [{ type: Input }],
        defaultValue: [{ type: Input }],
        maxLength: [{ type: Input }],
        placeholder: [{ type: Input }],
        editable: [{ type: Input }],
        disabled: [{ type: Input }],
        moneyKeyboardAlign: [{ type: Input }],
        setFocus: [{ type: Input }],
        onChange: [{ type: Output }],
        onBlur: [{ type: Output }],
        onFocus: [{ type: Output }],
        clsFakeContainer: [{ type: HostBinding, args: ['class.fake-input-container',] }],
        clsFakeContainerLeft: [{ type: HostBinding, args: ['class.fake-input-container-left',] }]
    };
    return CustomInput;
}());
export { CustomInput };
if (false) {
    /** @type {?} */
    CustomInput.prototype.keyboardPrefixCls;
    /** @type {?} */
    CustomInput.prototype.fakeInputCls;
    /** @type {?} */
    CustomInput.prototype.focus;
    /** @type {?} */
    CustomInput.prototype._value;
    /** @type {?} */
    CustomInput.prototype._defaultValue;
    /** @type {?} */
    CustomInput.prototype._placeholder;
    /** @type {?} */
    CustomInput.prototype._maxLength;
    /** @type {?} */
    CustomInput.prototype._editable;
    /** @type {?} */
    CustomInput.prototype._disabled;
    /** @type {?} */
    CustomInput.prototype._setFocus;
    /** @type {?} */
    CustomInput.prototype._preventKeyboard;
    /** @type {?} */
    CustomInput.prototype._moneyKeyboardAlign;
    /** @type {?} */
    CustomInput.prototype.onChange;
    /** @type {?} */
    CustomInput.prototype.onBlur;
    /** @type {?} */
    CustomInput.prototype.onFocus;
    /** @type {?} */
    CustomInput.prototype.clsFakeContainer;
    /** @type {?} */
    CustomInput.prototype.clsFakeContainerLeft;
    /** @type {?} */
    CustomInput.prototype.inputFocus;
    /** @type {?} */
    CustomInput.prototype.doBlur;
    /** @type {?} */
    CustomInput.prototype.removeBlurListener;
    /** @type {?} */
    CustomInput.prototype.addBlurListener;
    /** @type {?} */
    CustomInput.prototype.onInputBlur;
    /** @type {?} */
    CustomInput.prototype.onInputFocus;
    /** @type {?} */
    CustomInput.prototype.setFakeInputCls;
    /** @type {?} */
    CustomInput.prototype.setContainerCls;
    /** @type {?} */
    CustomInput.prototype.onKeyboardClick;
    /** @type {?} */
    CustomInput.prototype._ref;
    /** @type {?} */
    CustomInput.prototype._customInputService;
    /** @type {?} */
    CustomInput.prototype._ngZone;
}

//# sourceMappingURL=data:application/json;base64,