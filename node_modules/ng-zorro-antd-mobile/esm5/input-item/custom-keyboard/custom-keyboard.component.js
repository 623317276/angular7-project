/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Component, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { LocaleProviderService } from '../../locale-provider/locale-provider.service';
import { takeUntil } from 'rxjs/operators';
import { Subject } from 'rxjs';
var CustomKeyboard = /** @class */ (function () {
    function CustomKeyboard(_localeProvider) {
        this._localeProvider = _localeProvider;
        this.prefixCls = 'am-number-keyboard';
        this.okText = '';
        this._locale = {};
        this._unsubscribe$ = new Subject();
        this.onClick = new EventEmitter();
    }
    /**
     * @param {?} e
     * @return {?}
     */
    CustomKeyboard.prototype.tdClick = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.onClick.emit(e);
    };
    /**
     * @return {?}
     */
    CustomKeyboard.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        var _a, _b;
        this.wrapCls = (_a = {},
            _a[this.prefixCls + "-item"] = true,
            _a);
        this.wrapperCls = (_b = {},
            _b[this.prefixCls + "-wrapper"] = true,
            _b);
        this._localeProvider.localeChange.pipe(takeUntil(this._unsubscribe$)).subscribe(function (_) {
            _this._locale = _this._localeProvider.getLocaleSubObj('InputItem');
            _this.okText = _this._locale.confirmLabel;
        });
    };
    /**
     * @return {?}
     */
    CustomKeyboard.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this._unsubscribe$.next();
        this._unsubscribe$.complete();
    };
    CustomKeyboard.decorators = [
        { type: Component, args: [{
                    selector: 'CustomKeyboard',
                    template: "<div [ngClass]=\"wrapperCls\">\n<table>\n  <tbody>\n    <tr>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(1)\">1\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(2)\">2\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(3)\">3\n      </td>\n      <td class=\"keyboard-delete\" [rowSpan]=\"2\" [ngClass]=\"wrapCls\" (click)=\"tdClick('delete')\">\n      </td>\n    </tr>\n    <tr>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(4)\">4\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(5)\">5\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(6)\">6\n      </td>\n\n    </tr>\n    <tr>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(7)\">7\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(8)\">8\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(9)\">9\n      </td>\n      <td class=\"keyboard-confirm\" [rowSpan]=\"2\" [ngClass]=\"wrapCls\" (click)=\"tdClick('confirm')\">{{okText}}\n      </td>\n    </tr>\n    <tr>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick('.')\">.\n      </td>\n      <td [ngClass]=\"wrapCls\" (click)=\"tdClick(0)\">0\n      </td>\n      <td class=\"keyboard-hide\" [ngClass]=\"wrapCls\" (click)=\"tdClick('hide')\">\n      </td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n",
                    encapsulation: ViewEncapsulation.None,
                    providers: [LocaleProviderService]
                }] }
    ];
    /** @nocollapse */
    CustomKeyboard.ctorParameters = function () { return [
        { type: LocaleProviderService }
    ]; };
    CustomKeyboard.propDecorators = {
        onClick: [{ type: Output }]
    };
    return CustomKeyboard;
}());
export { CustomKeyboard };
if (false) {
    /** @type {?} */
    CustomKeyboard.prototype.prefixCls;
    /** @type {?} */
    CustomKeyboard.prototype.wrapCls;
    /** @type {?} */
    CustomKeyboard.prototype.okText;
    /** @type {?} */
    CustomKeyboard.prototype.wrapperCls;
    /** @type {?} */
    CustomKeyboard.prototype._locale;
    /** @type {?} */
    CustomKeyboard.prototype._unsubscribe$;
    /** @type {?} */
    CustomKeyboard.prototype.onClick;
    /** @type {?} */
    CustomKeyboard.prototype._localeProvider;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLWtleWJvYXJkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nLXpvcnJvLWFudGQtbW9iaWxlLyIsInNvdXJjZXMiOlsiaW5wdXQtaXRlbS9jdXN0b20ta2V5Ym9hcmQvY3VzdG9tLWtleWJvYXJkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUEwQixNQUFNLGVBQWUsQ0FBQztBQUNuSCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwrQ0FBK0MsQ0FBQztBQUN0RixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQzs7SUFvQjdCLHdCQUFvQixlQUFzQztRQUF0QyxvQkFBZSxHQUFmLGVBQWUsQ0FBdUI7eUJBWHRDLG9CQUFvQjtzQkFFdkIsRUFBRTt1QkFHSSxFQUFFOzZCQUNELElBQUksT0FBTyxFQUFRO3VCQUdqQyxJQUFJLFlBQVksRUFBTztLQUU2Qjs7Ozs7SUFFOUQsZ0NBQU87Ozs7SUFBUCxVQUFRLENBQUM7UUFDUCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN0Qjs7OztJQUVELGlDQUFROzs7SUFBUjtRQUFBLGlCQVdDOztRQVZDLElBQUksQ0FBQyxPQUFPO1lBQ1YsR0FBSSxJQUFJLENBQUMsU0FBUyxVQUFPLElBQUcsSUFBSTtlQUNqQyxDQUFDO1FBQ0YsSUFBSSxDQUFDLFVBQVU7WUFDYixHQUFJLElBQUksQ0FBQyxTQUFTLGFBQVUsSUFBRyxJQUFJO2VBQ3BDLENBQUM7UUFDRixJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxVQUFBLENBQUM7WUFDL0UsS0FBSSxDQUFDLE9BQU8sR0FBRyxLQUFJLENBQUMsZUFBZSxDQUFDLGVBQWUsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNqRSxLQUFJLENBQUMsTUFBTSxHQUFHLEtBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO1NBQ3pDLENBQUMsQ0FBQztLQUNKOzs7O0lBRUQsb0NBQVc7OztJQUFYO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUMxQixJQUFJLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDO0tBQy9COztnQkF4Q0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLGt5Q0FBK0M7b0JBQy9DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxTQUFTLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztpQkFDbkM7Ozs7Z0JBVFEscUJBQXFCOzs7MEJBbUIzQixNQUFNOzt5QkFwQlQ7O1NBV2EsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0VuY2Fwc3VsYXRpb24sIE9uRGVzdHJveSwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvY2FsZVByb3ZpZGVyU2VydmljZSB9IGZyb20gJy4uLy4uL2xvY2FsZS1wcm92aWRlci9sb2NhbGUtcHJvdmlkZXIuc2VydmljZSc7XG5pbXBvcnQgeyB0YWtlVW50aWwgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ0N1c3RvbUtleWJvYXJkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2N1c3RvbS1rZXlib2FyZC5jb21wb25lbnQuaHRtbCcsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIHByb3ZpZGVyczogW0xvY2FsZVByb3ZpZGVyU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgQ3VzdG9tS2V5Ym9hcmQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIHByZWZpeENsczogc3RyaW5nID0gJ2FtLW51bWJlci1rZXlib2FyZCc7XG4gIHdyYXBDbHM6IG9iamVjdDtcbiAgb2tUZXh0OiBzdHJpbmcgPSAnJztcbiAgd3JhcHBlckNsczogb2JqZWN0O1xuXG4gIHByaXZhdGUgX2xvY2FsZTogYW55ID0ge307XG4gIHByaXZhdGUgX3Vuc3Vic2NyaWJlJCA9IG5ldyBTdWJqZWN0PHZvaWQ+KCk7XG5cbiAgQE91dHB1dCgpXG4gIG9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9sb2NhbGVQcm92aWRlcjogTG9jYWxlUHJvdmlkZXJTZXJ2aWNlKSB7fVxuXG4gIHRkQ2xpY2soZSkge1xuICAgIHRoaXMub25DbGljay5lbWl0KGUpO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy53cmFwQ2xzID0ge1xuICAgICAgW2Ake3RoaXMucHJlZml4Q2xzfS1pdGVtYF06IHRydWVcbiAgICB9O1xuICAgIHRoaXMud3JhcHBlckNscyA9IHtcbiAgICAgIFtgJHt0aGlzLnByZWZpeENsc30td3JhcHBlcmBdOiB0cnVlXG4gICAgfTtcbiAgICB0aGlzLl9sb2NhbGVQcm92aWRlci5sb2NhbGVDaGFuZ2UucGlwZSh0YWtlVW50aWwodGhpcy5fdW5zdWJzY3JpYmUkKSkuc3Vic2NyaWJlKF8gPT4ge1xuICAgICAgdGhpcy5fbG9jYWxlID0gdGhpcy5fbG9jYWxlUHJvdmlkZXIuZ2V0TG9jYWxlU3ViT2JqKCdJbnB1dEl0ZW0nKTtcbiAgICAgIHRoaXMub2tUZXh0ID0gdGhpcy5fbG9jYWxlLmNvbmZpcm1MYWJlbDtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuX3Vuc3Vic2NyaWJlJC5uZXh0KCk7XG4gICAgdGhpcy5fdW5zdWJzY3JpYmUkLmNvbXBsZXRlKCk7XG4gIH1cbn1cbiJdfQ==