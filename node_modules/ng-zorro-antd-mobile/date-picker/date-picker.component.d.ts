import { OnInit, ElementRef, ViewContainerRef, OnDestroy, AfterViewInit } from '@angular/core';
import { Subject } from 'rxjs';
import { LocaleProviderService } from '../locale-provider/locale-provider.service';
import { DatePickerOptions } from './date-picker-options.provider';
export declare type DateMode = 'date' | 'time' | 'datetime' | 'year' | 'month';
export declare class DatePickerComponent implements OnInit, OnDestroy, AfterViewInit {
    elementRef: ElementRef;
    options: DatePickerOptions;
    localeProviderService: LocaleProviderService;
    transitionName: string;
    maskTransitionName: string;
    modeSwitch: number[];
    localMinDate: any[];
    localMaxDate: any[];
    currentTime: any[];
    indexArray: any;
    min_date: any[];
    max_date: any[];
    current_time: any[];
    clos: number;
    resultArr: any;
    resultDate: Date;
    data: any[];
    dataWithStr: any[];
    startY: number;
    differY: number;
    currentY: number;
    len: number;
    dom: any;
    index: number;
    maxY: number;
    lineHeight: number;
    selectedTarget: any[];
    isMouseDown: boolean;
    currentPicker: any;
    localeNew: any;
    unsubscribe$: Subject<void>;
    Velocity: {
        record: (y: any) => void;
        getVelocity: (y: any) => number;
    };
    picker: ViewContainerRef;
    panstart(event: any): void;
    panmove(event: any): void;
    panend(event: any): void;
    constructor(elementRef: ElementRef, options: DatePickerOptions, localeProviderService: LocaleProviderService);
    init(): void;
    reloadPicker(): void;
    localeProvider(): void;
    transformDateFormat(date: any): any;
    preZero(val: number): string;
    getInitValueIndex(): void;
    checkMode(mode: any): void;
    initResult(): void;
    checkTime(): boolean;
    judgeTime(arr1: any, arr2: any): boolean;
    judgeEqualArray(arr1: any, arr2: any, length: any): boolean;
    initReady(): void;
    initData(tempArr: any, min: any, max: any, str: any, idx: any): void;
    ok(): void;
    handleReslut(): Date;
    cancel(): void;
    setTransitionName(): void;
    setCurrentSelected(checkIdx: any, sta: any, indexT: any): void;
    initRangeArr(min: any, max: any, indexT: any, checkIdx: any, str: any): void;
    getEventTarget(event: any): any;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
}
